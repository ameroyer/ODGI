============================================================== FOLD 02
Tensorflow version 1.10.1
ODGI - vedai_fold02, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold02
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.0008
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold02
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold02_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold02_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold02_val
   using grid size [16 16]
   using grid size [8 8]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 8, 8, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 8.00e-04
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold02/tiny-yolov2_odgi_512_256/09-28_10-15

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold02/tiny-yolov2_odgi_512_256/09-28_10-15[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 8.64600, loss 2 = 5.25371
  > Step 251 (epoch 7): loss 1 = 0.77499, loss 2 = 1.10062
val eval at step 500: map@0.50 = 0.16513 - map@0.75 = 0.01794
  > Step 501 (epoch 13): loss 1 = 0.49745, loss 2 = 0.89821
  > Step 751 (epoch 19): loss 1 = 0.42530, loss 2 = 0.82480
val eval at step 1000: map@0.50 = 0.36432 - map@0.75 = 0.07951
  > Step 1001 (epoch 25): loss 1 = 0.28785, loss 2 = 0.79801
  > Step 1251 (epoch 32): loss 1 = 0.28010, loss 2 = 0.84596
val eval at step 1500: map@0.50 = 0.42304 - map@0.75 = 0.13174
  > Step 1501 (epoch 38): loss 1 = 0.46694, loss 2 = 1.18997
  > Step 1751 (epoch 44): loss 1 = 0.19150, loss 2 = 0.85940
val eval at step 2000: map@0.50 = 0.44289 - map@0.75 = 0.08169
  > Step 2001 (epoch 50): loss 1 = 0.31464, loss 2 = 0.88279
  > Step 2251 (epoch 56): loss 1 = 0.26600, loss 2 = 1.11346
val eval at step 2500: map@0.50 = 0.44792 - map@0.75 = 0.06234
  > Step 2501 (epoch 63): loss 1 = 0.43663, loss 2 = 1.44614
  > Step 2751 (epoch 69): loss 1 = 0.27049, loss 2 = 1.15816
val eval at step 3000: map@0.50 = 0.56249 - map@0.75 = 0.25408
  > Step 3001 (epoch 75): loss 1 = 0.17866, loss 2 = 0.82729
  > Step 3251 (epoch 81): loss 1 = 0.12070, loss 2 = 0.61940
val eval at step 3500: map@0.50 = 0.57019 - map@0.75 = 0.19103
  > Step 3501 (epoch 87): loss 1 = 0.16176, loss 2 = 0.69675
  > Step 3751 (epoch 94): loss 1 = 0.15438, loss 2 = 0.96106
val eval at step 4000: map@0.50 = 0.61180 - map@0.75 = 0.20144
  > Step 4001 (epoch 100): loss 1 = 0.15762, loss 2 = 0.62198
  > Step 4251 (epoch 106): loss 1 = 0.22974, loss 2 = 0.83261
val eval at step 4500: map@0.50 = 0.60954 - map@0.75 = 0.27238
  > Step 4501 (epoch 112): loss 1 = 0.27867, loss 2 = 0.63017
  > Step 4751 (epoch 118): loss 1 = 0.21857, loss 2 = 0.74871
val eval at step 5000: map@0.50 = 0.64106 - map@0.75 = 0.32879
  > Step 5001 (epoch 124): loss 1 = 0.12845, loss 2 = 0.60963
  > Step 5251 (epoch 131): loss 1 = 0.12621, loss 2 = 0.69998
val eval at step 5500: map@0.50 = 0.67705 - map@0.75 = 0.32668
  > Step 5501 (epoch 137): loss 1 = 0.12338, loss 2 = 0.88066
  > Step 5751 (epoch 143): loss 1 = 0.10936, loss 2 = 0.63742
val eval at step 6000: map@0.50 = 0.61125 - map@0.75 = 0.10726
  > Step 6001 (epoch 149): loss 1 = 0.20666, loss 2 = 0.64742
  > Step 6251 (epoch 155): loss 1 = 0.12008, loss 2 = 0.67187
val eval at step 6500: map@0.50 = 0.69258 - map@0.75 = 0.39484
  > Step 6501 (epoch 162): loss 1 = 0.10132, loss 2 = 0.64356
  > Step 6751 (epoch 168): loss 1 = 0.09057, loss 2 = 0.71305
val eval at step 7000: map@0.50 = 0.64936 - map@0.75 = 0.40227
  > Step 7001 (epoch 174): loss 1 = 0.11929, loss 2 = 0.74255
  > Step 7251 (epoch 180): loss 1 = 0.11000, loss 2 = 0.75372
val eval at step 7500: map@0.50 = 0.62072 - map@0.75 = 0.17081
  > Step 7501 (epoch 186): loss 1 = 0.22713, loss 2 = 0.72305
  > Step 7751 (epoch 193): loss 1 = 0.12216, loss 2 = 0.70096
val eval at step 8000: map@0.50 = 0.67896 - map@0.75 = 0.41862
  > Step 8001 (epoch 199): loss 1 = 0.09305, loss 2 = 0.77730
  > Step 8251 (epoch 205): loss 1 = 0.07387, loss 2 = 0.64079
val eval at step 8500: map@0.50 = 0.69814 - map@0.75 = 0.45676
  > Step 8501 (epoch 211): loss 1 = 0.09213, loss 2 = 0.83223
  > Step 8751 (epoch 217): loss 1 = 0.08506, loss 2 = 0.66753
val eval at step 9000: map@0.50 = 0.66807 - map@0.75 = 0.39990
  > Step 9001 (epoch 224): loss 1 = 0.08349, loss 2 = 0.56039
  > Step 9251 (epoch 230): loss 1 = 0.07108, loss 2 = 0.64468
val eval at step 9500: map@0.50 = 0.67765 - map@0.75 = 0.44617
  > Step 9501 (epoch 236): loss 1 = 0.07569, loss 2 = 0.67546
  > Step 9751 (epoch 242): loss 1 = 0.09191, loss 2 = 0.59758
val eval at step 10000: map@0.50 = 0.64830 - map@0.75 = 0.41102
  > Step 10001 (epoch 248): loss 1 = 0.06638, loss 2 = 0.55716
  > Step 10251 (epoch 255): loss 1 = 0.08470, loss 2 = 0.58261
val eval at step 10500: map@0.50 = 0.69618 - map@0.75 = 0.43152
  > Step 10501 (epoch 261): loss 1 = 0.08246, loss 2 = 0.81333
  > Step 10751 (epoch 267): loss 1 = 0.07284, loss 2 = 0.62180
val eval at step 11000: map@0.50 = 0.67922 - map@0.75 = 0.38440
  > Step 11001 (epoch 273): loss 1 = 0.28530, loss 2 = 0.61517
  > Step 11251 (epoch 279): loss 1 = 0.14813, loss 2 = 0.59960
val eval at step 11500: map@0.50 = 0.72985 - map@0.75 = 0.49833
  > Step 11501 (epoch 286): loss 1 = 0.05739, loss 2 = 0.56424
  > Step 11751 (epoch 292): loss 1 = 0.05388, loss 2 = 0.57702
val eval at step 12000: map@0.50 = 0.68217 - map@0.75 = 0.48907
  > Step 12001 (epoch 298): loss 1 = 0.06116, loss 2 = 0.80365
  > Step 12251 (epoch 304): loss 1 = 0.13479, loss 2 = 0.78613
val eval at step 12500: map@0.50 = 0.70467 - map@0.75 = 0.45625
  > Step 12501 (epoch 310): loss 1 = 0.06195, loss 2 = 0.57670
  > Step 12751 (epoch 317): loss 1 = 0.06886, loss 2 = 0.74460
val eval at step 13000: map@0.50 = 0.68754 - map@0.75 = 0.47271
  > Step 13001 (epoch 323): loss 1 = 0.08909, loss 2 = 0.78032
  > Step 13251 (epoch 329): loss 1 = 0.06280, loss 2 = 0.63116
val eval at step 13500: map@0.50 = 0.66926 - map@0.75 = 0.45234
  > Step 13501 (epoch 335): loss 1 = 0.07720, loss 2 = 0.67249
  > Step 13751 (epoch 341): loss 1 = 0.15403, loss 2 = 0.91200
val eval at step 14000: map@0.50 = 0.68851 - map@0.75 = 0.41798
  > Step 14001 (epoch 348): loss 1 = 0.08769, loss 2 = 0.70156
  > Step 14251 (epoch 354): loss 1 = 0.06025, loss 2 = 0.58578
val eval at step 14500: map@0.50 = 0.64493 - map@0.75 = 0.46913
  > Step 14501 (epoch 360): loss 1 = 0.07540, loss 2 = 0.65675
  > Step 14751 (epoch 366): loss 1 = 0.06900, loss 2 = 0.73958
val eval at step 15000: map@0.50 = 0.66302 - map@0.75 = 0.43298
  > Step 15001 (epoch 372): loss 1 = 0.23940, loss 2 = 0.98765
  > Step 15251 (epoch 379): loss 1 = 0.05505, loss 2 = 0.61673
val eval at step 15500: map@0.50 = 0.65132 - map@0.75 = 0.42385
  > Step 15501 (epoch 385): loss 1 = 0.06767, loss 2 = 0.55507
  > Step 15751 (epoch 391): loss 1 = 0.07308, loss 2 = 0.63223
val eval at step 16000: map@0.50 = 0.67822 - map@0.75 = 0.48978
  > Step 16001 (epoch 397): loss 1 = 0.03703, loss 2 = 0.47051
  > Step 16251 (epoch 403): loss 1 = 0.06192, loss 2 = 0.53681
val eval at step 16500: map@0.50 = 0.70461 - map@0.75 = 0.47352
  > Step 16501 (epoch 410): loss 1 = 0.05564, loss 2 = 0.64910
  > Step 16751 (epoch 416): loss 1 = 0.06228, loss 2 = 0.63897
val eval at step 17000: map@0.50 = 0.64733 - map@0.75 = 0.32732
  > Step 17001 (epoch 422): loss 1 = 0.25821, loss 2 = 0.63049
  > Step 17251 (epoch 428): loss 1 = 0.26693, loss 2 = 0.82325
val eval at step 17500: map@0.50 = 0.68501 - map@0.75 = 0.50403
  > Step 17501 (epoch 434): loss 1 = 0.04965, loss 2 = 0.71892
  > Step 17751 (epoch 441): loss 1 = 0.05282, loss 2 = 0.65201
val eval at step 18000: map@0.50 = 0.67739 - map@0.75 = 0.44762
  > Step 18001 (epoch 447): loss 1 = 0.06502, loss 2 = 0.73129
  > Step 18251 (epoch 453): loss 1 = 0.04228, loss 2 = 0.69865
val eval at step 18500: map@0.50 = 0.67507 - map@0.75 = 0.46990
  > Step 18501 (epoch 459): loss 1 = 0.05501, loss 2 = 0.70508
  > Step 18751 (epoch 465): loss 1 = 0.03189, loss 2 = 0.64558
val eval at step 19000: map@0.50 = 0.65091 - map@0.75 = 0.40610
  > Step 19001 (epoch 472): loss 1 = 0.14952, loss 2 = 0.73893
  > Step 19251 (epoch 478): loss 1 = 0.04168, loss 2 = 0.62437
val eval at step 19500: map@0.50 = 0.66929 - map@0.75 = 0.45546
  > Step 19501 (epoch 484): loss 1 = 0.07587, loss 2 = 0.68542
  > Step 19751 (epoch 490): loss 1 = 0.04266, loss 2 = 0.58882
val eval at step 20000: map@0.50 = 0.63675 - map@0.75 = 0.41283
  > Step 20001 (epoch 496): loss 1 = 0.08529, loss 2 = 0.71160
  > Step 20251 (epoch 503): loss 1 = 0.07586, loss 2 = 0.54772
val eval at step 20500: map@0.50 = 0.66033 - map@0.75 = 0.47517
  > Step 20501 (epoch 509): loss 1 = 0.06356, loss 2 = 0.68787
  > Step 20751 (epoch 515): loss 1 = 0.04121, loss 2 = 0.53613
val eval at step 21000: map@0.50 = 0.66457 - map@0.75 = 0.48556
  > Step 21001 (epoch 521): loss 1 = 0.04804, loss 2 = 0.66026
  > Step 21251 (epoch 527): loss 1 = 0.07091, loss 2 = 0.54741
val eval at step 21500: map@0.50 = 0.72527 - map@0.75 = 0.49774
  > Step 21501 (epoch 534): loss 1 = 0.09303, loss 2 = 0.59519
  > Step 21751 (epoch 540): loss 1 = 0.05503, loss 2 = 0.68713
val eval at step 22000: map@0.50 = 0.68377 - map@0.75 = 0.47748
  > Step 22001 (epoch 546): loss 1 = 0.03030, loss 2 = 0.59431
  > Step 22251 (epoch 552): loss 1 = 0.03776, loss 2 = 0.62577
val eval at step 22500: map@0.50 = 0.67653 - map@0.75 = 0.44109
  > Step 22501 (epoch 558): loss 1 = 0.03237, loss 2 = 0.59830
  > Step 22751 (epoch 565): loss 1 = 0.03368, loss 2 = 0.57984
val eval at step 23000: map@0.50 = 0.66224 - map@0.75 = 0.48105
  > Step 23001 (epoch 571): loss 1 = 0.04907, loss 2 = 0.53720
  > Step 23251 (epoch 577): loss 1 = 0.03766, loss 2 = 0.57715
val eval at step 23500: map@0.50 = 0.66550 - map@0.75 = 0.46190
  > Step 23501 (epoch 583): loss 1 = 0.03435, loss 2 = 0.54122
  > Step 23751 (epoch 589): loss 1 = 0.03036, loss 2 = 0.55407
val eval at step 24000: map@0.50 = 0.70186 - map@0.75 = 0.48482
  > Step 24001 (epoch 596): loss 1 = 0.04269, loss 2 = 0.58424
test eval at step 24200: map@0.50 = 0.62664 - map@0.75 = 0.41185
