============================================================== FOLD 06
Tensorflow version 1.10.1
ODGI - vedai_fold06, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold06
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold06
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold06_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold06_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold06_val
   using grid size [8 8]
   using grid size [4 4]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 4, 4, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold06/tiny-yolov2_odgi_256_128/09-28_16-43

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold06/tiny-yolov2_odgi_256_128/09-28_16-43[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 6.07874, loss 2 = 10.01415
  > Step 251 (epoch 7): loss 1 = 0.87207, loss 2 = 0.64373
val eval at step 500: map@0.50 = 0.00620 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.53759, loss 2 = 0.53819
  > Step 751 (epoch 19): loss 1 = 0.35598, loss 2 = 0.41341
val eval at step 1000: map@0.50 = 0.07502 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.32177, loss 2 = 0.42673
  > Step 1251 (epoch 32): loss 1 = 0.28438, loss 2 = 0.44667
val eval at step 1500: map@0.50 = 0.18571 - map@0.75 = 0.00126
  > Step 1501 (epoch 38): loss 1 = 0.25003, loss 2 = 0.46471
  > Step 1751 (epoch 44): loss 1 = 0.28872, loss 2 = 0.44381
val eval at step 2000: map@0.50 = 0.13707 - map@0.75 = 0.01994
  > Step 2001 (epoch 50): loss 1 = 0.39953, loss 2 = 0.39206
  > Step 2251 (epoch 56): loss 1 = 0.32513, loss 2 = 0.36947
val eval at step 2500: map@0.50 = 0.16580 - map@0.75 = 0.04784
  > Step 2501 (epoch 63): loss 1 = 0.26746, loss 2 = 0.43590
  > Step 2751 (epoch 69): loss 1 = 0.19866, loss 2 = 0.33246
val eval at step 3000: map@0.50 = 0.22400 - map@0.75 = 0.06201
  > Step 3001 (epoch 75): loss 1 = 0.27235, loss 2 = 0.34702
  > Step 3251 (epoch 81): loss 1 = 0.24815, loss 2 = 0.33234
val eval at step 3500: map@0.50 = 0.29627 - map@0.75 = 0.08573
  > Step 3501 (epoch 87): loss 1 = 0.17648, loss 2 = 0.32487
  > Step 3751 (epoch 94): loss 1 = 0.21111, loss 2 = 0.40092
val eval at step 4000: map@0.50 = 0.31784 - map@0.75 = 0.10310
  > Step 4001 (epoch 100): loss 1 = 0.19013, loss 2 = 0.36487
  > Step 4251 (epoch 106): loss 1 = 0.25293, loss 2 = 0.33570
val eval at step 4500: map@0.50 = 0.24148 - map@0.75 = 0.05200
  > Step 4501 (epoch 112): loss 1 = 0.45009, loss 2 = 0.32013
  > Step 4751 (epoch 118): loss 1 = 0.15917, loss 2 = 0.35657
val eval at step 5000: map@0.50 = 0.41561 - map@0.75 = 0.13037
  > Step 5001 (epoch 124): loss 1 = 0.20781, loss 2 = 0.25675
  > Step 5251 (epoch 131): loss 1 = 0.20699, loss 2 = 0.26519
val eval at step 5500: map@0.50 = 0.39654 - map@0.75 = 0.11237
  > Step 5501 (epoch 137): loss 1 = 0.19409, loss 2 = 0.27278
  > Step 5751 (epoch 143): loss 1 = 0.19122, loss 2 = 0.25249
val eval at step 6000: map@0.50 = 0.42443 - map@0.75 = 0.12104
  > Step 6001 (epoch 149): loss 1 = 0.13838, loss 2 = 0.24778
  > Step 6251 (epoch 155): loss 1 = 0.15251, loss 2 = 0.25756
val eval at step 6500: map@0.50 = 0.43388 - map@0.75 = 0.15850
  > Step 6501 (epoch 162): loss 1 = 0.20372, loss 2 = 0.22415
  > Step 6751 (epoch 168): loss 1 = 0.22979, loss 2 = 0.25749
val eval at step 7000: map@0.50 = 0.42960 - map@0.75 = 0.12912
  > Step 7001 (epoch 174): loss 1 = 0.18621, loss 2 = 0.24490
  > Step 7251 (epoch 180): loss 1 = 0.17380, loss 2 = 0.26289
val eval at step 7500: map@0.50 = 0.44891 - map@0.75 = 0.12001
  > Step 7501 (epoch 186): loss 1 = 0.14165, loss 2 = 0.23881
  > Step 7751 (epoch 193): loss 1 = 0.13518, loss 2 = 0.25736
val eval at step 8000: map@0.50 = 0.44045 - map@0.75 = 0.12575
  > Step 8001 (epoch 199): loss 1 = 0.11799, loss 2 = 0.21614
  > Step 8251 (epoch 205): loss 1 = 0.14574, loss 2 = 0.20654
val eval at step 8500: map@0.50 = 0.47515 - map@0.75 = 0.13732
  > Step 8501 (epoch 211): loss 1 = 0.10880, loss 2 = 0.23907
  > Step 8751 (epoch 217): loss 1 = 0.10378, loss 2 = 0.21991
val eval at step 9000: map@0.50 = 0.44907 - map@0.75 = 0.16547
  > Step 9001 (epoch 224): loss 1 = 0.13356, loss 2 = 0.22467
  > Step 9251 (epoch 230): loss 1 = 0.12581, loss 2 = 0.22539
val eval at step 9500: map@0.50 = 0.34346 - map@0.75 = 0.12602
  > Step 9501 (epoch 236): loss 1 = 0.44607, loss 2 = 0.24110
  > Step 9751 (epoch 242): loss 1 = 0.21713, loss 2 = 0.29114
val eval at step 10000: map@0.50 = 0.50848 - map@0.75 = 0.14275
  > Step 10001 (epoch 248): loss 1 = 0.12341, loss 2 = 0.19634
  > Step 10251 (epoch 255): loss 1 = 0.12211, loss 2 = 0.20219
val eval at step 10500: map@0.50 = 0.48143 - map@0.75 = 0.15542
  > Step 10501 (epoch 261): loss 1 = 0.16075, loss 2 = 0.20418
  > Step 10751 (epoch 267): loss 1 = 0.10715, loss 2 = 0.18326
val eval at step 11000: map@0.50 = 0.51678 - map@0.75 = 0.18060
  > Step 11001 (epoch 273): loss 1 = 0.11786, loss 2 = 0.24920
  > Step 11251 (epoch 279): loss 1 = 0.13147, loss 2 = 0.17129
val eval at step 11500: map@0.50 = 0.48190 - map@0.75 = 0.18185
  > Step 11501 (epoch 286): loss 1 = 0.10279, loss 2 = 0.16077
  > Step 11751 (epoch 292): loss 1 = 0.13389, loss 2 = 0.24057
val eval at step 12000: map@0.50 = 0.48177 - map@0.75 = 0.18272
  > Step 12001 (epoch 298): loss 1 = 0.13858, loss 2 = 0.19015
  > Step 12251 (epoch 304): loss 1 = 0.10221, loss 2 = 0.17050
val eval at step 12500: map@0.50 = 0.47466 - map@0.75 = 0.12856
  > Step 12501 (epoch 310): loss 1 = 0.13555, loss 2 = 0.19163
  > Step 12751 (epoch 317): loss 1 = 0.11429, loss 2 = 0.16925
val eval at step 13000: map@0.50 = 0.48326 - map@0.75 = 0.18820
  > Step 13001 (epoch 323): loss 1 = 0.11260, loss 2 = 0.21909
  > Step 13251 (epoch 329): loss 1 = 0.09808, loss 2 = 0.18880
val eval at step 13500: map@0.50 = 0.49451 - map@0.75 = 0.17109
  > Step 13501 (epoch 335): loss 1 = 0.07028, loss 2 = 0.18844
  > Step 13751 (epoch 341): loss 1 = 0.11354, loss 2 = 0.17058
val eval at step 14000: map@0.50 = 0.44355 - map@0.75 = 0.15079
  > Step 14001 (epoch 348): loss 1 = 0.22387, loss 2 = 0.20819
  > Step 14251 (epoch 354): loss 1 = 0.12074, loss 2 = 0.18295
val eval at step 14500: map@0.50 = 0.52504 - map@0.75 = 0.18948
  > Step 14501 (epoch 360): loss 1 = 0.09432, loss 2 = 0.17969
  > Step 14751 (epoch 366): loss 1 = 0.12927, loss 2 = 0.18709
val eval at step 15000: map@0.50 = 0.48875 - map@0.75 = 0.14285
  > Step 15001 (epoch 372): loss 1 = 0.09959, loss 2 = 0.16958
  > Step 15251 (epoch 379): loss 1 = 0.05655, loss 2 = 0.15290
val eval at step 15500: map@0.50 = 0.51388 - map@0.75 = 0.21125
  > Step 15501 (epoch 385): loss 1 = 0.09402, loss 2 = 0.17151
  > Step 15751 (epoch 391): loss 1 = 0.08742, loss 2 = 0.19834
val eval at step 16000: map@0.50 = 0.48674 - map@0.75 = 0.22692
  > Step 16001 (epoch 397): loss 1 = 0.07990, loss 2 = 0.16339
  > Step 16251 (epoch 403): loss 1 = 0.07724, loss 2 = 0.19281
val eval at step 16500: map@0.50 = 0.49677 - map@0.75 = 0.21090
  > Step 16501 (epoch 410): loss 1 = 0.11415, loss 2 = 0.18308
  > Step 16751 (epoch 416): loss 1 = 0.09712, loss 2 = 0.14926
val eval at step 17000: map@0.50 = 0.50140 - map@0.75 = 0.16849
  > Step 17001 (epoch 422): loss 1 = 0.07288, loss 2 = 0.16636
  > Step 17251 (epoch 428): loss 1 = 0.08870, loss 2 = 0.17389
val eval at step 17500: map@0.50 = 0.49770 - map@0.75 = 0.18495
  > Step 17501 (epoch 434): loss 1 = 0.07575, loss 2 = 0.17997
  > Step 17751 (epoch 441): loss 1 = 0.10888, loss 2 = 0.17287
val eval at step 18000: map@0.50 = 0.48157 - map@0.75 = 0.19343
  > Step 18001 (epoch 447): loss 1 = 0.08573, loss 2 = 0.18223
  > Step 18251 (epoch 453): loss 1 = 0.09693, loss 2 = 0.16853
val eval at step 18500: map@0.50 = 0.49876 - map@0.75 = 0.21780
  > Step 18501 (epoch 459): loss 1 = 0.08809, loss 2 = 0.15652
  > Step 18751 (epoch 465): loss 1 = 0.08053, loss 2 = 0.16318
val eval at step 19000: map@0.50 = 0.47015 - map@0.75 = 0.18396
  > Step 19001 (epoch 472): loss 1 = 0.06989, loss 2 = 0.15417
  > Step 19251 (epoch 478): loss 1 = 0.12824, loss 2 = 0.17272
val eval at step 19500: map@0.50 = 0.45537 - map@0.75 = 0.18762
  > Step 19501 (epoch 484): loss 1 = 0.08133, loss 2 = 0.17180
  > Step 19751 (epoch 490): loss 1 = 0.26985, loss 2 = 0.26343
val eval at step 20000: map@0.50 = 0.51285 - map@0.75 = 0.16961
  > Step 20001 (epoch 496): loss 1 = 0.11766, loss 2 = 0.20861
  > Step 20251 (epoch 503): loss 1 = 0.07511, loss 2 = 0.19570
val eval at step 20500: map@0.50 = 0.51669 - map@0.75 = 0.21010
  > Step 20501 (epoch 509): loss 1 = 0.06893, loss 2 = 0.19679
  > Step 20751 (epoch 515): loss 1 = 0.05409, loss 2 = 0.15382
val eval at step 21000: map@0.50 = 0.48948 - map@0.75 = 0.20888
  > Step 21001 (epoch 521): loss 1 = 0.08374, loss 2 = 0.17524
  > Step 21251 (epoch 527): loss 1 = 0.05568, loss 2 = 0.17164
val eval at step 21500: map@0.50 = 0.47015 - map@0.75 = 0.19195
  > Step 21501 (epoch 534): loss 1 = 0.06797, loss 2 = 0.18792
  > Step 21751 (epoch 540): loss 1 = 0.05386, loss 2 = 0.15796
val eval at step 22000: map@0.50 = 0.49169 - map@0.75 = 0.21856
  > Step 22001 (epoch 546): loss 1 = 0.06857, loss 2 = 0.14300
  > Step 22251 (epoch 552): loss 1 = 0.11856, loss 2 = 0.20388
val eval at step 22500: map@0.50 = 0.49394 - map@0.75 = 0.21608
  > Step 22501 (epoch 558): loss 1 = 0.05645, loss 2 = 0.15684
  > Step 22751 (epoch 565): loss 1 = 0.08758, loss 2 = 0.17629
val eval at step 23000: map@0.50 = 0.52133 - map@0.75 = 0.19463
  > Step 23001 (epoch 571): loss 1 = 0.07277, loss 2 = 0.16433
  > Step 23251 (epoch 577): loss 1 = 0.05889, loss 2 = 0.16641
val eval at step 23500: map@0.50 = 0.51457 - map@0.75 = 0.20014
  > Step 23501 (epoch 583): loss 1 = 0.04669, loss 2 = 0.22429
  > Step 23751 (epoch 589): loss 1 = 0.07149, loss 2 = 0.14519
val eval at step 24000: map@0.50 = 0.50000 - map@0.75 = 0.20166
  > Step 24001 (epoch 596): loss 1 = 0.06879, loss 2 = 0.13429
test eval at step 24200: map@0.50 = 0.46480 - map@0.75 = 0.18104
