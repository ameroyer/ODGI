============================================================== FOLD 03
Tensorflow version 1.10.1
ODGI - vedai_fold03, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold03
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.0008
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold03
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold03_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold03_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold03_val
   using grid size [16 16]
   using grid size [8 8]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 8, 8, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 8.00e-04
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold03/tiny-yolov2_odgi_512_256/09-28_10-15

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold03/tiny-yolov2_odgi_512_256/09-28_10-15[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 6.19191, loss 2 = 8.21521
  > Step 251 (epoch 7): loss 1 = 0.76418, loss 2 = 1.11439
val eval at step 500: map@0.50 = 0.16760 - map@0.75 = 0.02757
  > Step 501 (epoch 13): loss 1 = 0.58618, loss 2 = 0.84792
  > Step 751 (epoch 19): loss 1 = 0.48834, loss 2 = 1.39107
val eval at step 1000: map@0.50 = 0.32761 - map@0.75 = 0.03915
  > Step 1001 (epoch 25): loss 1 = 0.31158, loss 2 = 1.03036
  > Step 1251 (epoch 32): loss 1 = 0.28879, loss 2 = 0.87902
val eval at step 1500: map@0.50 = 0.44706 - map@0.75 = 0.15190
  > Step 1501 (epoch 38): loss 1 = 0.23608, loss 2 = 0.93176
  > Step 1751 (epoch 44): loss 1 = 0.18047, loss 2 = 0.74304
val eval at step 2000: map@0.50 = 0.41143 - map@0.75 = 0.09509
  > Step 2001 (epoch 50): loss 1 = 0.17070, loss 2 = 1.01947
  > Step 2251 (epoch 56): loss 1 = 0.25834, loss 2 = 0.72199
val eval at step 2500: map@0.50 = 0.46180 - map@0.75 = 0.14710
  > Step 2501 (epoch 63): loss 1 = 0.32309, loss 2 = 0.79052
  > Step 2751 (epoch 69): loss 1 = 0.31436, loss 2 = 0.96523
val eval at step 3000: map@0.50 = 0.56924 - map@0.75 = 0.21105
  > Step 3001 (epoch 75): loss 1 = 0.14301, loss 2 = 0.72170
  > Step 3251 (epoch 81): loss 1 = 0.14931, loss 2 = 0.60766
val eval at step 3500: map@0.50 = 0.54863 - map@0.75 = 0.13517
  > Step 3501 (epoch 87): loss 1 = 0.13282, loss 2 = 0.85610
  > Step 3751 (epoch 94): loss 1 = 0.14533, loss 2 = 0.59753
val eval at step 4000: map@0.50 = 0.53962 - map@0.75 = 0.13200
  > Step 4001 (epoch 100): loss 1 = 0.13786, loss 2 = 0.91371
  > Step 4251 (epoch 106): loss 1 = 0.13872, loss 2 = 0.67021
val eval at step 4500: map@0.50 = 0.58851 - map@0.75 = 0.19420
  > Step 4501 (epoch 112): loss 1 = 0.12767, loss 2 = 0.80925
  > Step 4751 (epoch 118): loss 1 = 0.17730, loss 2 = 0.66796
val eval at step 5000: map@0.50 = 0.59800 - map@0.75 = 0.26099
  > Step 5001 (epoch 124): loss 1 = 0.21895, loss 2 = 0.72831
  > Step 5251 (epoch 131): loss 1 = 0.23600, loss 2 = 0.74560
val eval at step 5500: map@0.50 = 0.63574 - map@0.75 = 0.29535
  > Step 5501 (epoch 137): loss 1 = 0.10366, loss 2 = 0.68005
  > Step 5751 (epoch 143): loss 1 = 0.10108, loss 2 = 0.55731
val eval at step 6000: map@0.50 = 0.63506 - map@0.75 = 0.23392
  > Step 6001 (epoch 149): loss 1 = 0.11914, loss 2 = 0.64151
  > Step 6251 (epoch 155): loss 1 = 0.10527, loss 2 = 0.79720
val eval at step 6500: map@0.50 = 0.63131 - map@0.75 = 0.23515
  > Step 6501 (epoch 162): loss 1 = 0.10479, loss 2 = 0.75758
  > Step 6751 (epoch 168): loss 1 = 0.11313, loss 2 = 0.65728
val eval at step 7000: map@0.50 = 0.62845 - map@0.75 = 0.25107
  > Step 7001 (epoch 174): loss 1 = 0.10328, loss 2 = 0.71420
  > Step 7251 (epoch 180): loss 1 = 0.09304, loss 2 = 0.68246
val eval at step 7500: map@0.50 = 0.64401 - map@0.75 = 0.33050
  > Step 7501 (epoch 186): loss 1 = 0.11207, loss 2 = 0.97459
  > Step 7751 (epoch 193): loss 1 = 0.10458, loss 2 = 0.75068
val eval at step 8000: map@0.50 = 0.63637 - map@0.75 = 0.25580
  > Step 8001 (epoch 199): loss 1 = 0.08689, loss 2 = 0.60877
  > Step 8251 (epoch 205): loss 1 = 0.16075, loss 2 = 0.77987
val eval at step 8500: map@0.50 = 0.66025 - map@0.75 = 0.37324
  > Step 8501 (epoch 211): loss 1 = 0.10115, loss 2 = 0.76056
  > Step 8751 (epoch 217): loss 1 = 0.08094, loss 2 = 0.74393
val eval at step 9000: map@0.50 = 0.65036 - map@0.75 = 0.37565
  > Step 9001 (epoch 224): loss 1 = 0.07787, loss 2 = 0.66942
  > Step 9251 (epoch 230): loss 1 = 0.05903, loss 2 = 0.75639
val eval at step 9500: map@0.50 = 0.63564 - map@0.75 = 0.33657
  > Step 9501 (epoch 236): loss 1 = 0.10243, loss 2 = 0.74051
  > Step 9751 (epoch 242): loss 1 = 0.07967, loss 2 = 0.74961
val eval at step 10000: map@0.50 = 0.63026 - map@0.75 = 0.29356
  > Step 10001 (epoch 248): loss 1 = 0.06154, loss 2 = 0.60025
  > Step 10251 (epoch 255): loss 1 = 0.08697, loss 2 = 0.63843
val eval at step 10500: map@0.50 = 0.65552 - map@0.75 = 0.36340
  > Step 10501 (epoch 261): loss 1 = 0.06166, loss 2 = 0.63970
  > Step 10751 (epoch 267): loss 1 = 0.05820, loss 2 = 0.51782
val eval at step 11000: map@0.50 = 0.63814 - map@0.75 = 0.39404
  > Step 11001 (epoch 273): loss 1 = 0.07703, loss 2 = 0.75376
  > Step 11251 (epoch 279): loss 1 = 0.14994, loss 2 = 0.56400
val eval at step 11500: map@0.50 = 0.68523 - map@0.75 = 0.40533
  > Step 11501 (epoch 286): loss 1 = 0.10107, loss 2 = 0.61064
  > Step 11751 (epoch 292): loss 1 = 0.06366, loss 2 = 0.63748
val eval at step 12000: map@0.50 = 0.66805 - map@0.75 = 0.39895
  > Step 12001 (epoch 298): loss 1 = 0.04884, loss 2 = 0.53460
  > Step 12251 (epoch 304): loss 1 = 0.05579, loss 2 = 0.68105
val eval at step 12500: map@0.50 = 0.61118 - map@0.75 = 0.37170
  > Step 12501 (epoch 310): loss 1 = 0.06688, loss 2 = 0.62064
  > Step 12751 (epoch 317): loss 1 = 0.06133, loss 2 = 0.63054
val eval at step 13000: map@0.50 = 0.63256 - map@0.75 = 0.33047
  > Step 13001 (epoch 323): loss 1 = 0.05960, loss 2 = 0.74678
  > Step 13251 (epoch 329): loss 1 = 0.13148, loss 2 = 0.67740
val eval at step 13500: map@0.50 = 0.60397 - map@0.75 = 0.34963
  > Step 13501 (epoch 335): loss 1 = 0.06254, loss 2 = 0.63886
  > Step 13751 (epoch 341): loss 1 = 0.05887, loss 2 = 0.58135
val eval at step 14000: map@0.50 = 0.60223 - map@0.75 = 0.33963
  > Step 14001 (epoch 348): loss 1 = 0.04296, loss 2 = 0.66500
  > Step 14251 (epoch 354): loss 1 = 0.05874, loss 2 = 0.64455
val eval at step 14500: map@0.50 = 0.71559 - map@0.75 = 0.45957
  > Step 14501 (epoch 360): loss 1 = 0.08241, loss 2 = 0.58911
  > Step 14751 (epoch 366): loss 1 = 0.07335, loss 2 = 0.80227
val eval at step 15000: map@0.50 = 0.67729 - map@0.75 = 0.43469
  > Step 15001 (epoch 372): loss 1 = 0.05008, loss 2 = 0.50881
  > Step 15251 (epoch 379): loss 1 = 0.06227, loss 2 = 0.77545
val eval at step 15500: map@0.50 = 0.67403 - map@0.75 = 0.46061
  > Step 15501 (epoch 385): loss 1 = 0.09285, loss 2 = 0.77361
  > Step 15751 (epoch 391): loss 1 = 0.05049, loss 2 = 0.57505
val eval at step 16000: map@0.50 = 0.65246 - map@0.75 = 0.35408
  > Step 16001 (epoch 397): loss 1 = 0.04720, loss 2 = 0.64964
  > Step 16251 (epoch 403): loss 1 = 0.04846, loss 2 = 0.72367
val eval at step 16500: map@0.50 = 0.66600 - map@0.75 = 0.43403
  > Step 16501 (epoch 410): loss 1 = 0.04339, loss 2 = 0.61086
  > Step 16751 (epoch 416): loss 1 = 0.13583, loss 2 = 0.50578
val eval at step 17000: map@0.50 = 0.70981 - map@0.75 = 0.38034
  > Step 17001 (epoch 422): loss 1 = 0.09384, loss 2 = 0.88020
  > Step 17251 (epoch 428): loss 1 = 0.06719, loss 2 = 0.61525
val eval at step 17500: map@0.50 = 0.70453 - map@0.75 = 0.46248
  > Step 17501 (epoch 434): loss 1 = 0.03857, loss 2 = 0.63617
  > Step 17751 (epoch 441): loss 1 = 0.05702, loss 2 = 0.66745
val eval at step 18000: map@0.50 = 0.65312 - map@0.75 = 0.38674
  > Step 18001 (epoch 447): loss 1 = 0.05446, loss 2 = 0.50000
  > Step 18251 (epoch 453): loss 1 = 0.03115, loss 2 = 0.47460
val eval at step 18500: map@0.50 = 0.67519 - map@0.75 = 0.44129
  > Step 18501 (epoch 459): loss 1 = 0.04309, loss 2 = 0.73825
  > Step 18751 (epoch 465): loss 1 = 0.03914, loss 2 = 0.66667
val eval at step 19000: map@0.50 = 0.62612 - map@0.75 = 0.40597
  > Step 19001 (epoch 472): loss 1 = 0.05144, loss 2 = 0.64936
  > Step 19251 (epoch 478): loss 1 = 0.05236, loss 2 = 0.74077
val eval at step 19500: map@0.50 = 0.59354 - map@0.75 = 0.40296
  > Step 19501 (epoch 484): loss 1 = 0.04186, loss 2 = 0.69900
  > Step 19751 (epoch 490): loss 1 = 0.09031, loss 2 = 0.74234
val eval at step 20000: map@0.50 = 0.61965 - map@0.75 = 0.40577
  > Step 20001 (epoch 496): loss 1 = 0.05632, loss 2 = 0.68629
  > Step 20251 (epoch 503): loss 1 = 0.07802, loss 2 = 0.70882
val eval at step 20500: map@0.50 = 0.69864 - map@0.75 = 0.47636
  > Step 20501 (epoch 509): loss 1 = 0.06201, loss 2 = 0.70187
  > Step 20751 (epoch 515): loss 1 = 0.04868, loss 2 = 0.44019
val eval at step 21000: map@0.50 = 0.67766 - map@0.75 = 0.43980
  > Step 21001 (epoch 521): loss 1 = 0.05952, loss 2 = 0.52031
  > Step 21251 (epoch 527): loss 1 = 0.04544, loss 2 = 0.55426
val eval at step 21500: map@0.50 = 0.68298 - map@0.75 = 0.43215
  > Step 21501 (epoch 534): loss 1 = 0.05953, loss 2 = 0.55594
  > Step 21751 (epoch 540): loss 1 = 0.04539, loss 2 = 0.55564
val eval at step 22000: map@0.50 = 0.59696 - map@0.75 = 0.39355
  > Step 22001 (epoch 546): loss 1 = 0.04005, loss 2 = 0.65000
  > Step 22251 (epoch 552): loss 1 = 0.03670, loss 2 = 0.62674
val eval at step 22500: map@0.50 = 0.67411 - map@0.75 = 0.43607
  > Step 22501 (epoch 558): loss 1 = 0.03997, loss 2 = 0.61325
  > Step 22751 (epoch 565): loss 1 = 0.03850, loss 2 = 0.58690
val eval at step 23000: map@0.50 = 0.64984 - map@0.75 = 0.39237
  > Step 23001 (epoch 571): loss 1 = 0.25360, loss 2 = 0.92507
  > Step 23251 (epoch 577): loss 1 = 0.12494, loss 2 = 0.86665
val eval at step 23500: map@0.50 = 0.66164 - map@0.75 = 0.46716
  > Step 23501 (epoch 583): loss 1 = 0.05438, loss 2 = 0.67928
  > Step 23751 (epoch 589): loss 1 = 0.03293, loss 2 = 0.56637
val eval at step 24000: map@0.50 = 0.63494 - map@0.75 = 0.40789
  > Step 24001 (epoch 596): loss 1 = 0.06248, loss 2 = 0.81095
test eval at step 24200: map@0.50 = 0.64040 - map@0.75 = 0.38592
