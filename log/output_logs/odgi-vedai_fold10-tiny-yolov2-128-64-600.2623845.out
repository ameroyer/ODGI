============================================================== FOLD 10
Tensorflow version 1.10.1
ODGI - vedai_fold10, Input size 128

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold10
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold10
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold10_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold10_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold10_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold10/tiny-yolov2_odgi_128_64/09-27_14-09

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold10/tiny-yolov2_odgi_128_64/09-27_14-09[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 7.59728, loss 2 = 16.19581
  > Step 251 (epoch 7): loss 1 = 0.94290, loss 2 = 17.13379
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.61613, loss 2 = 0.50503
  > Step 751 (epoch 19): loss 1 = 0.40929, loss 2 = 0.39948
val eval at step 1000: map@0.50 = 0.00103 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.29450, loss 2 = 0.51984
  > Step 1251 (epoch 32): loss 1 = 0.24171, loss 2 = 0.30260
val eval at step 1500: map@0.50 = 0.00052 - map@0.75 = 0.00000
  > Step 1501 (epoch 38): loss 1 = 0.28289, loss 2 = 0.38115
  > Step 1751 (epoch 44): loss 1 = 0.26545, loss 2 = 0.41967
val eval at step 2000: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 2001 (epoch 50): loss 1 = 0.26591, loss 2 = 0.30906
  > Step 2251 (epoch 56): loss 1 = 0.37865, loss 2 = 0.35606
val eval at step 2500: map@0.50 = 0.01501 - map@0.75 = 0.00000
  > Step 2501 (epoch 63): loss 1 = 0.26832, loss 2 = 0.32632
  > Step 2751 (epoch 69): loss 1 = 0.31455, loss 2 = 0.29904
val eval at step 3000: map@0.50 = 0.06159 - map@0.75 = 0.00138
  > Step 3001 (epoch 75): loss 1 = 0.23411, loss 2 = 0.25138
  > Step 3251 (epoch 81): loss 1 = 0.25934, loss 2 = 0.27527
val eval at step 3500: map@0.50 = 0.01758 - map@0.75 = 0.00012
  > Step 3501 (epoch 87): loss 1 = 0.25648, loss 2 = 0.28355
  > Step 3751 (epoch 94): loss 1 = 0.21681, loss 2 = 0.33911
val eval at step 4000: map@0.50 = 0.01136 - map@0.75 = 0.00000
  > Step 4001 (epoch 100): loss 1 = 0.32206, loss 2 = 0.35132
  > Step 4251 (epoch 106): loss 1 = 0.20701, loss 2 = 0.35167
val eval at step 4500: map@0.50 = 0.05381 - map@0.75 = 0.00826
  > Step 4501 (epoch 112): loss 1 = 0.21699, loss 2 = 0.34279
  > Step 4751 (epoch 118): loss 1 = 0.18191, loss 2 = 0.34434
val eval at step 5000: map@0.50 = 0.06833 - map@0.75 = 0.00477
  > Step 5001 (epoch 124): loss 1 = 0.17794, loss 2 = 0.22242
  > Step 5251 (epoch 131): loss 1 = 0.22549, loss 2 = 0.31809
val eval at step 5500: map@0.50 = 0.06169 - map@0.75 = 0.00854
  > Step 5501 (epoch 137): loss 1 = 0.28513, loss 2 = 0.26723
  > Step 5751 (epoch 143): loss 1 = 0.16916, loss 2 = 0.25163
val eval at step 6000: map@0.50 = 0.03621 - map@0.75 = 0.00092
  > Step 6001 (epoch 149): loss 1 = 0.22302, loss 2 = 0.26462
  > Step 6251 (epoch 155): loss 1 = 0.30948, loss 2 = 0.31601
val eval at step 6500: map@0.50 = 0.04652 - map@0.75 = 0.00413
  > Step 6501 (epoch 162): loss 1 = 0.26554, loss 2 = 0.32872
  > Step 6751 (epoch 168): loss 1 = 0.21044, loss 2 = 0.24604
val eval at step 7000: map@0.50 = 0.07729 - map@0.75 = 0.00826
  > Step 7001 (epoch 174): loss 1 = 0.21319, loss 2 = 0.24495
  > Step 7251 (epoch 180): loss 1 = 0.18080, loss 2 = 0.24098
val eval at step 7500: map@0.50 = 0.08268 - map@0.75 = 0.00989
  > Step 7501 (epoch 186): loss 1 = 0.22692, loss 2 = 0.26752
  > Step 7751 (epoch 193): loss 1 = 0.22822, loss 2 = 0.20666
val eval at step 8000: map@0.50 = 0.06154 - map@0.75 = 0.00128
  > Step 8001 (epoch 199): loss 1 = 0.18261, loss 2 = 0.26421
  > Step 8251 (epoch 205): loss 1 = 0.23602, loss 2 = 0.20887
val eval at step 8500: map@0.50 = 0.05743 - map@0.75 = 0.00895
  > Step 8501 (epoch 211): loss 1 = 0.13877, loss 2 = 0.25817
  > Step 8751 (epoch 217): loss 1 = 0.20270, loss 2 = 0.21070
val eval at step 9000: map@0.50 = 0.07438 - map@0.75 = 0.00826
  > Step 9001 (epoch 224): loss 1 = 0.29281, loss 2 = 0.24924
  > Step 9251 (epoch 230): loss 1 = 0.26035, loss 2 = 0.27648
val eval at step 9500: map@0.50 = 0.09180 - map@0.75 = 0.03861
  > Step 9501 (epoch 236): loss 1 = 0.27003, loss 2 = 0.26725
  > Step 9751 (epoch 242): loss 1 = 0.22032, loss 2 = 0.20399
val eval at step 10000: map@0.50 = 0.09776 - map@0.75 = 0.01951
  > Step 10001 (epoch 248): loss 1 = 0.16420, loss 2 = 0.21100
  > Step 10251 (epoch 255): loss 1 = 0.12386, loss 2 = 0.16743
val eval at step 10500: map@0.50 = 0.13575 - map@0.75 = 0.04398
  > Step 10501 (epoch 261): loss 1 = 0.18479, loss 2 = 0.18854
  > Step 10751 (epoch 267): loss 1 = 0.16750, loss 2 = 0.23628
val eval at step 11000: map@0.50 = 0.10756 - map@0.75 = 0.02125
  > Step 11001 (epoch 273): loss 1 = 0.22784, loss 2 = 0.18798
  > Step 11251 (epoch 279): loss 1 = 0.16850, loss 2 = 0.21834
val eval at step 11500: map@0.50 = 0.10753 - map@0.75 = 0.00413
  > Step 11501 (epoch 286): loss 1 = 0.18602, loss 2 = 0.19212
  > Step 11751 (epoch 292): loss 1 = 0.17024, loss 2 = 0.28665
val eval at step 12000: map@0.50 = 0.09256 - map@0.75 = 0.02097
  > Step 12001 (epoch 298): loss 1 = 0.23070, loss 2 = 0.21320
  > Step 12251 (epoch 304): loss 1 = 0.23044, loss 2 = 0.25513
val eval at step 12500: map@0.50 = 0.08788 - map@0.75 = 0.01136
  > Step 12501 (epoch 310): loss 1 = 0.17793, loss 2 = 0.24806
  > Step 12751 (epoch 317): loss 1 = 0.18773, loss 2 = 0.19554
val eval at step 13000: map@0.50 = 0.11625 - map@0.75 = 0.02221
  > Step 13001 (epoch 323): loss 1 = 0.21071, loss 2 = 0.17553
  > Step 13251 (epoch 329): loss 1 = 0.15885, loss 2 = 0.20509
val eval at step 13500: map@0.50 = 0.13835 - map@0.75 = 0.01708
  > Step 13501 (epoch 335): loss 1 = 0.22812, loss 2 = 0.23045
  > Step 13751 (epoch 341): loss 1 = 0.19305, loss 2 = 0.21226
val eval at step 14000: map@0.50 = 0.15289 - map@0.75 = 0.01033
  > Step 14001 (epoch 348): loss 1 = 0.13575, loss 2 = 0.19680
  > Step 14251 (epoch 354): loss 1 = 0.20574, loss 2 = 0.18413
val eval at step 14500: map@0.50 = 0.13353 - map@0.75 = 0.01343
  > Step 14501 (epoch 360): loss 1 = 0.14663, loss 2 = 0.17340
  > Step 14751 (epoch 366): loss 1 = 0.23701, loss 2 = 0.20545
val eval at step 15000: map@0.50 = 0.11252 - map@0.75 = 0.02359
  > Step 15001 (epoch 372): loss 1 = 0.17483, loss 2 = 0.18363
  > Step 15251 (epoch 379): loss 1 = 0.20164, loss 2 = 0.14149
val eval at step 15500: map@0.50 = 0.11306 - map@0.75 = 0.01267
  > Step 15501 (epoch 385): loss 1 = 0.23343, loss 2 = 0.16598
  > Step 15751 (epoch 391): loss 1 = 0.16381, loss 2 = 0.18395
val eval at step 16000: map@0.50 = 0.14035 - map@0.75 = 0.02342
  > Step 16001 (epoch 397): loss 1 = 0.18541, loss 2 = 0.17730
  > Step 16251 (epoch 403): loss 1 = 0.23781, loss 2 = 0.23420
val eval at step 16500: map@0.50 = 0.08765 - map@0.75 = 0.01653
  > Step 16501 (epoch 410): loss 1 = 0.24433, loss 2 = 0.14516
  > Step 16751 (epoch 416): loss 1 = 0.17783, loss 2 = 0.12691
val eval at step 17000: map@0.50 = 0.15605 - map@0.75 = 0.02801
  > Step 17001 (epoch 422): loss 1 = 0.16493, loss 2 = 0.17239
  > Step 17251 (epoch 428): loss 1 = 0.15198, loss 2 = 0.13056
val eval at step 17500: map@0.50 = 0.12872 - map@0.75 = 0.02261
  > Step 17501 (epoch 434): loss 1 = 0.15427, loss 2 = 0.15816
  > Step 17751 (epoch 441): loss 1 = 0.14187, loss 2 = 0.15263
val eval at step 18000: map@0.50 = 0.14914 - map@0.75 = 0.05248
  > Step 18001 (epoch 447): loss 1 = 0.12563, loss 2 = 0.17980
  > Step 18251 (epoch 453): loss 1 = 0.17266, loss 2 = 0.15752
val eval at step 18500: map@0.50 = 0.12673 - map@0.75 = 0.01791
  > Step 18501 (epoch 459): loss 1 = 0.18260, loss 2 = 0.15861
  > Step 18751 (epoch 465): loss 1 = 0.14298, loss 2 = 0.16222
val eval at step 19000: map@0.50 = 0.15278 - map@0.75 = 0.04604
  > Step 19001 (epoch 472): loss 1 = 0.19621, loss 2 = 0.14987
  > Step 19251 (epoch 478): loss 1 = 0.13015, loss 2 = 0.17054
val eval at step 19500: map@0.50 = 0.18822 - map@0.75 = 0.07025
  > Step 19501 (epoch 484): loss 1 = 0.13732, loss 2 = 0.18792
  > Step 19751 (epoch 490): loss 1 = 0.15090, loss 2 = 0.13184
val eval at step 20000: map@0.50 = 0.13233 - map@0.75 = 0.01314
  > Step 20001 (epoch 496): loss 1 = 0.14367, loss 2 = 0.17269
  > Step 20251 (epoch 503): loss 1 = 0.17421, loss 2 = 0.24951
val eval at step 20500: map@0.50 = 0.16659 - map@0.75 = 0.03685
  > Step 20501 (epoch 509): loss 1 = 0.13579, loss 2 = 0.12656
  > Step 20751 (epoch 515): loss 1 = 0.17030, loss 2 = 0.17344
val eval at step 21000: map@0.50 = 0.13466 - map@0.75 = 0.03939
  > Step 21001 (epoch 521): loss 1 = 0.08722, loss 2 = 0.13855
  > Step 21251 (epoch 527): loss 1 = 0.12347, loss 2 = 0.14389
val eval at step 21500: map@0.50 = 0.09714 - map@0.75 = 0.01457
  > Step 21501 (epoch 534): loss 1 = 0.26461, loss 2 = 0.15385
  > Step 21751 (epoch 540): loss 1 = 0.19233, loss 2 = 0.17592
val eval at step 22000: map@0.50 = 0.10592 - map@0.75 = 0.03719
  > Step 22001 (epoch 546): loss 1 = 0.22090, loss 2 = 0.14344
  > Step 22251 (epoch 552): loss 1 = 0.20495, loss 2 = 0.13613
val eval at step 22500: map@0.50 = 0.16087 - map@0.75 = 0.04545
  > Step 22501 (epoch 558): loss 1 = 0.17868, loss 2 = 0.15577
  > Step 22751 (epoch 565): loss 1 = 0.16251, loss 2 = 0.10919
val eval at step 23000: map@0.50 = 0.17289 - map@0.75 = 0.03460
  > Step 23001 (epoch 571): loss 1 = 0.19687, loss 2 = 0.12330
  > Step 23251 (epoch 577): loss 1 = 0.12866, loss 2 = 0.13258
val eval at step 23500: map@0.50 = 0.15931 - map@0.75 = 0.02734
  > Step 23501 (epoch 583): loss 1 = 0.10851, loss 2 = 0.16217
  > Step 23751 (epoch 589): loss 1 = 0.17783, loss 2 = 0.15504
val eval at step 24000: map@0.50 = 0.16061 - map@0.75 = 0.03626
  > Step 24001 (epoch 596): loss 1 = 0.11884, loss 2 = 0.14625
test eval at step 24200: map@0.50 = 0.09338 - map@0.75 = 0.01318
