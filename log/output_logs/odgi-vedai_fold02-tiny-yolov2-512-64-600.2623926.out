============================================================== FOLD 02
Tensorflow version 1.10.1
ODGI - vedai_fold02, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold02
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold02
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold02_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold02_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold02_val
   using grid size [16 16]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold02/tiny-yolov2_odgi_512_64/09-27_16-00

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold02/tiny-yolov2_odgi_512_64/09-27_16-00[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 7.27587, loss 2 = 10.83071
  > Step 251 (epoch 7): loss 1 = 0.73169, loss 2 = 0.54252
val eval at step 500: map@0.50 = 0.16251 - map@0.75 = 0.01490
  > Step 501 (epoch 13): loss 1 = 0.55646, loss 2 = 0.41354
  > Step 751 (epoch 19): loss 1 = 0.41770, loss 2 = 0.34718
val eval at step 1000: map@0.50 = 0.29863 - map@0.75 = 0.04790
  > Step 1001 (epoch 25): loss 1 = 0.31937, loss 2 = 0.36968
  > Step 1251 (epoch 32): loss 1 = 0.25524, loss 2 = 0.43962
val eval at step 1500: map@0.50 = 0.33763 - map@0.75 = 0.04542
  > Step 1501 (epoch 38): loss 1 = 0.19858, loss 2 = 0.30034
  > Step 1751 (epoch 44): loss 1 = 0.20107, loss 2 = 0.29411
val eval at step 2000: map@0.50 = 0.42696 - map@0.75 = 0.09262
  > Step 2001 (epoch 50): loss 1 = 0.17316, loss 2 = 0.25378
  > Step 2251 (epoch 56): loss 1 = 0.21456, loss 2 = 0.32282
val eval at step 2500: map@0.50 = 0.44622 - map@0.75 = 0.12916
  > Step 2501 (epoch 63): loss 1 = 0.27840, loss 2 = 0.33147
  > Step 2751 (epoch 69): loss 1 = 0.17615, loss 2 = 0.22931
val eval at step 3000: map@0.50 = 0.46825 - map@0.75 = 0.15697
  > Step 3001 (epoch 75): loss 1 = 0.13321, loss 2 = 0.26995
  > Step 3251 (epoch 81): loss 1 = 0.13991, loss 2 = 0.25220
val eval at step 3500: map@0.50 = 0.51275 - map@0.75 = 0.13667
  > Step 3501 (epoch 87): loss 1 = 0.14247, loss 2 = 0.25185
  > Step 3751 (epoch 94): loss 1 = 0.14539, loss 2 = 0.22179
val eval at step 4000: map@0.50 = 0.50811 - map@0.75 = 0.14025
  > Step 4001 (epoch 100): loss 1 = 0.14618, loss 2 = 0.23652
  > Step 4251 (epoch 106): loss 1 = 0.13463, loss 2 = 0.23054
val eval at step 4500: map@0.50 = 0.48922 - map@0.75 = 0.15608
  > Step 4501 (epoch 112): loss 1 = 0.33687, loss 2 = 0.24463
  > Step 4751 (epoch 118): loss 1 = 0.17587, loss 2 = 0.21747
val eval at step 5000: map@0.50 = 0.55202 - map@0.75 = 0.21210
  > Step 5001 (epoch 124): loss 1 = 0.12208, loss 2 = 0.18507
  > Step 5251 (epoch 131): loss 1 = 0.12822, loss 2 = 0.24494
val eval at step 5500: map@0.50 = 0.56703 - map@0.75 = 0.19900
  > Step 5501 (epoch 137): loss 1 = 0.08122, loss 2 = 0.22243
  > Step 5751 (epoch 143): loss 1 = 0.12652, loss 2 = 0.19609
val eval at step 6000: map@0.50 = 0.55607 - map@0.75 = 0.17768
  > Step 6001 (epoch 149): loss 1 = 0.10653, loss 2 = 0.15745
  > Step 6251 (epoch 155): loss 1 = 0.09063, loss 2 = 0.17019
val eval at step 6500: map@0.50 = 0.57511 - map@0.75 = 0.20448
  > Step 6501 (epoch 162): loss 1 = 0.07465, loss 2 = 0.16990
  > Step 6751 (epoch 168): loss 1 = 0.09815, loss 2 = 0.15641
val eval at step 7000: map@0.50 = 0.56360 - map@0.75 = 0.19557
  > Step 7001 (epoch 174): loss 1 = 0.09469, loss 2 = 0.18848
  > Step 7251 (epoch 180): loss 1 = 0.26445, loss 2 = 0.15895
val eval at step 7500: map@0.50 = 0.59096 - map@0.75 = 0.34204
  > Step 7501 (epoch 186): loss 1 = 0.11764, loss 2 = 0.17944
  > Step 7751 (epoch 193): loss 1 = 0.10378, loss 2 = 0.15482
val eval at step 8000: map@0.50 = 0.60754 - map@0.75 = 0.21257
  > Step 8001 (epoch 199): loss 1 = 0.07487, loss 2 = 0.15927
  > Step 8251 (epoch 205): loss 1 = 0.07857, loss 2 = 0.12013
val eval at step 8500: map@0.50 = 0.56863 - map@0.75 = 0.18909
  > Step 8501 (epoch 211): loss 1 = 0.08160, loss 2 = 0.11959
  > Step 8751 (epoch 217): loss 1 = 0.07892, loss 2 = 0.12526
val eval at step 9000: map@0.50 = 0.52792 - map@0.75 = 0.17239
  > Step 9001 (epoch 224): loss 1 = 0.09214, loss 2 = 0.09354
  > Step 9251 (epoch 230): loss 1 = 0.08515, loss 2 = 0.16167
val eval at step 9500: map@0.50 = 0.57094 - map@0.75 = 0.19671
  > Step 9501 (epoch 236): loss 1 = 0.07897, loss 2 = 0.09706
  > Step 9751 (epoch 242): loss 1 = 0.07780, loss 2 = 0.08921
val eval at step 10000: map@0.50 = 0.55529 - map@0.75 = 0.21328
  > Step 10001 (epoch 248): loss 1 = 0.05252, loss 2 = 0.10990
  > Step 10251 (epoch 255): loss 1 = 0.13955, loss 2 = 0.15018
val eval at step 10500: map@0.50 = 0.59240 - map@0.75 = 0.22505
  > Step 10501 (epoch 261): loss 1 = 0.11538, loss 2 = 0.18458
  > Step 10751 (epoch 267): loss 1 = 0.08314, loss 2 = 0.13917
val eval at step 11000: map@0.50 = 0.53740 - map@0.75 = 0.22077
  > Step 11001 (epoch 273): loss 1 = 0.06783, loss 2 = 0.13910
  > Step 11251 (epoch 279): loss 1 = 0.06535, loss 2 = 0.11223
val eval at step 11500: map@0.50 = 0.50675 - map@0.75 = 0.20728
  > Step 11501 (epoch 286): loss 1 = 0.06435, loss 2 = 0.10135
  > Step 11751 (epoch 292): loss 1 = 0.04568, loss 2 = 0.10719
val eval at step 12000: map@0.50 = 0.57484 - map@0.75 = 0.21204
  > Step 12001 (epoch 298): loss 1 = 0.06814, loss 2 = 0.09650
  > Step 12251 (epoch 304): loss 1 = 0.06911, loss 2 = 0.09374
val eval at step 12500: map@0.50 = 0.53864 - map@0.75 = 0.24100
  > Step 12501 (epoch 310): loss 1 = 0.05373, loss 2 = 0.10519
  > Step 12751 (epoch 317): loss 1 = 0.05735, loss 2 = 0.08278
val eval at step 13000: map@0.50 = 0.53348 - map@0.75 = 0.23881
  > Step 13001 (epoch 323): loss 1 = 0.05138, loss 2 = 0.08152
  > Step 13251 (epoch 329): loss 1 = 0.08700, loss 2 = 0.10465
val eval at step 13500: map@0.50 = 0.55556 - map@0.75 = 0.22556
  > Step 13501 (epoch 335): loss 1 = 0.05084, loss 2 = 0.11091
  > Step 13751 (epoch 341): loss 1 = 0.08602, loss 2 = 0.14326
val eval at step 14000: map@0.50 = 0.59057 - map@0.75 = 0.26496
  > Step 14001 (epoch 348): loss 1 = 0.18726, loss 2 = 0.14152
  > Step 14251 (epoch 354): loss 1 = 0.10893, loss 2 = 0.13887
val eval at step 14500: map@0.50 = 0.60913 - map@0.75 = 0.30734
  > Step 14501 (epoch 360): loss 1 = 0.07780, loss 2 = 0.11497
  > Step 14751 (epoch 366): loss 1 = 0.05085, loss 2 = 0.08873
val eval at step 15000: map@0.50 = 0.55893 - map@0.75 = 0.28000
  > Step 15001 (epoch 372): loss 1 = 0.05505, loss 2 = 0.07117
  > Step 15251 (epoch 379): loss 1 = 0.05177, loss 2 = 0.07775
val eval at step 15500: map@0.50 = 0.55945 - map@0.75 = 0.17469
  > Step 15501 (epoch 385): loss 1 = 0.05361, loss 2 = 0.13135
  > Step 15751 (epoch 391): loss 1 = 0.04388, loss 2 = 0.06591
val eval at step 16000: map@0.50 = 0.53596 - map@0.75 = 0.23989
  > Step 16001 (epoch 397): loss 1 = 0.04913, loss 2 = 0.10192
  > Step 16251 (epoch 403): loss 1 = 0.08487, loss 2 = 0.12533
val eval at step 16500: map@0.50 = 0.54358 - map@0.75 = 0.24124
  > Step 16501 (epoch 410): loss 1 = 0.05779, loss 2 = 0.06531
  > Step 16751 (epoch 416): loss 1 = 0.05727, loss 2 = 0.06498
val eval at step 17000: map@0.50 = 0.55422 - map@0.75 = 0.22264
  > Step 17001 (epoch 422): loss 1 = 0.04781, loss 2 = 0.10415
  > Step 17251 (epoch 428): loss 1 = 0.04717, loss 2 = 0.10627
val eval at step 17500: map@0.50 = 0.60078 - map@0.75 = 0.28037
  > Step 17501 (epoch 434): loss 1 = 0.04865, loss 2 = 0.06807
  > Step 17751 (epoch 441): loss 1 = 0.04577, loss 2 = 0.09296
val eval at step 18000: map@0.50 = 0.58614 - map@0.75 = 0.26380
  > Step 18001 (epoch 447): loss 1 = 0.05688, loss 2 = 0.09869
  > Step 18251 (epoch 453): loss 1 = 0.05063, loss 2 = 0.09683
val eval at step 18500: map@0.50 = 0.55534 - map@0.75 = 0.21656
  > Step 18501 (epoch 459): loss 1 = 0.05465, loss 2 = 0.10640
  > Step 18751 (epoch 465): loss 1 = 0.05564, loss 2 = 0.10077
val eval at step 19000: map@0.50 = 0.56821 - map@0.75 = 0.22020
  > Step 19001 (epoch 472): loss 1 = 0.04217, loss 2 = 0.09562
  > Step 19251 (epoch 478): loss 1 = 0.07128, loss 2 = 0.08330
val eval at step 19500: map@0.50 = 0.55604 - map@0.75 = 0.25033
  > Step 19501 (epoch 484): loss 1 = 0.21550, loss 2 = 0.14582
  > Step 19751 (epoch 490): loss 1 = 0.07536, loss 2 = 0.08166
val eval at step 20000: map@0.50 = 0.60536 - map@0.75 = 0.28736
  > Step 20001 (epoch 496): loss 1 = 0.05224, loss 2 = 0.08511
  > Step 20251 (epoch 503): loss 1 = 0.03636, loss 2 = 0.07565
val eval at step 20500: map@0.50 = 0.53729 - map@0.75 = 0.25876
  > Step 20501 (epoch 509): loss 1 = 0.03447, loss 2 = 0.09469
  > Step 20751 (epoch 515): loss 1 = 0.05715, loss 2 = 0.05493
val eval at step 21000: map@0.50 = 0.54110 - map@0.75 = 0.22909
  > Step 21001 (epoch 521): loss 1 = 0.04350, loss 2 = 0.08436
  > Step 21251 (epoch 527): loss 1 = 0.03518, loss 2 = 0.06774
val eval at step 21500: map@0.50 = 0.56783 - map@0.75 = 0.19654
  > Step 21501 (epoch 534): loss 1 = 0.04362, loss 2 = 0.05553
  > Step 21751 (epoch 540): loss 1 = 0.03452, loss 2 = 0.06419
val eval at step 22000: map@0.50 = 0.56610 - map@0.75 = 0.26666
  > Step 22001 (epoch 546): loss 1 = 0.04376, loss 2 = 0.07706
  > Step 22251 (epoch 552): loss 1 = 0.03671, loss 2 = 0.05579
val eval at step 22500: map@0.50 = 0.59521 - map@0.75 = 0.29804
  > Step 22501 (epoch 558): loss 1 = 0.03775, loss 2 = 0.12425
  > Step 22751 (epoch 565): loss 1 = 0.04783, loss 2 = 0.09715
val eval at step 23000: map@0.50 = 0.59603 - map@0.75 = 0.24608
  > Step 23001 (epoch 571): loss 1 = 0.05265, loss 2 = 0.08073
  > Step 23251 (epoch 577): loss 1 = 0.03084, loss 2 = 0.06810
val eval at step 23500: map@0.50 = 0.56340 - map@0.75 = 0.21053
  > Step 23501 (epoch 583): loss 1 = 0.04297, loss 2 = 0.06691
  > Step 23751 (epoch 589): loss 1 = 0.04610, loss 2 = 0.05677
val eval at step 24000: map@0.50 = 0.56145 - map@0.75 = 0.26176
  > Step 24001 (epoch 596): loss 1 = 0.03384, loss 2 = 0.05037
test eval at step 24200: map@0.50 = 0.58456 - map@0.75 = 0.24508
