Tensorflow version 1.10.1
ODGI - deepscores, Input size 512

14000 train samples (584 iters)
5000 test samples (417 iters)

Config:
   [96mbatch_size:[0m 12
   [96mexp_name:[0m deepscores
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/DeepScores/half_images/
   [96mimage_format:[0m deepscores
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_epochs:[0m 50
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 1000
   [96msave_summaries_steps:[0m None
   [96msetting:[0m deepscores
   [96mtest_max_num_bbs:[0m 816
   [96mtest_num_iters_per_epoch:[0m 417
   [96mtest_num_samples:[0m 5000
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/deepscores_test
   [96mtrain_max_num_bbs:[0m 816
   [96mtrain_num_crops:[0m 6
   [96mtrain_num_iters_per_epoch:[0m 584
   [96mtrain_num_samples:[0m 14000
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/deepscores_train
   [96mval_max_num_bbs:[0m 816
   [96mval_num_samples:[0m 1000
   [96mval_tfrecords:[0m Data/deepscores_val
   using grid size [16 16]
   using grid size [8 8]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 816, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 816], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
  > extracting 6 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 6, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 816, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 8, 8, 1, 816], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 8, 8, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/deepscores/tiny-yolov2_odgi_512_256/10-05_11-46

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/deepscores/tiny-yolov2_odgi_512_256/10-05_11-46[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 5.54562, loss 2 = 7.31488
  > Step 251 (epoch 1): loss 1 = 0.70986, loss 2 = 5.46680
  > Step 501 (epoch 1): loss 1 = 0.66698, loss 2 = 5.49572
  > Step 751 (epoch 2): loss 1 = 0.63265, loss 2 = 5.70677
val eval at step 1000: map@0.50 = 0.00038 - map@0.75 = 0.00001
  > Step 1001 (epoch 2): loss 1 = 0.66075, loss 2 = 6.01677
  > Step 1251 (epoch 3): loss 1 = 0.43630, loss 2 = 0.80737
  > Step 1501 (epoch 3): loss 1 = 0.41392, loss 2 = 0.72517
  > Step 1751 (epoch 4): loss 1 = 0.39699, loss 2 = 0.64553
val eval at step 2000: map@0.50 = 0.07234 - map@0.75 = 0.00998
  > Step 2001 (epoch 4): loss 1 = 0.39974, loss 2 = 0.73815
  > Step 2251 (epoch 4): loss 1 = 0.39491, loss 2 = 0.57783
  > Step 2501 (epoch 5): loss 1 = 0.37848, loss 2 = 0.58526
  > Step 2751 (epoch 5): loss 1 = 0.32733, loss 2 = 0.69826
val eval at step 3000: map@0.50 = 0.09477 - map@0.75 = 0.04298
  > Step 3001 (epoch 6): loss 1 = 0.40997, loss 2 = 0.60009
  > Step 3251 (epoch 6): loss 1 = 0.33592, loss 2 = 0.66566
  > Step 3501 (epoch 7): loss 1 = 0.32877, loss 2 = 0.57527
  > Step 3751 (epoch 7): loss 1 = 0.27120, loss 2 = 0.69389
val eval at step 4000: map@0.50 = 0.11129 - map@0.75 = 0.03109
  > Step 4001 (epoch 7): loss 1 = 0.34003, loss 2 = 0.70881
  > Step 4251 (epoch 8): loss 1 = 0.27349, loss 2 = 0.63107
  > Step 4501 (epoch 8): loss 1 = 0.28618, loss 2 = 0.56152
  > Step 4751 (epoch 9): loss 1 = 0.28894, loss 2 = 0.49231
val eval at step 5000: map@0.50 = 0.12410 - map@0.75 = 0.04113
  > Step 5001 (epoch 9): loss 1 = 0.26460, loss 2 = 0.54960
  > Step 5251 (epoch 10): loss 1 = 0.29709, loss 2 = 0.67448
  > Step 5501 (epoch 10): loss 1 = 0.24942, loss 2 = 0.57254
  > Step 5751 (epoch 10): loss 1 = 0.25940, loss 2 = 0.59028
val eval at step 6000: map@0.50 = 0.13348 - map@0.75 = 0.05771
  > Step 6001 (epoch 11): loss 1 = 0.26452, loss 2 = 0.54985
  > Step 6251 (epoch 11): loss 1 = 0.25989, loss 2 = 0.56235
  > Step 6501 (epoch 12): loss 1 = 0.22947, loss 2 = 0.67688
  > Step 6751 (epoch 12): loss 1 = 0.23001, loss 2 = 0.42851
val eval at step 7000: map@0.50 = 0.11901 - map@0.75 = 0.02951
  > Step 7001 (epoch 13): loss 1 = 0.24629, loss 2 = 0.56787
  > Step 7251 (epoch 13): loss 1 = 0.32832, loss 2 = 0.52260
  > Step 7501 (epoch 13): loss 1 = 0.21917, loss 2 = 0.64682
  > Step 7751 (epoch 14): loss 1 = 0.21241, loss 2 = 0.58417
val eval at step 8000: map@0.50 = 0.13955 - map@0.75 = 0.07151
  > Step 8001 (epoch 14): loss 1 = 0.27557, loss 2 = 0.44611
  > Step 8251 (epoch 15): loss 1 = 0.20838, loss 2 = 0.61892
  > Step 8501 (epoch 15): loss 1 = 0.22901, loss 2 = 0.42972
  > Step 8751 (epoch 16): loss 1 = 0.21916, loss 2 = 0.56880
val eval at step 9000: map@0.50 = 0.13822 - map@0.75 = 0.07416
  > Step 9001 (epoch 16): loss 1 = 0.20528, loss 2 = 0.67470
  > Step 9251 (epoch 16): loss 1 = 0.22081, loss 2 = 0.51598
  > Step 9501 (epoch 17): loss 1 = 0.18864, loss 2 = 0.51034
  > Step 9751 (epoch 17): loss 1 = 0.21071, loss 2 = 0.52801
val eval at step 10000: map@0.50 = 0.13634 - map@0.75 = 0.09131
  > Step 10001 (epoch 18): loss 1 = 0.20980, loss 2 = 0.65704
  > Step 10251 (epoch 18): loss 1 = 0.18059, loss 2 = 0.53030
  > Step 10501 (epoch 19): loss 1 = 0.17906, loss 2 = 0.63648
  > Step 10751 (epoch 19): loss 1 = 0.19180, loss 2 = 0.53556
val eval at step 11000: map@0.50 = 0.13559 - map@0.75 = 0.07684
  > Step 11001 (epoch 19): loss 1 = 0.17134, loss 2 = 0.52738
  > Step 11251 (epoch 20): loss 1 = 0.20219, loss 2 = 0.51854
  > Step 11501 (epoch 20): loss 1 = 0.19050, loss 2 = 0.54353
  > Step 11751 (epoch 21): loss 1 = 0.23552, loss 2 = 0.49885
val eval at step 12000: map@0.50 = 0.13989 - map@0.75 = 0.09131
  > Step 12001 (epoch 21): loss 1 = 0.19297, loss 2 = 0.56412
  > Step 12251 (epoch 22): loss 1 = 0.17489, loss 2 = 0.53861
  > Step 12501 (epoch 22): loss 1 = 0.17782, loss 2 = 0.53257
  > Step 12751 (epoch 22): loss 1 = 0.16682, loss 2 = 0.53079
val eval at step 13000: map@0.50 = 0.14288 - map@0.75 = 0.09508
  > Step 13001 (epoch 23): loss 1 = 0.19230, loss 2 = 0.57190
  > Step 13251 (epoch 23): loss 1 = 0.18522, loss 2 = 0.57176
  > Step 13501 (epoch 24): loss 1 = 0.15928, loss 2 = 0.47871
  > Step 13751 (epoch 24): loss 1 = 0.16273, loss 2 = 0.57025
val eval at step 14000: map@0.50 = 0.15259 - map@0.75 = 0.10296
  > Step 14001 (epoch 25): loss 1 = 0.18333, loss 2 = 0.52094
  > Step 14251 (epoch 25): loss 1 = 0.17320, loss 2 = 0.50989
  > Step 14501 (epoch 25): loss 1 = 0.17860, loss 2 = 0.48605
  > Step 14751 (epoch 26): loss 1 = 0.17925, loss 2 = 0.51782
val eval at step 15000: map@0.50 = 0.15786 - map@0.75 = 0.10546
  > Step 15001 (epoch 26): loss 1 = 0.16612, loss 2 = 0.49927
  > Step 15251 (epoch 27): loss 1 = 0.15101, loss 2 = 0.65214
  > Step 15501 (epoch 27): loss 1 = 0.14328, loss 2 = 0.46009
  > Step 15751 (epoch 28): loss 1 = 0.17786, loss 2 = 0.55139
val eval at step 16000: map@0.50 = 0.15271 - map@0.75 = 0.10756
  > Step 16001 (epoch 28): loss 1 = 0.16629, loss 2 = 0.53684
  > Step 16251 (epoch 28): loss 1 = 0.15131, loss 2 = 0.56953
  > Step 16501 (epoch 29): loss 1 = 0.16571, loss 2 = 0.49136
  > Step 16751 (epoch 29): loss 1 = 0.16124, loss 2 = 0.49894
val eval at step 17000: map@0.50 = 0.16350 - map@0.75 = 0.11659
  > Step 17001 (epoch 30): loss 1 = 0.15540, loss 2 = 0.52634
  > Step 17251 (epoch 30): loss 1 = 0.15696, loss 2 = 0.54807
  > Step 17501 (epoch 31): loss 1 = 0.14546, loss 2 = 0.50110
  > Step 17751 (epoch 31): loss 1 = 0.14501, loss 2 = 0.52489
val eval at step 18000: map@0.50 = 0.14877 - map@0.75 = 0.09445
  > Step 18001 (epoch 31): loss 1 = 0.20146, loss 2 = 0.53067
  > Step 18251 (epoch 32): loss 1 = 0.14890, loss 2 = 0.52560
  > Step 18501 (epoch 32): loss 1 = 0.16274, loss 2 = 0.54290
  > Step 18751 (epoch 33): loss 1 = 0.14686, loss 2 = 0.50814
val eval at step 19000: map@0.50 = 0.15802 - map@0.75 = 0.11931
  > Step 19001 (epoch 33): loss 1 = 0.14734, loss 2 = 0.54417
  > Step 19251 (epoch 34): loss 1 = 0.14011, loss 2 = 0.49768
  > Step 19501 (epoch 34): loss 1 = 0.14799, loss 2 = 0.55510
  > Step 19751 (epoch 34): loss 1 = 0.15582, loss 2 = 0.50997
val eval at step 20000: map@0.50 = 0.15526 - map@0.75 = 0.11507
  > Step 20001 (epoch 35): loss 1 = 0.15787, loss 2 = 0.59231
  > Step 20251 (epoch 35): loss 1 = 0.14251, loss 2 = 0.52929
  > Step 20501 (epoch 36): loss 1 = 0.14645, loss 2 = 0.50398
  > Step 20751 (epoch 36): loss 1 = 0.16862, loss 2 = 0.44635
val eval at step 21000: map@0.50 = 0.15729 - map@0.75 = 0.11793
  > Step 21001 (epoch 37): loss 1 = 0.13543, loss 2 = 0.47713
  > Step 21251 (epoch 37): loss 1 = 0.13020, loss 2 = 0.62168
  > Step 21501 (epoch 37): loss 1 = 0.15353, loss 2 = 0.53461
  > Step 21751 (epoch 38): loss 1 = 0.12873, loss 2 = 0.52528
val eval at step 22000: map@0.50 = 0.16338 - map@0.75 = 0.12138
  > Step 22001 (epoch 38): loss 1 = 0.15179, loss 2 = 0.53524
  > Step 22251 (epoch 39): loss 1 = 0.13872, loss 2 = 0.58084
  > Step 22501 (epoch 39): loss 1 = 0.13466, loss 2 = 0.60262
  > Step 22751 (epoch 40): loss 1 = 0.14021, loss 2 = 0.53130
val eval at step 23000: map@0.50 = 0.15597 - map@0.75 = 0.11747
  > Step 23001 (epoch 40): loss 1 = 0.14042, loss 2 = 0.46013
  > Step 23251 (epoch 40): loss 1 = 0.13683, loss 2 = 0.52547
  > Step 23501 (epoch 41): loss 1 = 0.13673, loss 2 = 0.54216
  > Step 23751 (epoch 41): loss 1 = 0.13900, loss 2 = 0.53204
val eval at step 24000: map@0.50 = 0.15578 - map@0.75 = 0.11675
  > Step 24001 (epoch 42): loss 1 = 0.16665, loss 2 = 0.48668
  > Step 24251 (epoch 42): loss 1 = 0.11660, loss 2 = 0.56559
  > Step 24501 (epoch 43): loss 1 = 0.15110, loss 2 = 0.47116
  > Step 24751 (epoch 43): loss 1 = 0.12731, loss 2 = 0.52327
val eval at step 25000: map@0.50 = 0.16058 - map@0.75 = 0.12040
  > Step 25001 (epoch 43): loss 1 = 0.13508, loss 2 = 0.47254
  > Step 25251 (epoch 44): loss 1 = 0.13450, loss 2 = 0.60781
  > Step 25501 (epoch 44): loss 1 = 0.11496, loss 2 = 0.48104
  > Step 25751 (epoch 45): loss 1 = 0.11963, loss 2 = 0.50255
val eval at step 26000: map@0.50 = 0.15834 - map@0.75 = 0.11888
  > Step 26001 (epoch 45): loss 1 = 0.12172, loss 2 = 0.54677
  > Step 26251 (epoch 46): loss 1 = 0.11722, loss 2 = 0.45468
  > Step 26501 (epoch 46): loss 1 = 0.12914, loss 2 = 0.53559
  > Step 26751 (epoch 46): loss 1 = 0.14542, loss 2 = 0.59678
val eval at step 27000: map@0.50 = 0.15936 - map@0.75 = 0.12088
  > Step 27001 (epoch 47): loss 1 = 0.12777, loss 2 = 0.49480
  > Step 27251 (epoch 47): loss 1 = 0.12036, loss 2 = 0.49360
  > Step 27501 (epoch 48): loss 1 = 0.10618, loss 2 = 0.47930
  > Step 27751 (epoch 48): loss 1 = 0.12889, loss 2 = 0.45722
val eval at step 28000: map@0.50 = 0.15381 - map@0.75 = 0.11894
  > Step 28001 (epoch 49): loss 1 = 0.12111, loss 2 = 0.53615
  > Step 28251 (epoch 49): loss 1 = 0.12201, loss 2 = 0.48337
  > Step 28501 (epoch 49): loss 1 = 0.11650, loss 2 = 0.49142
  > Step 28751 (epoch 50): loss 1 = 0.11870, loss 2 = 0.53044
val eval at step 29000: map@0.50 = 0.16029 - map@0.75 = 0.11884
  > Step 29001 (epoch 50): loss 1 = 0.12511, loss 2 = 0.58259
test eval at step 29167: map@0.50 = 0.16673 - map@0.75 = 0.13005
