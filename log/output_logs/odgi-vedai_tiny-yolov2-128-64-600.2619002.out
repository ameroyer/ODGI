============================================================== FOLD 01
Tensorflow version 1.10.1
ODGI - vedai_fold01, Input size 128

968 train samples (31 iters)
121 test samples (8 iters)

Config:
   [96mbatch_size:[0m 16
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold01
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold01
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 8
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 16
   [96mtest_tfrecords:[0m Data/vedai_fold01_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 31
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 32
   [96mtrain_tfrecords:[0m Data/vedai_fold01_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold01_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    with default `optimizer` = ADAM
 [31m> Build train operation[0m
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

Losses:
    *stage1_centers_localization_loss*: 2 tensors
    *stage1_scales_localization_loss*: 2 tensors
    *stage1_confidence_obj_loss*: 2 tensors
    *stage1_confidence_noobj_loss*: 2 tensors
    *stage1_group_classification_loss*: 2 tensors
    *stage1_classification_loss*: 2 tensors
    *stage1_offsets_loss*: 2 tensors
    *stage2_centers_localization_loss*: 2 tensors
    *stage2_scales_localization_loss*: 2 tensors
    *stage2_confidence_obj_loss*: 2 tensors
    *stage2_confidence_noobj_loss*: 2 tensors
    *stage2_classification_loss*: 2 tensors

total graph size: 0.99 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold01/tiny-yolov2_odgi_128_64/09-24_18-42

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold01/tiny-yolov2_odgi_128_64/09-24_18-42[0m

Start training:
  > Step 1 (epoch 1): loss = 22.90896
  > Step 251 (epoch 9): loss = 1.22899
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 17): loss = 0.88860


============================================================== FOLD 02
Tensorflow version 1.10.1
ODGI - vedai_fold02, Input size 128

968 train samples (31 iters)
121 test samples (8 iters)

Config:
   [96mbatch_size:[0m 16
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold02
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold02
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 8
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 16
   [96mtest_tfrecords:[0m Data/vedai_fold02_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 31
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 32
   [96mtrain_tfrecords:[0m Data/vedai_fold02_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold02_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    with default `optimizer` = ADAM
 [31m> Build train operation[0m
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

Losses:
    *stage1_centers_localization_loss*: 2 tensors
    *stage1_scales_localization_loss*: 2 tensors
    *stage1_confidence_obj_loss*: 2 tensors
    *stage1_confidence_noobj_loss*: 2 tensors
    *stage1_group_classification_loss*: 2 tensors
    *stage1_classification_loss*: 2 tensors
    *stage1_offsets_loss*: 2 tensors
    *stage2_centers_localization_loss*: 2 tensors
    *stage2_scales_localization_loss*: 2 tensors
    *stage2_confidence_obj_loss*: 2 tensors
    *stage2_confidence_noobj_loss*: 2 tensors
    *stage2_classification_loss*: 2 tensors

total graph size: 0.99 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold02/tiny-yolov2_odgi_128_64/09-24_18-55

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold02/tiny-yolov2_odgi_128_64/09-24_18-55[0m

Start training:
  > Step 1 (epoch 1): loss = 19.97527
  > Step 251 (epoch 9): loss = 1.27587
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 17): loss = 0.80410
  > Step 751 (epoch 25): loss = 0.76517
val eval at step 1000: map@0.50 = 0.00091 - map@0.75 = 0.00000
  > Step 1001 (epoch 34): loss = 0.66695
  > Step 1251 (epoch 42): loss = 0.62784
val eval at step 1500: map@0.50 = 0.00930 - map@0.75 = 0.00413
  > Step 1501 (epoch 50): loss = 0.56191
  > Step 1751 (epoch 58): loss = 0.79404
val eval at step 2000: map@0.50 = 0.00138 - map@0.75 = 0.00000
  > Step 2001 (epoch 67): loss = 0.52474
  > Step 2251 (epoch 75): loss = 0.46588
val eval at step 2500: map@0.50 = 0.04964 - map@0.75 = 0.00826
  > Step 2501 (epoch 83): loss = 0.51156
  > Step 2751 (epoch 91): loss = 0.54191
val eval at step 3000: map@0.50 = 0.03554 - map@0.75 = 0.00505
  > Step 3001 (epoch 100): loss = 0.56039
  > Step 3251 (epoch 108): loss = 0.80620
val eval at step 3500: map@0.50 = 0.03167 - map@0.75 = 0.00000
  > Step 3501 (epoch 116): loss = 0.62325
  > Step 3751 (epoch 125): loss = 0.47715
val eval at step 4000: map@0.50 = 0.07979 - map@0.75 = 0.00289
  > Step 4001 (epoch 133): loss = 0.50007
  > Step 4251 (epoch 141): loss = 0.48622
val eval at step 4500: map@0.50 = 0.09026 - map@0.75 = 0.00434
  > Step 4501 (epoch 149): loss = 0.46502
  > Step 4751 (epoch 158): loss = 0.48208
val eval at step 5000: map@0.50 = 0.08159 - map@0.75 = 0.02114
  > Step 5001 (epoch 166): loss = 0.47002
  > Step 5251 (epoch 174): loss = 0.84327
val eval at step 5500: map@0.50 = 0.04674 - map@0.75 = 0.00826
  > Step 5501 (epoch 182): loss = 0.51186
  > Step 5751 (epoch 191): loss = 0.44826
val eval at step 6000: map@0.50 = 0.11034 - map@0.75 = 0.01284
  > Step 6001 (epoch 199): loss = 0.50478
  > Step 6251 (epoch 207): loss = 0.42163
val eval at step 6500: map@0.50 = 0.06247 - map@0.75 = 0.00207
  > Step 6501 (epoch 215): loss = 0.42842
  > Step 6751 (epoch 224): loss = 0.38668
val eval at step 7000: map@0.50 = 0.09291 - map@0.75 = 0.02456
  > Step 7001 (epoch 232): loss = 0.51722
  > Step 7251 (epoch 240): loss = 0.50872
val eval at step 7500: map@0.50 = 0.10437 - map@0.75 = 0.02020
  > Step 7501 (epoch 248): loss = 0.45322
  > Step 7751 (epoch 257): loss = 0.43268
val eval at step 8000: map@0.50 = 0.03501 - map@0.75 = 0.00000
  > Step 8001 (epoch 265): loss = 0.51198
  > Step 8251 (epoch 273): loss = 0.36931
val eval at step 8500: map@0.50 = 0.11206 - map@0.75 = 0.02156
  > Step 8501 (epoch 282): loss = 0.37165
  > Step 8751 (epoch 290): loss = 0.44980
val eval at step 9000: map@0.50 = 0.15501 - map@0.75 = 0.01451
  > Step 9001 (epoch 298): loss = 0.37102
  > Step 9251 (epoch 306): loss = 0.39375
val eval at step 9500: map@0.50 = 0.07709 - map@0.75 = 0.00413
  > Step 9501 (epoch 315): loss = 0.41054
  > Step 9751 (epoch 323): loss = 0.39280
val eval at step 10000: map@0.50 = 0.12368 - map@0.75 = 0.01033
  > Step 10001 (epoch 331): loss = 0.37826
  > Step 10251 (epoch 339): loss = 0.37194
val eval at step 10500: map@0.50 = 0.15437 - map@0.75 = 0.03581
  > Step 10501 (epoch 348): loss = 0.41162
  > Step 10751 (epoch 356): loss = 0.44060
val eval at step 11000: map@0.50 = 0.13861 - map@0.75 = 0.01179
  > Step 11001 (epoch 364): loss = 0.42227
  > Step 11251 (epoch 372): loss = 0.38304
val eval at step 11500: map@0.50 = 0.09242 - map@0.75 = 0.01670
  > Step 11501 (epoch 381): loss = 0.42710
  > Step 11751 (epoch 389): loss = 0.47232
val eval at step 12000: map@0.50 = 0.12630 - map@0.75 = 0.02458
  > Step 12001 (epoch 397): loss = 0.36208
  > Step 12251 (epoch 405): loss = 0.38309
val eval at step 12500: map@0.50 = 0.15996 - map@0.75 = 0.02460
  > Step 12501 (epoch 414): loss = 0.38849
  > Step 12751 (epoch 422): loss = 0.32611
val eval at step 13000: map@0.50 = 0.15352 - map@0.75 = 0.05900
  > Step 13001 (epoch 430): loss = 0.36749
  > Step 13251 (epoch 439): loss = 0.37185
val eval at step 13500: map@0.50 = 0.12493 - map@0.75 = 0.03489
  > Step 13501 (epoch 447): loss = 0.33057
  > Step 13751 (epoch 455): loss = 0.36049
val eval at step 14000: map@0.50 = 0.14759 - map@0.75 = 0.02158
  > Step 14001 (epoch 463): loss = 0.32773
  > Step 14251 (epoch 472): loss = 0.37441
val eval at step 14500: map@0.50 = 0.18108 - map@0.75 = 0.02433
  > Step 14501 (epoch 480): loss = 0.35794
  > Step 14751 (epoch 488): loss = 0.36689
val eval at step 15000: map@0.50 = 0.19457 - map@0.75 = 0.05537
  > Step 15001 (epoch 496): loss = 0.33120
  > Step 15251 (epoch 505): loss = 0.29582
val eval at step 15500: map@0.50 = 0.03686 - map@0.75 = 0.00000
  > Step 15501 (epoch 513): loss = 0.56340
  > Step 15751 (epoch 521): loss = 0.38969
val eval at step 16000: map@0.50 = 0.13841 - map@0.75 = 0.01446
  > Step 16001 (epoch 529): loss = 0.29770
  > Step 16251 (epoch 538): loss = 0.30522
val eval at step 16500: map@0.50 = 0.15140 - map@0.75 = 0.01756
  > Step 16501 (epoch 546): loss = 0.29240


============================================================== FOLD 03
Tensorflow version 1.10.1
ODGI - vedai_fold03, Input size 128

968 train samples (31 iters)
121 test samples (8 iters)

Config:
   [96mbatch_size:[0m 16
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold03
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold03
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 8
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 16
   [96mtest_tfrecords:[0m Data/vedai_fold03_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 31
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 32
   [96mtrain_tfrecords:[0m Data/vedai_fold03_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold03_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    with default `optimizer` = ADAM
 [31m> Build train operation[0m
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

Losses:
    *stage1_centers_localization_loss*: 2 tensors
    *stage1_scales_localization_loss*: 2 tensors
    *stage1_confidence_obj_loss*: 2 tensors
    *stage1_confidence_noobj_loss*: 2 tensors
    *stage1_group_classification_loss*: 2 tensors
    *stage1_classification_loss*: 2 tensors
    *stage1_offsets_loss*: 2 tensors
    *stage2_centers_localization_loss*: 2 tensors
    *stage2_scales_localization_loss*: 2 tensors
    *stage2_confidence_obj_loss*: 2 tensors
    *stage2_confidence_noobj_loss*: 2 tensors
    *stage2_classification_loss*: 2 tensors

total graph size: 0.99 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold03/tiny-yolov2_odgi_128_64/09-24_23-38

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold03/tiny-yolov2_odgi_128_64/09-24_23-38[0m

Start training:
  > Step 1 (epoch 1): loss = 16.08417
  > Step 251 (epoch 9): loss = 1.25296
val eval at step 500: map@0.50 = 0.00275 - map@0.75 = 0.00000
  > Step 501 (epoch 17): loss = 0.82688
  > Step 751 (epoch 25): loss = 0.66287
val eval at step 1000: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 1001 (epoch 34): loss = 0.57760
  > Step 1251 (epoch 42): loss = 0.57255
val eval at step 1500: map@0.50 = 0.01665 - map@0.75 = 0.00000
  > Step 1501 (epoch 50): loss = 0.50831
  > Step 1751 (epoch 58): loss = 0.77227
val eval at step 2000: map@0.50 = 0.01309 - map@0.75 = 0.00207
  > Step 2001 (epoch 67): loss = 0.57647
  > Step 2251 (epoch 75): loss = 0.57395
val eval at step 2500: map@0.50 = 0.02659 - map@0.75 = 0.00000
  > Step 2501 (epoch 83): loss = 0.54168
  > Step 2751 (epoch 91): loss = 0.54498
val eval at step 3000: map@0.50 = 0.03404 - map@0.75 = 0.00016
  > Step 3001 (epoch 100): loss = 0.58745
  > Step 3251 (epoch 108): loss = 0.74565
val eval at step 3500: map@0.50 = 0.03815 - map@0.75 = 0.00413
  > Step 3501 (epoch 116): loss = 0.56746
  > Step 3751 (epoch 125): loss = 0.52801
val eval at step 4000: map@0.50 = 0.04730 - map@0.75 = 0.01274
  > Step 4001 (epoch 133): loss = 0.52745
  > Step 4251 (epoch 141): loss = 0.55098
val eval at step 4500: map@0.50 = 0.06905 - map@0.75 = 0.01036
  > Step 4501 (epoch 149): loss = 0.47828
  > Step 4751 (epoch 158): loss = 0.47384
val eval at step 5000: map@0.50 = 0.07891 - map@0.75 = 0.01033
  > Step 5001 (epoch 166): loss = 0.49257
  > Step 5251 (epoch 174): loss = 0.44882
val eval at step 5500: map@0.50 = 0.00826 - map@0.75 = 0.00000
  > Step 5501 (epoch 182): loss = 0.62398
  > Step 5751 (epoch 191): loss = 0.45343
val eval at step 6000: map@0.50 = 0.09767 - map@0.75 = 0.00620
  > Step 6001 (epoch 199): loss = 0.42864
  > Step 6251 (epoch 207): loss = 0.41182
val eval at step 6500: map@0.50 = 0.04135 - map@0.75 = 0.00826
  > Step 6501 (epoch 215): loss = 0.39754
  > Step 6751 (epoch 224): loss = 0.40187
val eval at step 7000: map@0.50 = 0.11060 - map@0.75 = 0.00537
  > Step 7001 (epoch 232): loss = 0.47768
  > Step 7251 (epoch 240): loss = 0.47255
val eval at step 7500: map@0.50 = 0.08713 - map@0.75 = 0.00771
  > Step 7501 (epoch 248): loss = 0.41035
  > Step 7751 (epoch 257): loss = 0.47334
val eval at step 8000: map@0.50 = 0.05181 - map@0.75 = 0.01405
  > Step 8001 (epoch 265): loss = 0.50000
  > Step 8251 (epoch 273): loss = 0.46607
val eval at step 8500: map@0.50 = 0.08312 - map@0.75 = 0.00966
  > Step 8501 (epoch 282): loss = 0.38555
  > Step 8751 (epoch 290): loss = 0.41958
val eval at step 9000: map@0.50 = 0.09918 - map@0.75 = 0.01155
  > Step 9001 (epoch 298): loss = 0.37069
  > Step 9251 (epoch 306): loss = 0.41489
val eval at step 9500: map@0.50 = 0.10453 - map@0.75 = 0.01116
  > Step 9501 (epoch 315): loss = 0.43318
  > Step 9751 (epoch 323): loss = 0.34653
val eval at step 10000: map@0.50 = 0.09459 - map@0.75 = 0.00940
  > Step 10001 (epoch 331): loss = 0.38325
  > Step 10251 (epoch 339): loss = 0.39802
val eval at step 10500: map@0.50 = 0.12309 - map@0.75 = 0.01995
  > Step 10501 (epoch 348): loss = 0.36104
  > Step 10751 (epoch 356): loss = 0.37161
val eval at step 11000: map@0.50 = 0.09523 - map@0.75 = 0.00992
  > Step 11001 (epoch 364): loss = 0.40801
  > Step 11251 (epoch 372): loss = 0.40434
val eval at step 11500: map@0.50 = 0.12489 - map@0.75 = 0.03760
  > Step 11501 (epoch 381): loss = 0.34771
  > Step 11751 (epoch 389): loss = 0.37553
val eval at step 12000: map@0.50 = 0.07004 - map@0.75 = 0.01791
  > Step 12001 (epoch 397): loss = 0.40615
  > Step 12251 (epoch 405): loss = 0.35326
val eval at step 12500: map@0.50 = 0.14068 - map@0.75 = 0.01023
  > Step 12501 (epoch 414): loss = 0.33617
  > Step 12751 (epoch 422): loss = 0.38385
val eval at step 13000: map@0.50 = 0.16341 - map@0.75 = 0.02769
  > Step 13001 (epoch 430): loss = 0.30187
  > Step 13251 (epoch 439): loss = 0.38262
val eval at step 13500: map@0.50 = 0.10745 - map@0.75 = 0.01343
  > Step 13501 (epoch 447): loss = 0.31981
  > Step 13751 (epoch 455): loss = 0.28189
val eval at step 14000: map@0.50 = 0.13421 - map@0.75 = 0.04437
  > Step 14001 (epoch 463): loss = 0.32255
  > Step 14251 (epoch 472): loss = 0.36789
val eval at step 14500: map@0.50 = 0.18466 - map@0.75 = 0.01240
  > Step 14501 (epoch 480): loss = 0.29773
  > Step 14751 (epoch 488): loss = 0.40630
val eval at step 15000: map@0.50 = 0.12353 - map@0.75 = 0.01687
  > Step 15001 (epoch 496): loss = 0.32460
  > Step 15251 (epoch 505): loss = 0.32327
val eval at step 15500: map@0.50 = 0.11665 - map@0.75 = 0.00209
  > Step 15501 (epoch 513): loss = 0.33502
  > Step 15751 (epoch 521): loss = 0.32864
val eval at step 16000: map@0.50 = 0.05606 - map@0.75 = 0.00207
  > Step 16001 (epoch 529): loss = 0.44769
  > Step 16251 (epoch 538): loss = 0.32344
val eval at step 16500: map@0.50 = 0.10227 - map@0.75 = 0.02596
  > Step 16501 (epoch 546): loss = 0.35579
  > Step 16751 (epoch 554): loss = 0.31647
val eval at step 17000: map@0.50 = 0.10188 - map@0.75 = 0.02893
  > Step 17001 (epoch 563): loss = 0.30064
  > Step 17251 (epoch 571): loss = 0.26011
val eval at step 17500: map@0.50 = 0.16694 - map@0.75 = 0.04199
  > Step 17501 (epoch 579): loss = 0.24085
  > Step 17751 (epoch 587): loss = 0.27272
val eval at step 18000: map@0.50 = 0.14443 - map@0.75 = 0.02975
  > Step 18001 (epoch 596): loss = 0.30311
test eval at step 18150: map@0.50 = 0.10039 - map@0.75 = 0.02342


============================================================== FOLD 04
Tensorflow version 1.10.1
ODGI - vedai_fold04, Input size 128

968 train samples (31 iters)
121 test samples (8 iters)

Config:
   [96mbatch_size:[0m 16
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold04
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold04
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 8
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 16
   [96mtest_tfrecords:[0m Data/vedai_fold04_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 31
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 32
   [96mtrain_tfrecords:[0m Data/vedai_fold04_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold04_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    with default `optimizer` = ADAM
 [31m> Build train operation[0m
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

Losses:
    *stage1_centers_localization_loss*: 2 tensors
    *stage1_scales_localization_loss*: 2 tensors
    *stage1_confidence_obj_loss*: 2 tensors
    *stage1_confidence_noobj_loss*: 2 tensors
    *stage1_group_classification_loss*: 2 tensors
    *stage1_classification_loss*: 2 tensors
    *stage1_offsets_loss*: 2 tensors
    *stage2_centers_localization_loss*: 2 tensors
    *stage2_scales_localization_loss*: 2 tensors
    *stage2_confidence_obj_loss*: 2 tensors
    *stage2_confidence_noobj_loss*: 2 tensors
    *stage2_classification_loss*: 2 tensors

total graph size: 0.99 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold04/tiny-yolov2_odgi_128_64/09-25_04-46

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold04/tiny-yolov2_odgi_128_64/09-25_04-46[0m

Start training:
  > Step 1 (epoch 1): loss = 32.02388
  > Step 251 (epoch 9): loss = 1.28269
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 17): loss = 0.66776
  > Step 751 (epoch 25): loss = 0.69262
val eval at step 1000: map@0.50 = 0.01084 - map@0.75 = 0.00138
  > Step 1001 (epoch 34): loss = 0.58903
  > Step 1251 (epoch 42): loss = 0.54513
val eval at step 1500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 1501 (epoch 50): loss = 0.70032
  > Step 1751 (epoch 58): loss = 0.72041
val eval at step 2000: map@0.50 = 0.01372 - map@0.75 = 0.00000
  > Step 2001 (epoch 67): loss = 0.60860
  > Step 2251 (epoch 75): loss = 0.51214
val eval at step 2500: map@0.50 = 0.00549 - map@0.75 = 0.00241
  > Step 2501 (epoch 83): loss = 0.55372
  > Step 2751 (epoch 91): loss = 0.57231
val eval at step 3000: map@0.50 = 0.01263 - map@0.75 = 0.00000
  > Step 3001 (epoch 100): loss = 0.58511
  > Step 3251 (epoch 108): loss = 0.61994
val eval at step 3500: map@0.50 = 0.03112 - map@0.75 = 0.00000
  > Step 3501 (epoch 116): loss = 0.52264
  > Step 3751 (epoch 125): loss = 0.54035
val eval at step 4000: map@0.50 = 0.05094 - map@0.75 = 0.00020
  > Step 4001 (epoch 133): loss = 0.50148
  > Step 4251 (epoch 141): loss = 0.53863
val eval at step 4500: map@0.50 = 0.02106 - map@0.75 = 0.00592
  > Step 4501 (epoch 149): loss = 0.49683
  > Step 4751 (epoch 158): loss = 0.51779
val eval at step 5000: map@0.50 = 0.05647 - map@0.75 = 0.00000
  > Step 5001 (epoch 166): loss = 0.45023
  > Step 5251 (epoch 174): loss = 0.78761
val eval at step 5500: map@0.50 = 0.01309 - map@0.75 = 0.00000
  > Step 5501 (epoch 182): loss = 0.55325
  > Step 5751 (epoch 191): loss = 0.51287
val eval at step 6000: map@0.50 = 0.07888 - map@0.75 = 0.01191
  > Step 6001 (epoch 199): loss = 0.42900
  > Step 6251 (epoch 207): loss = 0.42038
val eval at step 6500: map@0.50 = 0.07266 - map@0.75 = 0.00172
  > Step 6501 (epoch 215): loss = 0.49783
  > Step 6751 (epoch 224): loss = 0.46836
val eval at step 7000: map@0.50 = 0.09388 - map@0.75 = 0.00207
  > Step 7001 (epoch 232): loss = 0.39530
  > Step 7251 (epoch 240): loss = 0.42231
val eval at step 7500: map@0.50 = 0.06250 - map@0.75 = 0.00826
  > Step 7501 (epoch 248): loss = 0.43052
  > Step 7751 (epoch 257): loss = 0.40511
val eval at step 8000: map@0.50 = 0.09381 - map@0.75 = 0.00413
  > Step 8001 (epoch 265): loss = 0.46788
  > Step 8251 (epoch 273): loss = 0.87564
val eval at step 8500: map@0.50 = 0.05227 - map@0.75 = 0.00034
  > Step 8501 (epoch 282): loss = 0.41160
  > Step 8751 (epoch 290): loss = 0.41073
val eval at step 9000: map@0.50 = 0.09898 - map@0.75 = 0.04596
  > Step 9001 (epoch 298): loss = 0.39670
  > Step 9251 (epoch 306): loss = 0.41118
val eval at step 9500: map@0.50 = 0.10812 - map@0.75 = 0.03379
  > Step 9501 (epoch 315): loss = 0.33963
  > Step 9751 (epoch 323): loss = 0.38350
val eval at step 10000: map@0.50 = 0.10525 - map@0.75 = 0.02376
  > Step 10001 (epoch 331): loss = 0.34376
  > Step 10251 (epoch 339): loss = 0.36460
val eval at step 10500: map@0.50 = 0.11961 - map@0.75 = 0.00689
  > Step 10501 (epoch 348): loss = 0.36721
  > Step 10751 (epoch 356): loss = 0.39928
val eval at step 11000: map@0.50 = 0.11877 - map@0.75 = 0.02777
  > Step 11001 (epoch 364): loss = 0.33976
  > Step 11251 (epoch 372): loss = 0.40507
val eval at step 11500: map@0.50 = 0.00574 - map@0.75 = 0.00000
  > Step 11501 (epoch 381): loss = 0.45585
  > Step 11751 (epoch 389): loss = 0.38156
val eval at step 12000: map@0.50 = 0.11331 - map@0.75 = 0.02720
  > Step 12001 (epoch 397): loss = 0.37009
  > Step 12251 (epoch 405): loss = 0.31627
val eval at step 12500: map@0.50 = 0.10386 - map@0.75 = 0.02314
  > Step 12501 (epoch 414): loss = 0.32255
  > Step 12751 (epoch 422): loss = 0.34993
val eval at step 13000: map@0.50 = 0.10952 - map@0.75 = 0.01679
  > Step 13001 (epoch 430): loss = 0.30487
  > Step 13251 (epoch 439): loss = 0.37312
val eval at step 13500: map@0.50 = 0.10489 - map@0.75 = 0.02774
  > Step 13501 (epoch 447): loss = 0.35548
  > Step 13751 (epoch 455): loss = 0.29663
val eval at step 14000: map@0.50 = 0.11092 - map@0.75 = 0.02713
  > Step 14001 (epoch 463): loss = 0.40666
  > Step 14251 (epoch 472): loss = 0.29661
val eval at step 14500: map@0.50 = 0.10331 - map@0.75 = 0.02686
  > Step 14501 (epoch 480): loss = 0.35321
  > Step 14751 (epoch 488): loss = 0.34494
val eval at step 15000: map@0.50 = 0.08989 - map@0.75 = 0.01842
  > Step 15001 (epoch 496): loss = 0.34555
  > Step 15251 (epoch 505): loss = 0.34405
val eval at step 15500: map@0.50 = 0.12683 - map@0.75 = 0.02204
  > Step 15501 (epoch 513): loss = 0.32275
  > Step 15751 (epoch 521): loss = 0.33547
val eval at step 16000: map@0.50 = 0.04155 - map@0.75 = 0.00000
  > Step 16001 (epoch 529): loss = 0.45622
  > Step 16251 (epoch 538): loss = 0.39824
val eval at step 16500: map@0.50 = 0.13454 - map@0.75 = 0.01807
  > Step 16501 (epoch 546): loss = 0.30101
  > Step 16751 (epoch 554): loss = 0.28171
val eval at step 17000: map@0.50 = 0.09910 - map@0.75 = 0.01653
  > Step 17001 (epoch 563): loss = 0.28272
  > Step 17251 (epoch 571): loss = 0.29115
val eval at step 17500: map@0.50 = 0.10171 - map@0.75 = 0.01797
  > Step 17501 (epoch 579): loss = 0.35965
  > Step 17751 (epoch 587): loss = 0.29626
val eval at step 18000: map@0.50 = 0.13761 - map@0.75 = 0.02507
  > Step 18001 (epoch 596): loss = 0.29455
test eval at step 18150: map@0.50 = 0.12764 - map@0.75 = 0.01228


============================================================== FOLD 05
Tensorflow version 1.10.1
ODGI - vedai_fold05, Input size 128

968 train samples (31 iters)
121 test samples (8 iters)

Config:
   [96mbatch_size:[0m 16
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold05
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold05
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 8
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 16
   [96mtest_tfrecords:[0m Data/vedai_fold05_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 31
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 32
   [96mtrain_tfrecords:[0m Data/vedai_fold05_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold05_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    with default `optimizer` = ADAM
 [31m> Build train operation[0m
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

Losses:
    *stage1_centers_localization_loss*: 2 tensors
    *stage1_scales_localization_loss*: 2 tensors
    *stage1_confidence_obj_loss*: 2 tensors
    *stage1_confidence_noobj_loss*: 2 tensors
    *stage1_group_classification_loss*: 2 tensors
    *stage1_classification_loss*: 2 tensors
    *stage1_offsets_loss*: 2 tensors
    *stage2_centers_localization_loss*: 2 tensors
    *stage2_scales_localization_loss*: 2 tensors
    *stage2_confidence_obj_loss*: 2 tensors
    *stage2_confidence_noobj_loss*: 2 tensors
    *stage2_classification_loss*: 2 tensors

total graph size: 0.99 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold05/tiny-yolov2_odgi_128_64/09-25_09-53

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold05/tiny-yolov2_odgi_128_64/09-25_09-53[0m

Start training:
  > Step 1 (epoch 1): loss = 19.29179
  > Step 251 (epoch 9): loss = 1.35856
val eval at step 500: map@0.50 = 0.00413 - map@0.75 = 0.00000
  > Step 501 (epoch 17): loss = 0.74765
  > Step 751 (epoch 25): loss = 0.58976
val eval at step 1000: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 1001 (epoch 34): loss = 0.65055
  > Step 1251 (epoch 42): loss = 0.59468
val eval at step 1500: map@0.50 = 0.00856 - map@0.75 = 0.00000
  > Step 1501 (epoch 50): loss = 0.55263
  > Step 1751 (epoch 58): loss = 0.68504
val eval at step 2000: map@0.50 = 0.05239 - map@0.75 = 0.00000
  > Step 2001 (epoch 67): loss = 0.55790
  > Step 2251 (epoch 75): loss = 0.47552
val eval at step 2500: map@0.50 = 0.04712 - map@0.75 = 0.00103
  > Step 2501 (epoch 83): loss = 0.50499
  > Step 2751 (epoch 91): loss = 0.52467
val eval at step 3000: map@0.50 = 0.03678 - map@0.75 = 0.00083
  > Step 3001 (epoch 100): loss = 0.53738
