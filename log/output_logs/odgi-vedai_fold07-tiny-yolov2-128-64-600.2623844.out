============================================================== FOLD 07
Tensorflow version 1.10.1
ODGI - vedai_fold07, Input size 128

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold07
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold07
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold07_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold07_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold07_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold07/tiny-yolov2_odgi_128_64/09-27_13-31

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold07/tiny-yolov2_odgi_128_64/09-27_13-31[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 10.00805, loss 2 = 12.82327
  > Step 251 (epoch 7): loss 1 = 0.81875, loss 2 = 7.50285
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.61858, loss 2 = 0.47618
  > Step 751 (epoch 19): loss 1 = 0.29585, loss 2 = 0.41053
val eval at step 1000: map@0.50 = 0.00059 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.32260, loss 2 = 0.30747
  > Step 1251 (epoch 32): loss 1 = 0.29801, loss 2 = 0.31228
val eval at step 1500: map@0.50 = 0.00020 - map@0.75 = 0.00000
  > Step 1501 (epoch 38): loss 1 = 0.23338, loss 2 = 0.35931
  > Step 1751 (epoch 44): loss 1 = 0.27265, loss 2 = 0.33187
val eval at step 2000: map@0.50 = 0.00574 - map@0.75 = 0.00000
  > Step 2001 (epoch 50): loss 1 = 0.25209, loss 2 = 0.38233
  > Step 2251 (epoch 56): loss 1 = 0.26125, loss 2 = 0.36036
val eval at step 2500: map@0.50 = 0.00275 - map@0.75 = 0.00000
  > Step 2501 (epoch 63): loss 1 = 0.18735, loss 2 = 0.36180
  > Step 2751 (epoch 69): loss 1 = 0.20549, loss 2 = 0.27688
val eval at step 3000: map@0.50 = 0.00464 - map@0.75 = 0.00000
  > Step 3001 (epoch 75): loss 1 = 0.22731, loss 2 = 0.32106
  > Step 3251 (epoch 81): loss 1 = 0.21513, loss 2 = 0.39369
val eval at step 3500: map@0.50 = 0.01653 - map@0.75 = 0.00207
  > Step 3501 (epoch 87): loss 1 = 0.25504, loss 2 = 0.30611
  > Step 3751 (epoch 94): loss 1 = 0.24425, loss 2 = 0.30001
val eval at step 4000: map@0.50 = 0.01953 - map@0.75 = 0.00207
  > Step 4001 (epoch 100): loss 1 = 0.22375, loss 2 = 0.33573
  > Step 4251 (epoch 106): loss 1 = 0.18750, loss 2 = 0.26726
val eval at step 4500: map@0.50 = 0.05666 - map@0.75 = 0.00379
  > Step 4501 (epoch 112): loss 1 = 0.18580, loss 2 = 0.36679
  > Step 4751 (epoch 118): loss 1 = 0.14490, loss 2 = 0.28916
val eval at step 5000: map@0.50 = 0.01383 - map@0.75 = 0.00000
  > Step 5001 (epoch 124): loss 1 = 0.23272, loss 2 = 0.30708
  > Step 5251 (epoch 131): loss 1 = 0.25906, loss 2 = 0.30700
val eval at step 5500: map@0.50 = 0.04423 - map@0.75 = 0.01033
  > Step 5501 (epoch 137): loss 1 = 0.21243, loss 2 = 0.26630
  > Step 5751 (epoch 143): loss 1 = 0.15991, loss 2 = 0.33961
val eval at step 6000: map@0.50 = 0.05947 - map@0.75 = 0.00689
  > Step 6001 (epoch 149): loss 1 = 0.18520, loss 2 = 0.23958
  > Step 6251 (epoch 155): loss 1 = 0.21060, loss 2 = 0.26832
val eval at step 6500: map@0.50 = 0.03642 - map@0.75 = 0.00000
  > Step 6501 (epoch 162): loss 1 = 0.20332, loss 2 = 0.24756
  > Step 6751 (epoch 168): loss 1 = 0.20455, loss 2 = 0.24651
val eval at step 7000: map@0.50 = 0.02757 - map@0.75 = 0.00103
  > Step 7001 (epoch 174): loss 1 = 0.22388, loss 2 = 0.20830
  > Step 7251 (epoch 180): loss 1 = 0.21939, loss 2 = 0.19928
val eval at step 7500: map@0.50 = 0.05536 - map@0.75 = 0.00103
  > Step 7501 (epoch 186): loss 1 = 0.21885, loss 2 = 0.26689
  > Step 7751 (epoch 193): loss 1 = 0.21595, loss 2 = 0.28532
val eval at step 8000: map@0.50 = 0.01935 - map@0.75 = 0.00165
  > Step 8001 (epoch 199): loss 1 = 0.27840, loss 2 = 0.28969
  > Step 8251 (epoch 205): loss 1 = 0.18676, loss 2 = 0.22138
val eval at step 8500: map@0.50 = 0.06304 - map@0.75 = 0.00471
  > Step 8501 (epoch 211): loss 1 = 0.16189, loss 2 = 0.26234
  > Step 8751 (epoch 217): loss 1 = 0.20439, loss 2 = 0.26146
val eval at step 9000: map@0.50 = 0.09033 - map@0.75 = 0.00179
  > Step 9001 (epoch 224): loss 1 = 0.21006, loss 2 = 0.24714
  > Step 9251 (epoch 230): loss 1 = 0.16297, loss 2 = 0.22227
val eval at step 9500: map@0.50 = 0.05647 - map@0.75 = 0.00207
  > Step 9501 (epoch 236): loss 1 = 0.15164, loss 2 = 0.26017
  > Step 9751 (epoch 242): loss 1 = 0.19700, loss 2 = 0.21496
val eval at step 10000: map@0.50 = 0.06958 - map@0.75 = 0.00000
  > Step 10001 (epoch 248): loss 1 = 0.21979, loss 2 = 0.23534
  > Step 10251 (epoch 255): loss 1 = 0.29158, loss 2 = 0.24553
val eval at step 10500: map@0.50 = 0.05988 - map@0.75 = 0.00413
  > Step 10501 (epoch 261): loss 1 = 0.16191, loss 2 = 0.28224
  > Step 10751 (epoch 267): loss 1 = 0.30873, loss 2 = 0.26151
val eval at step 11000: map@0.50 = 0.04995 - map@0.75 = 0.01481
  > Step 11001 (epoch 273): loss 1 = 0.15428, loss 2 = 0.24266
  > Step 11251 (epoch 279): loss 1 = 0.20881, loss 2 = 0.23491
val eval at step 11500: map@0.50 = 0.08388 - map@0.75 = 0.02615
  > Step 11501 (epoch 286): loss 1 = 0.21284, loss 2 = 0.16773
  > Step 11751 (epoch 292): loss 1 = 0.26376, loss 2 = 0.21542
val eval at step 12000: map@0.50 = 0.10572 - map@0.75 = 0.02107
  > Step 12001 (epoch 298): loss 1 = 0.19861, loss 2 = 0.18200
  > Step 12251 (epoch 304): loss 1 = 0.18212, loss 2 = 0.20257
val eval at step 12500: map@0.50 = 0.11861 - map@0.75 = 0.00716
  > Step 12501 (epoch 310): loss 1 = 0.18945, loss 2 = 0.21438
  > Step 12751 (epoch 317): loss 1 = 0.14581, loss 2 = 0.18598
val eval at step 13000: map@0.50 = 0.08138 - map@0.75 = 0.01743
  > Step 13001 (epoch 323): loss 1 = 0.26175, loss 2 = 0.19675
  > Step 13251 (epoch 329): loss 1 = 0.19078, loss 2 = 0.17955
val eval at step 13500: map@0.50 = 0.08001 - map@0.75 = 0.01994
  > Step 13501 (epoch 335): loss 1 = 0.23853, loss 2 = 0.20644
  > Step 13751 (epoch 341): loss 1 = 0.18677, loss 2 = 0.20295
val eval at step 14000: map@0.50 = 0.10253 - map@0.75 = 0.04560
  > Step 14001 (epoch 348): loss 1 = 0.28666, loss 2 = 0.13401
  > Step 14251 (epoch 354): loss 1 = 0.18784, loss 2 = 0.17106
val eval at step 14500: map@0.50 = 0.09973 - map@0.75 = 0.01060
  > Step 14501 (epoch 360): loss 1 = 0.17530, loss 2 = 0.20236
  > Step 14751 (epoch 366): loss 1 = 0.17086, loss 2 = 0.15905
val eval at step 15000: map@0.50 = 0.02868 - map@0.75 = 0.00103
  > Step 15001 (epoch 372): loss 1 = 0.33485, loss 2 = 0.24315
  > Step 15251 (epoch 379): loss 1 = 0.19871, loss 2 = 0.20195
val eval at step 15500: map@0.50 = 0.10060 - map@0.75 = 0.01538
  > Step 15501 (epoch 385): loss 1 = 0.20557, loss 2 = 0.17907
  > Step 15751 (epoch 391): loss 1 = 0.17092, loss 2 = 0.20611
val eval at step 16000: map@0.50 = 0.08847 - map@0.75 = 0.01198
  > Step 16001 (epoch 397): loss 1 = 0.16603, loss 2 = 0.16486
  > Step 16251 (epoch 403): loss 1 = 0.19816, loss 2 = 0.14161
val eval at step 16500: map@0.50 = 0.11328 - map@0.75 = 0.01921
  > Step 16501 (epoch 410): loss 1 = 0.17230, loss 2 = 0.12673
  > Step 16751 (epoch 416): loss 1 = 0.19034, loss 2 = 0.17343
val eval at step 17000: map@0.50 = 0.09458 - map@0.75 = 0.00826
  > Step 17001 (epoch 422): loss 1 = 0.17512, loss 2 = 0.13567
  > Step 17251 (epoch 428): loss 1 = 0.15731, loss 2 = 0.22399
val eval at step 17500: map@0.50 = 0.10002 - map@0.75 = 0.02588
  > Step 17501 (epoch 434): loss 1 = 0.20558, loss 2 = 0.16170
  > Step 17751 (epoch 441): loss 1 = 0.15928, loss 2 = 0.16022
val eval at step 18000: map@0.50 = 0.12008 - map@0.75 = 0.01722
  > Step 18001 (epoch 447): loss 1 = 0.26224, loss 2 = 0.15896
  > Step 18251 (epoch 453): loss 1 = 0.17836, loss 2 = 0.19289
val eval at step 18500: map@0.50 = 0.08634 - map@0.75 = 0.01171
  > Step 18501 (epoch 459): loss 1 = 0.18052, loss 2 = 0.20181
  > Step 18751 (epoch 465): loss 1 = 0.19427, loss 2 = 0.19850
val eval at step 19000: map@0.50 = 0.13176 - map@0.75 = 0.01550
  > Step 19001 (epoch 472): loss 1 = 0.13991, loss 2 = 0.15035
  > Step 19251 (epoch 478): loss 1 = 0.15951, loss 2 = 0.12959
val eval at step 19500: map@0.50 = 0.12163 - map@0.75 = 0.00895
  > Step 19501 (epoch 484): loss 1 = 0.14721, loss 2 = 0.14044
  > Step 19751 (epoch 490): loss 1 = 0.13125, loss 2 = 0.14424
val eval at step 20000: map@0.50 = 0.08503 - map@0.75 = 0.01240
  > Step 20001 (epoch 496): loss 1 = 0.12302, loss 2 = 0.14334
  > Step 20251 (epoch 503): loss 1 = 0.15642, loss 2 = 0.14042
val eval at step 20500: map@0.50 = 0.11050 - map@0.75 = 0.01553
  > Step 20501 (epoch 509): loss 1 = 0.17859, loss 2 = 0.16774
  > Step 20751 (epoch 515): loss 1 = 0.16950, loss 2 = 0.17279
val eval at step 21000: map@0.50 = 0.09446 - map@0.75 = 0.03134
  > Step 21001 (epoch 521): loss 1 = 0.12255, loss 2 = 0.19410
  > Step 21251 (epoch 527): loss 1 = 0.11737, loss 2 = 0.12616
val eval at step 21500: map@0.50 = 0.09479 - map@0.75 = 0.02466
  > Step 21501 (epoch 534): loss 1 = 0.16492, loss 2 = 0.12931
  > Step 21751 (epoch 540): loss 1 = 0.15437, loss 2 = 0.13001
val eval at step 22000: map@0.50 = 0.14232 - map@0.75 = 0.01498
  > Step 22001 (epoch 546): loss 1 = 0.19054, loss 2 = 0.13734
  > Step 22251 (epoch 552): loss 1 = 0.13254, loss 2 = 0.11975
val eval at step 22500: map@0.50 = 0.10817 - map@0.75 = 0.01405
  > Step 22501 (epoch 558): loss 1 = 0.24184, loss 2 = 0.15873
  > Step 22751 (epoch 565): loss 1 = 0.21520, loss 2 = 0.13451
val eval at step 23000: map@0.50 = 0.12924 - map@0.75 = 0.03430
  > Step 23001 (epoch 571): loss 1 = 0.17002, loss 2 = 0.13864
  > Step 23251 (epoch 577): loss 1 = 0.22774, loss 2 = 0.16628
val eval at step 23500: map@0.50 = 0.12725 - map@0.75 = 0.01887
  > Step 23501 (epoch 583): loss 1 = 0.19924, loss 2 = 0.15201
  > Step 23751 (epoch 589): loss 1 = 0.12412, loss 2 = 0.18584
val eval at step 24000: map@0.50 = 0.10566 - map@0.75 = 0.02214
  > Step 24001 (epoch 596): loss 1 = 0.14179, loss 2 = 0.12419
test eval at step 24200: map@0.50 = 0.14008 - map@0.75 = 0.01343
