============================================================== FOLD 01
Tensorflow version 1.10.1
ODGI - vedai_fold01, Input size 128

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold01
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold01
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold01_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold01_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold01_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold01/tiny-yolov2_odgi_128_64/09-27_10-44

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold01/tiny-yolov2_odgi_128_64/09-27_10-44[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 9.78018, loss 2 = 8.01926
  > Step 251 (epoch 7): loss 1 = 1.00984, loss 2 = 5.81662
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.40608, loss 2 = 0.43833
  > Step 751 (epoch 19): loss 1 = 0.37415, loss 2 = 0.32856
val eval at step 1000: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.33993, loss 2 = 0.42154
  > Step 1251 (epoch 32): loss 1 = 0.27758, loss 2 = 0.37503
val eval at step 1500: map@0.50 = 0.01343 - map@0.75 = 0.00000
  > Step 1501 (epoch 38): loss 1 = 0.26917, loss 2 = 0.37386
  > Step 1751 (epoch 44): loss 1 = 0.32673, loss 2 = 0.37837
val eval at step 2000: map@0.50 = 0.00034 - map@0.75 = 0.00000
  > Step 2001 (epoch 50): loss 1 = 0.23468, loss 2 = 0.43617
  > Step 2251 (epoch 56): loss 1 = 0.29359, loss 2 = 0.35968
val eval at step 2500: map@0.50 = 0.02792 - map@0.75 = 0.00000
  > Step 2501 (epoch 63): loss 1 = 0.20409, loss 2 = 0.45918
  > Step 2751 (epoch 69): loss 1 = 0.20369, loss 2 = 0.38828
val eval at step 3000: map@0.50 = 0.01185 - map@0.75 = 0.00000
  > Step 3001 (epoch 75): loss 1 = 0.19704, loss 2 = 0.33475
  > Step 3251 (epoch 81): loss 1 = 0.25778, loss 2 = 0.29514
val eval at step 3500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 3501 (epoch 87): loss 1 = 0.59517, loss 2 = 0.33847
  > Step 3751 (epoch 94): loss 1 = 0.29082, loss 2 = 0.35311
val eval at step 4000: map@0.50 = 0.02115 - map@0.75 = 0.00207
  > Step 4001 (epoch 100): loss 1 = 0.21761, loss 2 = 0.26897
  > Step 4251 (epoch 106): loss 1 = 0.22785, loss 2 = 0.31062
val eval at step 4500: map@0.50 = 0.04120 - map@0.75 = 0.00000
  > Step 4501 (epoch 112): loss 1 = 0.12804, loss 2 = 0.29316
  > Step 4751 (epoch 118): loss 1 = 0.16835, loss 2 = 0.34449
val eval at step 5000: map@0.50 = 0.03182 - map@0.75 = 0.00217
  > Step 5001 (epoch 124): loss 1 = 0.16191, loss 2 = 0.34112
  > Step 5251 (epoch 131): loss 1 = 0.35330, loss 2 = 0.30355
val eval at step 5500: map@0.50 = 0.03516 - map@0.75 = 0.00275
  > Step 5501 (epoch 137): loss 1 = 0.22967, loss 2 = 0.31347
  > Step 5751 (epoch 143): loss 1 = 0.23877, loss 2 = 0.32205
val eval at step 6000: map@0.50 = 0.00275 - map@0.75 = 0.00000
  > Step 6001 (epoch 149): loss 1 = 0.26586, loss 2 = 0.29264
  > Step 6251 (epoch 155): loss 1 = 0.19080, loss 2 = 0.27039
val eval at step 6500: map@0.50 = 0.07029 - map@0.75 = 0.02094
  > Step 6501 (epoch 162): loss 1 = 0.19194, loss 2 = 0.22435
  > Step 6751 (epoch 168): loss 1 = 0.18834, loss 2 = 0.22422
val eval at step 7000: map@0.50 = 0.03670 - map@0.75 = 0.00178
  > Step 7001 (epoch 174): loss 1 = 0.20446, loss 2 = 0.25078
  > Step 7251 (epoch 180): loss 1 = 0.20648, loss 2 = 0.25468
val eval at step 7500: map@0.50 = 0.03269 - map@0.75 = 0.00000
  > Step 7501 (epoch 186): loss 1 = 0.20184, loss 2 = 0.25168
  > Step 7751 (epoch 193): loss 1 = 0.32248, loss 2 = 0.29344
val eval at step 8000: map@0.50 = 0.03365 - map@0.75 = 0.00069
  > Step 8001 (epoch 199): loss 1 = 0.19543, loss 2 = 0.25665
  > Step 8251 (epoch 205): loss 1 = 0.23267, loss 2 = 0.21350
val eval at step 8500: map@0.50 = 0.05519 - map@0.75 = 0.01134
  > Step 8501 (epoch 211): loss 1 = 0.20108, loss 2 = 0.22468
  > Step 8751 (epoch 217): loss 1 = 0.23987, loss 2 = 0.26156
val eval at step 9000: map@0.50 = 0.06299 - map@0.75 = 0.00000
  > Step 9001 (epoch 224): loss 1 = 0.18278, loss 2 = 0.21792
  > Step 9251 (epoch 230): loss 1 = 0.17342, loss 2 = 0.23019
val eval at step 9500: map@0.50 = 0.07684 - map@0.75 = 0.00826
  > Step 9501 (epoch 236): loss 1 = 0.15067, loss 2 = 0.27513
  > Step 9751 (epoch 242): loss 1 = 0.25420, loss 2 = 0.20731
val eval at step 10000: map@0.50 = 0.08834 - map@0.75 = 0.00138
  > Step 10001 (epoch 248): loss 1 = 0.20014, loss 2 = 0.19672
  > Step 10251 (epoch 255): loss 1 = 0.21139, loss 2 = 0.21111
val eval at step 10500: map@0.50 = 0.00826 - map@0.75 = 0.00000
  > Step 10501 (epoch 261): loss 1 = 0.33043, loss 2 = 0.31378
  > Step 10751 (epoch 267): loss 1 = 0.22914, loss 2 = 0.22729
val eval at step 11000: map@0.50 = 0.07488 - map@0.75 = 0.00271
  > Step 11001 (epoch 273): loss 1 = 0.21723, loss 2 = 0.20885
  > Step 11251 (epoch 279): loss 1 = 0.20985, loss 2 = 0.16933
val eval at step 11500: map@0.50 = 0.08731 - map@0.75 = 0.02190
  > Step 11501 (epoch 286): loss 1 = 0.16592, loss 2 = 0.20445
  > Step 11751 (epoch 292): loss 1 = 0.15920, loss 2 = 0.20931
val eval at step 12000: map@0.50 = 0.10202 - map@0.75 = 0.02877
  > Step 12001 (epoch 298): loss 1 = 0.17576, loss 2 = 0.22272
  > Step 12251 (epoch 304): loss 1 = 0.19718, loss 2 = 0.19387
val eval at step 12500: map@0.50 = 0.12086 - map@0.75 = 0.00437
  > Step 12501 (epoch 310): loss 1 = 0.13707, loss 2 = 0.23894
  > Step 12751 (epoch 317): loss 1 = 0.16287, loss 2 = 0.24924
val eval at step 13000: map@0.50 = 0.08471 - map@0.75 = 0.01067
  > Step 13001 (epoch 323): loss 1 = 0.15556, loss 2 = 0.14629
  > Step 13251 (epoch 329): loss 1 = 0.19719, loss 2 = 0.17344
val eval at step 13500: map@0.50 = 0.06525 - map@0.75 = 0.01234
  > Step 13501 (epoch 335): loss 1 = 0.18784, loss 2 = 0.15946
  > Step 13751 (epoch 341): loss 1 = 0.20066, loss 2 = 0.28356
val eval at step 14000: map@0.50 = 0.08800 - map@0.75 = 0.01220
  > Step 14001 (epoch 348): loss 1 = 0.19594, loss 2 = 0.20369
  > Step 14251 (epoch 354): loss 1 = 0.16923, loss 2 = 0.21051
val eval at step 14500: map@0.50 = 0.07646 - map@0.75 = 0.01635
  > Step 14501 (epoch 360): loss 1 = 0.17343, loss 2 = 0.15233
  > Step 14751 (epoch 366): loss 1 = 0.21440, loss 2 = 0.15330
val eval at step 15000: map@0.50 = 0.11697 - map@0.75 = 0.00230
  > Step 15001 (epoch 372): loss 1 = 0.17387, loss 2 = 0.19809
  > Step 15251 (epoch 379): loss 1 = 0.16650, loss 2 = 0.19898
val eval at step 15500: map@0.50 = 0.12376 - map@0.75 = 0.00864
  > Step 15501 (epoch 385): loss 1 = 0.17690, loss 2 = 0.16369
  > Step 15751 (epoch 391): loss 1 = 0.18246, loss 2 = 0.17410
val eval at step 16000: map@0.50 = 0.12153 - map@0.75 = 0.01392
  > Step 16001 (epoch 397): loss 1 = 0.17167, loss 2 = 0.15773
  > Step 16251 (epoch 403): loss 1 = 0.18512, loss 2 = 0.19270
val eval at step 16500: map@0.50 = 0.09164 - map@0.75 = 0.01201
  > Step 16501 (epoch 410): loss 1 = 0.15140, loss 2 = 0.16113
  > Step 16751 (epoch 416): loss 1 = 0.20923, loss 2 = 0.18122
val eval at step 17000: map@0.50 = 0.08108 - map@0.75 = 0.01114
  > Step 17001 (epoch 422): loss 1 = 0.14229, loss 2 = 0.18456
  > Step 17251 (epoch 428): loss 1 = 0.18062, loss 2 = 0.16691
val eval at step 17500: map@0.50 = 0.08675 - map@0.75 = 0.00275
  > Step 17501 (epoch 434): loss 1 = 0.22087, loss 2 = 0.14117
  > Step 17751 (epoch 441): loss 1 = 0.17677, loss 2 = 0.14645
val eval at step 18000: map@0.50 = 0.10071 - map@0.75 = 0.01051
  > Step 18001 (epoch 447): loss 1 = 0.19395, loss 2 = 0.13569
  > Step 18251 (epoch 453): loss 1 = 0.22369, loss 2 = 0.19034
val eval at step 18500: map@0.50 = 0.12449 - map@0.75 = 0.01909
  > Step 18501 (epoch 459): loss 1 = 0.20158, loss 2 = 0.15375
  > Step 18751 (epoch 465): loss 1 = 0.25093, loss 2 = 0.20114
val eval at step 19000: map@0.50 = 0.07014 - map@0.75 = 0.00999
  > Step 19001 (epoch 472): loss 1 = 0.21402, loss 2 = 0.17550
  > Step 19251 (epoch 478): loss 1 = 0.21037, loss 2 = 0.15465
val eval at step 19500: map@0.50 = 0.12788 - map@0.75 = 0.01309
  > Step 19501 (epoch 484): loss 1 = 0.21197, loss 2 = 0.15031
  > Step 19751 (epoch 490): loss 1 = 0.14677, loss 2 = 0.16221
val eval at step 20000: map@0.50 = 0.11387 - map@0.75 = 0.02299
  > Step 20001 (epoch 496): loss 1 = 0.11565, loss 2 = 0.15270
  > Step 20251 (epoch 503): loss 1 = 0.13531, loss 2 = 0.12820
val eval at step 20500: map@0.50 = 0.10722 - map@0.75 = 0.00402
  > Step 20501 (epoch 509): loss 1 = 0.21761, loss 2 = 0.15849
  > Step 20751 (epoch 515): loss 1 = 0.15990, loss 2 = 0.14113
val eval at step 21000: map@0.50 = 0.13772 - map@0.75 = 0.01047
  > Step 21001 (epoch 521): loss 1 = 0.12923, loss 2 = 0.10927
  > Step 21251 (epoch 527): loss 1 = 0.15117, loss 2 = 0.13060
val eval at step 21500: map@0.50 = 0.10926 - map@0.75 = 0.01033
  > Step 21501 (epoch 534): loss 1 = 0.13649, loss 2 = 0.13574
  > Step 21751 (epoch 540): loss 1 = 0.15358, loss 2 = 0.12477
val eval at step 22000: map@0.50 = 0.13484 - map@0.75 = 0.01464
  > Step 22001 (epoch 546): loss 1 = 0.16067, loss 2 = 0.11774
  > Step 22251 (epoch 552): loss 1 = 0.17651, loss 2 = 0.15968
val eval at step 22500: map@0.50 = 0.08484 - map@0.75 = 0.00781
  > Step 22501 (epoch 558): loss 1 = 0.13809, loss 2 = 0.12619
  > Step 22751 (epoch 565): loss 1 = 0.20407, loss 2 = 0.13154
val eval at step 23000: map@0.50 = 0.12548 - map@0.75 = 0.01185
  > Step 23001 (epoch 571): loss 1 = 0.13912, loss 2 = 0.16197
  > Step 23251 (epoch 577): loss 1 = 0.13358, loss 2 = 0.15210
val eval at step 23500: map@0.50 = 0.13294 - map@0.75 = 0.01712
  > Step 23501 (epoch 583): loss 1 = 0.12850, loss 2 = 0.17040
  > Step 23751 (epoch 589): loss 1 = 0.16006, loss 2 = 0.16481
val eval at step 24000: map@0.50 = 0.06375 - map@0.75 = 0.00861
  > Step 24001 (epoch 596): loss 1 = 0.20715, loss 2 = 0.13966
test eval at step 24200: map@0.50 = 0.14300 - map@0.75 = 0.02342
