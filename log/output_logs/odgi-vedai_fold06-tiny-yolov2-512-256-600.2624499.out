============================================================== FOLD 06
Tensorflow version 1.10.1
ODGI - vedai_fold06, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold06
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.0008
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold06
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold06_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold06_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold06_val
   using grid size [16 16]
   using grid size [8 8]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 8, 8, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 8.00e-04
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold06/tiny-yolov2_odgi_512_256/09-28_10-15

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold06/tiny-yolov2_odgi_512_256/09-28_10-15[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 5.37932, loss 2 = 5.98012
  > Step 251 (epoch 7): loss 1 = 0.73030, loss 2 = 1.14482
val eval at step 500: map@0.50 = 0.17371 - map@0.75 = 0.02201
  > Step 501 (epoch 13): loss 1 = 0.45159, loss 2 = 0.72162
  > Step 751 (epoch 19): loss 1 = 0.33699, loss 2 = 0.83569
val eval at step 1000: map@0.50 = 0.30814 - map@0.75 = 0.02509
  > Step 1001 (epoch 25): loss 1 = 0.27532, loss 2 = 0.75333
  > Step 1251 (epoch 32): loss 1 = 0.28702, loss 2 = 0.91969
val eval at step 1500: map@0.50 = 0.37885 - map@0.75 = 0.11605
  > Step 1501 (epoch 38): loss 1 = 0.22023, loss 2 = 0.66814
  > Step 1751 (epoch 44): loss 1 = 0.22054, loss 2 = 1.05899
val eval at step 2000: map@0.50 = 0.47228 - map@0.75 = 0.15570
  > Step 2001 (epoch 50): loss 1 = 0.20730, loss 2 = 0.62720
  > Step 2251 (epoch 56): loss 1 = 0.18217, loss 2 = 0.70536
val eval at step 2500: map@0.50 = 0.47810 - map@0.75 = 0.10084
  > Step 2501 (epoch 63): loss 1 = 0.27843, loss 2 = 0.87975
  > Step 2751 (epoch 69): loss 1 = 0.18467, loss 2 = 0.70838
val eval at step 3000: map@0.50 = 0.56846 - map@0.75 = 0.21474
  > Step 3001 (epoch 75): loss 1 = 0.12978, loss 2 = 0.81501
  > Step 3251 (epoch 81): loss 1 = 0.13756, loss 2 = 0.83916
val eval at step 3500: map@0.50 = 0.60853 - map@0.75 = 0.24062
  > Step 3501 (epoch 87): loss 1 = 0.13697, loss 2 = 0.99612
  > Step 3751 (epoch 94): loss 1 = 0.17591, loss 2 = 1.05472
val eval at step 4000: map@0.50 = 0.63037 - map@0.75 = 0.32143
  > Step 4001 (epoch 100): loss 1 = 0.12520, loss 2 = 0.61944
  > Step 4251 (epoch 106): loss 1 = 0.11559, loss 2 = 0.77347
val eval at step 4500: map@0.50 = 0.61264 - map@0.75 = 0.33110
  > Step 4501 (epoch 112): loss 1 = 0.11998, loss 2 = 0.64926
  > Step 4751 (epoch 118): loss 1 = 0.11611, loss 2 = 0.56805
val eval at step 5000: map@0.50 = 0.56996 - map@0.75 = 0.30784
  > Step 5001 (epoch 124): loss 1 = 0.27476, loss 2 = 0.56521
  > Step 5251 (epoch 131): loss 1 = 0.22061, loss 2 = 0.73426
val eval at step 5500: map@0.50 = 0.56700 - map@0.75 = 0.16516
  > Step 5501 (epoch 137): loss 1 = 0.12267, loss 2 = 0.77124
  > Step 5751 (epoch 143): loss 1 = 0.10813, loss 2 = 0.74657
val eval at step 6000: map@0.50 = 0.65503 - map@0.75 = 0.35517
  > Step 6001 (epoch 149): loss 1 = 0.09577, loss 2 = 0.66571
  > Step 6251 (epoch 155): loss 1 = 0.09352, loss 2 = 0.73650
val eval at step 6500: map@0.50 = 0.67108 - map@0.75 = 0.40456
  > Step 6501 (epoch 162): loss 1 = 0.10964, loss 2 = 0.69298
  > Step 6751 (epoch 168): loss 1 = 0.09406, loss 2 = 0.61085
val eval at step 7000: map@0.50 = 0.67409 - map@0.75 = 0.32741
  > Step 7001 (epoch 174): loss 1 = 0.07987, loss 2 = 0.57775
  > Step 7251 (epoch 180): loss 1 = 0.15218, loss 2 = 0.83188
val eval at step 7500: map@0.50 = 0.64235 - map@0.75 = 0.27482
  > Step 7501 (epoch 186): loss 1 = 0.08820, loss 2 = 0.65329
  > Step 7751 (epoch 193): loss 1 = 0.12531, loss 2 = 0.94760
val eval at step 8000: map@0.50 = 0.52333 - map@0.75 = 0.16605
  > Step 8001 (epoch 199): loss 1 = 0.32093, loss 2 = 1.11089
  > Step 8251 (epoch 205): loss 1 = 0.14844, loss 2 = 0.53561
val eval at step 8500: map@0.50 = 0.66089 - map@0.75 = 0.36329
  > Step 8501 (epoch 211): loss 1 = 0.07836, loss 2 = 0.71619
  > Step 8751 (epoch 217): loss 1 = 0.07361, loss 2 = 0.57868
val eval at step 9000: map@0.50 = 0.66282 - map@0.75 = 0.43517
  > Step 9001 (epoch 224): loss 1 = 0.05861, loss 2 = 0.57695
  > Step 9251 (epoch 230): loss 1 = 0.06262, loss 2 = 0.63772
val eval at step 9500: map@0.50 = 0.66125 - map@0.75 = 0.26373
  > Step 9501 (epoch 236): loss 1 = 0.06963, loss 2 = 0.74641
  > Step 9751 (epoch 242): loss 1 = 0.08395, loss 2 = 0.72268
val eval at step 10000: map@0.50 = 0.56560 - map@0.75 = 0.28134
  > Step 10001 (epoch 248): loss 1 = 0.19000, loss 2 = 0.86377
  > Step 10251 (epoch 255): loss 1 = 0.09315, loss 2 = 0.69278
val eval at step 10500: map@0.50 = 0.69895 - map@0.75 = 0.43516
  > Step 10501 (epoch 261): loss 1 = 0.06904, loss 2 = 0.59106
  > Step 10751 (epoch 267): loss 1 = 0.10233, loss 2 = 0.79093
val eval at step 11000: map@0.50 = 0.63688 - map@0.75 = 0.37443
  > Step 11001 (epoch 273): loss 1 = 0.14901, loss 2 = 0.94857
  > Step 11251 (epoch 279): loss 1 = 0.06424, loss 2 = 0.58440
val eval at step 11500: map@0.50 = 0.59242 - map@0.75 = 0.35208
  > Step 11501 (epoch 286): loss 1 = 0.07873, loss 2 = 0.64189
  > Step 11751 (epoch 292): loss 1 = 0.05294, loss 2 = 0.60373
val eval at step 12000: map@0.50 = 0.67492 - map@0.75 = 0.34749
  > Step 12001 (epoch 298): loss 1 = 0.07640, loss 2 = 0.64440
  > Step 12251 (epoch 304): loss 1 = 0.07250, loss 2 = 0.63271
val eval at step 12500: map@0.50 = 0.63038 - map@0.75 = 0.36181
  > Step 12501 (epoch 310): loss 1 = 0.13308, loss 2 = 0.72036
  > Step 12751 (epoch 317): loss 1 = 0.05783, loss 2 = 0.62380
val eval at step 13000: map@0.50 = 0.67093 - map@0.75 = 0.37725
  > Step 13001 (epoch 323): loss 1 = 0.04835, loss 2 = 0.63929
  > Step 13251 (epoch 329): loss 1 = 0.06518, loss 2 = 0.60862
val eval at step 13500: map@0.50 = 0.60081 - map@0.75 = 0.36292
  > Step 13501 (epoch 335): loss 1 = 0.15942, loss 2 = 1.03541
  > Step 13751 (epoch 341): loss 1 = 0.06824, loss 2 = 0.75057
val eval at step 14000: map@0.50 = 0.65484 - map@0.75 = 0.37856
  > Step 14001 (epoch 348): loss 1 = 0.06141, loss 2 = 0.63505
  > Step 14251 (epoch 354): loss 1 = 0.24747, loss 2 = 0.82661
val eval at step 14500: map@0.50 = 0.66390 - map@0.75 = 0.40100
  > Step 14501 (epoch 360): loss 1 = 0.05386, loss 2 = 0.63307
  > Step 14751 (epoch 366): loss 1 = 0.05668, loss 2 = 0.55204
val eval at step 15000: map@0.50 = 0.64994 - map@0.75 = 0.34397
  > Step 15001 (epoch 372): loss 1 = 0.05306, loss 2 = 0.57836
  > Step 15251 (epoch 379): loss 1 = 0.07407, loss 2 = 0.72289
val eval at step 15500: map@0.50 = 0.60850 - map@0.75 = 0.32010
  > Step 15501 (epoch 385): loss 1 = 0.04689, loss 2 = 0.65344
  > Step 15751 (epoch 391): loss 1 = 0.07031, loss 2 = 0.63308
val eval at step 16000: map@0.50 = 0.63649 - map@0.75 = 0.39732
  > Step 16001 (epoch 397): loss 1 = 0.05652, loss 2 = 0.59152
  > Step 16251 (epoch 403): loss 1 = 0.05571, loss 2 = 0.57894
val eval at step 16500: map@0.50 = 0.66736 - map@0.75 = 0.32030
  > Step 16501 (epoch 410): loss 1 = 0.06042, loss 2 = 0.81655
  > Step 16751 (epoch 416): loss 1 = 0.05475, loss 2 = 0.64093
val eval at step 17000: map@0.50 = 0.60226 - map@0.75 = 0.34351
  > Step 17001 (epoch 422): loss 1 = 0.04960, loss 2 = 0.63439
  > Step 17251 (epoch 428): loss 1 = 0.04494, loss 2 = 0.67682
val eval at step 17500: map@0.50 = 0.62672 - map@0.75 = 0.39417
  > Step 17501 (epoch 434): loss 1 = 0.06302, loss 2 = 0.66913
  > Step 17751 (epoch 441): loss 1 = 0.07174, loss 2 = 0.58579
val eval at step 18000: map@0.50 = 0.64620 - map@0.75 = 0.38444
  > Step 18001 (epoch 447): loss 1 = 0.07595, loss 2 = 0.70206
  > Step 18251 (epoch 453): loss 1 = 0.04640, loss 2 = 0.78241
val eval at step 18500: map@0.50 = 0.63295 - map@0.75 = 0.41245
  > Step 18501 (epoch 459): loss 1 = 0.05754, loss 2 = 0.70079
  > Step 18751 (epoch 465): loss 1 = 0.04018, loss 2 = 0.68849
val eval at step 19000: map@0.50 = 0.61144 - map@0.75 = 0.34179
  > Step 19001 (epoch 472): loss 1 = 0.05027, loss 2 = 0.72858
  > Step 19251 (epoch 478): loss 1 = 0.06565, loss 2 = 1.02531
val eval at step 19500: map@0.50 = 0.65940 - map@0.75 = 0.37728
  > Step 19501 (epoch 484): loss 1 = 0.10718, loss 2 = 0.59409
  > Step 19751 (epoch 490): loss 1 = 0.05109, loss 2 = 0.53178
val eval at step 20000: map@0.50 = 0.67003 - map@0.75 = 0.40679
  > Step 20001 (epoch 496): loss 1 = 0.04520, loss 2 = 0.60866
  > Step 20251 (epoch 503): loss 1 = 0.03781, loss 2 = 0.63719
val eval at step 20500: map@0.50 = 0.57952 - map@0.75 = 0.37786
  > Step 20501 (epoch 509): loss 1 = 0.22882, loss 2 = 1.00267
  > Step 20751 (epoch 515): loss 1 = 0.02737, loss 2 = 0.53759
val eval at step 21000: map@0.50 = 0.58862 - map@0.75 = 0.36587
  > Step 21001 (epoch 521): loss 1 = 0.03603, loss 2 = 0.68393
  > Step 21251 (epoch 527): loss 1 = 0.02542, loss 2 = 0.57498
val eval at step 21500: map@0.50 = 0.60192 - map@0.75 = 0.35153
  > Step 21501 (epoch 534): loss 1 = 0.03738, loss 2 = 0.56494
  > Step 21751 (epoch 540): loss 1 = 0.03182, loss 2 = 0.73215
val eval at step 22000: map@0.50 = 0.57435 - map@0.75 = 0.35233
  > Step 22001 (epoch 546): loss 1 = 0.04562, loss 2 = 0.56460
  > Step 22251 (epoch 552): loss 1 = 0.05708, loss 2 = 0.69145
val eval at step 22500: map@0.50 = 0.60487 - map@0.75 = 0.39141
  > Step 22501 (epoch 558): loss 1 = 0.03718, loss 2 = 0.52135
  > Step 22751 (epoch 565): loss 1 = 0.03562, loss 2 = 0.54568
val eval at step 23000: map@0.50 = 0.60087 - map@0.75 = 0.38356
  > Step 23001 (epoch 571): loss 1 = 0.04475, loss 2 = 0.69919
  > Step 23251 (epoch 577): loss 1 = 0.21721, loss 2 = 0.86958
val eval at step 23500: map@0.50 = 0.63603 - map@0.75 = 0.38486
  > Step 23501 (epoch 583): loss 1 = 0.03011, loss 2 = 0.53324
  > Step 23751 (epoch 589): loss 1 = 0.02913, loss 2 = 0.60621
val eval at step 24000: map@0.50 = 0.60570 - map@0.75 = 0.37929
  > Step 24001 (epoch 596): loss 1 = 0.05081, loss 2 = 0.46543
test eval at step 24200: map@0.50 = 0.61688 - map@0.75 = 0.38547
