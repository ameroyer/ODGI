============================================================== FOLD 05
Tensorflow version 1.10.1
ODGI - vedai_fold05, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold05
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold05
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold05_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold05_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold05_val
   using grid size [8 8]
   using grid size [4 4]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 4, 4, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold05/tiny-yolov2_odgi_256_128/09-28_16-43

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold05/tiny-yolov2_odgi_256_128/09-28_16-43[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 5.55625, loss 2 = 11.56157
  > Step 251 (epoch 7): loss 1 = 0.67780, loss 2 = 0.66220
val eval at step 500: map@0.50 = 0.03371 - map@0.75 = 0.00428
  > Step 501 (epoch 13): loss 1 = 0.52859, loss 2 = 0.65253
  > Step 751 (epoch 19): loss 1 = 0.29279, loss 2 = 0.59893
val eval at step 1000: map@0.50 = 0.06256 - map@0.75 = 0.00207
  > Step 1001 (epoch 25): loss 1 = 0.25912, loss 2 = 0.40853
  > Step 1251 (epoch 32): loss 1 = 0.35736, loss 2 = 0.43977
val eval at step 1500: map@0.50 = 0.13427 - map@0.75 = 0.02476
  > Step 1501 (epoch 38): loss 1 = 0.27520, loss 2 = 0.51649
  > Step 1751 (epoch 44): loss 1 = 0.27768, loss 2 = 0.36236
val eval at step 2000: map@0.50 = 0.11669 - map@0.75 = 0.01928
  > Step 2001 (epoch 50): loss 1 = 0.57063, loss 2 = 0.41604
  > Step 2251 (epoch 56): loss 1 = 0.28574, loss 2 = 0.42240
val eval at step 2500: map@0.50 = 0.25279 - map@0.75 = 0.04994
  > Step 2501 (epoch 63): loss 1 = 0.19853, loss 2 = 0.36371
  > Step 2751 (epoch 69): loss 1 = 0.20288, loss 2 = 0.34063
val eval at step 3000: map@0.50 = 0.34711 - map@0.75 = 0.06480
  > Step 3001 (epoch 75): loss 1 = 0.20949, loss 2 = 0.28825
  > Step 3251 (epoch 81): loss 1 = 0.25507, loss 2 = 0.30740
val eval at step 3500: map@0.50 = 0.33568 - map@0.75 = 0.10549
  > Step 3501 (epoch 87): loss 1 = 0.21301, loss 2 = 0.25048
  > Step 3751 (epoch 94): loss 1 = 0.29226, loss 2 = 0.34773
val eval at step 4000: map@0.50 = 0.35064 - map@0.75 = 0.07163
  > Step 4001 (epoch 100): loss 1 = 0.18661, loss 2 = 0.37038
  > Step 4251 (epoch 106): loss 1 = 0.19553, loss 2 = 0.28368
val eval at step 4500: map@0.50 = 0.40173 - map@0.75 = 0.11933
  > Step 4501 (epoch 112): loss 1 = 0.21962, loss 2 = 0.27421
  > Step 4751 (epoch 118): loss 1 = 0.19670, loss 2 = 0.26605
val eval at step 5000: map@0.50 = 0.43140 - map@0.75 = 0.09712
  > Step 5001 (epoch 124): loss 1 = 0.16002, loss 2 = 0.30119
  > Step 5251 (epoch 131): loss 1 = 0.16373, loss 2 = 0.31879
val eval at step 5500: map@0.50 = 0.45095 - map@0.75 = 0.16160
  > Step 5501 (epoch 137): loss 1 = 0.18656, loss 2 = 0.25826
  > Step 5751 (epoch 143): loss 1 = 0.17376, loss 2 = 0.24045
val eval at step 6000: map@0.50 = 0.22369 - map@0.75 = 0.05048
  > Step 6001 (epoch 149): loss 1 = 0.31637, loss 2 = 0.30549
  > Step 6251 (epoch 155): loss 1 = 0.16709, loss 2 = 0.33777
val eval at step 6500: map@0.50 = 0.46766 - map@0.75 = 0.17342
  > Step 6501 (epoch 162): loss 1 = 0.14835, loss 2 = 0.24511
  > Step 6751 (epoch 168): loss 1 = 0.14749, loss 2 = 0.24712
val eval at step 7000: map@0.50 = 0.47811 - map@0.75 = 0.12907
  > Step 7001 (epoch 174): loss 1 = 0.13661, loss 2 = 0.24151
  > Step 7251 (epoch 180): loss 1 = 0.16822, loss 2 = 0.26717
val eval at step 7500: map@0.50 = 0.44763 - map@0.75 = 0.17154
  > Step 7501 (epoch 186): loss 1 = 0.23671, loss 2 = 0.26518
  > Step 7751 (epoch 193): loss 1 = 0.18676, loss 2 = 0.21633
val eval at step 8000: map@0.50 = 0.47478 - map@0.75 = 0.15054
  > Step 8001 (epoch 199): loss 1 = 0.14657, loss 2 = 0.21053
  > Step 8251 (epoch 205): loss 1 = 0.12925, loss 2 = 0.24091
val eval at step 8500: map@0.50 = 0.50254 - map@0.75 = 0.14901
  > Step 8501 (epoch 211): loss 1 = 0.15978, loss 2 = 0.26105
  > Step 8751 (epoch 217): loss 1 = 0.13567, loss 2 = 0.25086
val eval at step 9000: map@0.50 = 0.43256 - map@0.75 = 0.16330
  > Step 9001 (epoch 224): loss 1 = 0.43934, loss 2 = 0.27520
  > Step 9251 (epoch 230): loss 1 = 0.20217, loss 2 = 0.25094
val eval at step 9500: map@0.50 = 0.50140 - map@0.75 = 0.18202
  > Step 9501 (epoch 236): loss 1 = 0.17193, loss 2 = 0.19998
  > Step 9751 (epoch 242): loss 1 = 0.09593, loss 2 = 0.19776
val eval at step 10000: map@0.50 = 0.53215 - map@0.75 = 0.21754
  > Step 10001 (epoch 248): loss 1 = 0.12180, loss 2 = 0.17969
  > Step 10251 (epoch 255): loss 1 = 0.16196, loss 2 = 0.23590
val eval at step 10500: map@0.50 = 0.50805 - map@0.75 = 0.14628
  > Step 10501 (epoch 261): loss 1 = 0.10629, loss 2 = 0.24297
  > Step 10751 (epoch 267): loss 1 = 0.09872, loss 2 = 0.21226
val eval at step 11000: map@0.50 = 0.55850 - map@0.75 = 0.18784
  > Step 11001 (epoch 273): loss 1 = 0.12674, loss 2 = 0.22516
  > Step 11251 (epoch 279): loss 1 = 0.09275, loss 2 = 0.20121
val eval at step 11500: map@0.50 = 0.51656 - map@0.75 = 0.16504
  > Step 11501 (epoch 286): loss 1 = 0.09765, loss 2 = 0.20682
  > Step 11751 (epoch 292): loss 1 = 0.11348, loss 2 = 0.17805
val eval at step 12000: map@0.50 = 0.52271 - map@0.75 = 0.23428
  > Step 12001 (epoch 298): loss 1 = 0.13043, loss 2 = 0.19570
  > Step 12251 (epoch 304): loss 1 = 0.24659, loss 2 = 0.22973
val eval at step 12500: map@0.50 = 0.52913 - map@0.75 = 0.21586
  > Step 12501 (epoch 310): loss 1 = 0.20734, loss 2 = 0.22384
  > Step 12751 (epoch 317): loss 1 = 0.10088, loss 2 = 0.19806
val eval at step 13000: map@0.50 = 0.52031 - map@0.75 = 0.18442
  > Step 13001 (epoch 323): loss 1 = 0.08690, loss 2 = 0.19804
  > Step 13251 (epoch 329): loss 1 = 0.07802, loss 2 = 0.18727
val eval at step 13500: map@0.50 = 0.55825 - map@0.75 = 0.18479
  > Step 13501 (epoch 335): loss 1 = 0.10141, loss 2 = 0.17237
  > Step 13751 (epoch 341): loss 1 = 0.09675, loss 2 = 0.16958
val eval at step 14000: map@0.50 = 0.53236 - map@0.75 = 0.20021
  > Step 14001 (epoch 348): loss 1 = 0.09935, loss 2 = 0.21369
  > Step 14251 (epoch 354): loss 1 = 0.08319, loss 2 = 0.20491
val eval at step 14500: map@0.50 = 0.50492 - map@0.75 = 0.17614
  > Step 14501 (epoch 360): loss 1 = 0.07646, loss 2 = 0.19638
  > Step 14751 (epoch 366): loss 1 = 0.08967, loss 2 = 0.20082
val eval at step 15000: map@0.50 = 0.51119 - map@0.75 = 0.20579
  > Step 15001 (epoch 372): loss 1 = 0.09330, loss 2 = 0.19975
  > Step 15251 (epoch 379): loss 1 = 0.09546, loss 2 = 0.19590
val eval at step 15500: map@0.50 = 0.50818 - map@0.75 = 0.19475
  > Step 15501 (epoch 385): loss 1 = 0.09929, loss 2 = 0.18625
  > Step 15751 (epoch 391): loss 1 = 0.08663, loss 2 = 0.17002
val eval at step 16000: map@0.50 = 0.53566 - map@0.75 = 0.23364
  > Step 16001 (epoch 397): loss 1 = 0.07873, loss 2 = 0.18411
  > Step 16251 (epoch 403): loss 1 = 0.08983, loss 2 = 0.17006
val eval at step 16500: map@0.50 = 0.51995 - map@0.75 = 0.17044
  > Step 16501 (epoch 410): loss 1 = 0.06587, loss 2 = 0.15418
  > Step 16751 (epoch 416): loss 1 = 0.09369, loss 2 = 0.16724
val eval at step 17000: map@0.50 = 0.54537 - map@0.75 = 0.23908
  > Step 17001 (epoch 422): loss 1 = 0.07643, loss 2 = 0.20360
  > Step 17251 (epoch 428): loss 1 = 0.08336, loss 2 = 0.15752
val eval at step 17500: map@0.50 = 0.56110 - map@0.75 = 0.19483
  > Step 17501 (epoch 434): loss 1 = 0.13518, loss 2 = 0.19858
  > Step 17751 (epoch 441): loss 1 = 0.16799, loss 2 = 0.17666
val eval at step 18000: map@0.50 = 0.53481 - map@0.75 = 0.28143
  > Step 18001 (epoch 447): loss 1 = 0.14082, loss 2 = 0.15753
  > Step 18251 (epoch 453): loss 1 = 0.08602, loss 2 = 0.15957
val eval at step 18500: map@0.50 = 0.51661 - map@0.75 = 0.20430
  > Step 18501 (epoch 459): loss 1 = 0.08175, loss 2 = 0.14983
  > Step 18751 (epoch 465): loss 1 = 0.09124, loss 2 = 0.15198
val eval at step 19000: map@0.50 = 0.54716 - map@0.75 = 0.21490
  > Step 19001 (epoch 472): loss 1 = 0.07858, loss 2 = 0.18123
  > Step 19251 (epoch 478): loss 1 = 0.05617, loss 2 = 0.16067
val eval at step 19500: map@0.50 = 0.49218 - map@0.75 = 0.19918
  > Step 19501 (epoch 484): loss 1 = 0.08766, loss 2 = 0.13785
  > Step 19751 (epoch 490): loss 1 = 0.06133, loss 2 = 0.21344
val eval at step 20000: map@0.50 = 0.52144 - map@0.75 = 0.20584
  > Step 20001 (epoch 496): loss 1 = 0.06769, loss 2 = 0.18139
  > Step 20251 (epoch 503): loss 1 = 0.07128, loss 2 = 0.15879
val eval at step 20500: map@0.50 = 0.54151 - map@0.75 = 0.26298
  > Step 20501 (epoch 509): loss 1 = 0.08857, loss 2 = 0.15218
  > Step 20751 (epoch 515): loss 1 = 0.07055, loss 2 = 0.17359
val eval at step 21000: map@0.50 = 0.49306 - map@0.75 = 0.23083
  > Step 21001 (epoch 521): loss 1 = 0.12104, loss 2 = 0.21703
  > Step 21251 (epoch 527): loss 1 = 0.06778, loss 2 = 0.13815
val eval at step 21500: map@0.50 = 0.54907 - map@0.75 = 0.27814
  > Step 21501 (epoch 534): loss 1 = 0.07381, loss 2 = 0.16695
  > Step 21751 (epoch 540): loss 1 = 0.05803, loss 2 = 0.14344
val eval at step 22000: map@0.50 = 0.49160 - map@0.75 = 0.21451
  > Step 22001 (epoch 546): loss 1 = 0.09264, loss 2 = 0.16909
  > Step 22251 (epoch 552): loss 1 = 0.08190, loss 2 = 0.16503
val eval at step 22500: map@0.50 = 0.53675 - map@0.75 = 0.26334
  > Step 22501 (epoch 558): loss 1 = 0.07734, loss 2 = 0.18169
  > Step 22751 (epoch 565): loss 1 = 0.09605, loss 2 = 0.18732
val eval at step 23000: map@0.50 = 0.52381 - map@0.75 = 0.15182
  > Step 23001 (epoch 571): loss 1 = 0.08923, loss 2 = 0.20052
  > Step 23251 (epoch 577): loss 1 = 0.07103, loss 2 = 0.15452
val eval at step 23500: map@0.50 = 0.55703 - map@0.75 = 0.24820
  > Step 23501 (epoch 583): loss 1 = 0.06062, loss 2 = 0.15656
  > Step 23751 (epoch 589): loss 1 = 0.08420, loss 2 = 0.17359
val eval at step 24000: map@0.50 = 0.51651 - map@0.75 = 0.23278
  > Step 24001 (epoch 596): loss 1 = 0.09330, loss 2 = 0.15379
test eval at step 24200: map@0.50 = 0.50687 - map@0.75 = 0.19599
