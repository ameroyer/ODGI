============================================================== FOLD 10
Tensorflow version 1.10.1
ODGI - vedai_fold10, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold10
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.0008
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold10
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold10_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold10_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold10_val
   using grid size [16 16]
   using grid size [8 8]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 8, 8, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 8.00e-04
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold10/tiny-yolov2_odgi_512_256/09-28_10-15

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold10/tiny-yolov2_odgi_512_256/09-28_10-15[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 7.77269, loss 2 = 9.51143
  > Step 251 (epoch 7): loss 1 = 0.70711, loss 2 = 1.13557
val eval at step 500: map@0.50 = 0.17090 - map@0.75 = 0.00724
  > Step 501 (epoch 13): loss 1 = 0.56011, loss 2 = 1.08844
  > Step 751 (epoch 19): loss 1 = 0.40863, loss 2 = 1.06501
val eval at step 1000: map@0.50 = 0.36508 - map@0.75 = 0.05635
  > Step 1001 (epoch 25): loss 1 = 0.31647, loss 2 = 0.73303
  > Step 1251 (epoch 32): loss 1 = 0.24703, loss 2 = 0.81705
val eval at step 1500: map@0.50 = 0.30637 - map@0.75 = 0.02183
  > Step 1501 (epoch 38): loss 1 = 0.25459, loss 2 = 0.95503
  > Step 1751 (epoch 44): loss 1 = 0.21039, loss 2 = 1.11431
val eval at step 2000: map@0.50 = 0.45709 - map@0.75 = 0.15132
  > Step 2001 (epoch 50): loss 1 = 0.19652, loss 2 = 0.90929
  > Step 2251 (epoch 56): loss 1 = 0.18635, loss 2 = 0.76431
val eval at step 2500: map@0.50 = 0.43967 - map@0.75 = 0.13008
  > Step 2501 (epoch 63): loss 1 = 0.23041, loss 2 = 0.65829
  > Step 2751 (epoch 69): loss 1 = 0.24704, loss 2 = 1.13573
val eval at step 3000: map@0.50 = 0.51046 - map@0.75 = 0.26626
  > Step 3001 (epoch 75): loss 1 = 0.14438, loss 2 = 0.78677
  > Step 3251 (epoch 81): loss 1 = 0.14614, loss 2 = 0.84062
val eval at step 3500: map@0.50 = 0.55013 - map@0.75 = 0.22378
  > Step 3501 (epoch 87): loss 1 = 0.15265, loss 2 = 0.81300
  > Step 3751 (epoch 94): loss 1 = 0.16208, loss 2 = 0.64670
val eval at step 4000: map@0.50 = 0.52397 - map@0.75 = 0.22252
  > Step 4001 (epoch 100): loss 1 = 0.12878, loss 2 = 0.81058
  > Step 4251 (epoch 106): loss 1 = 0.12821, loss 2 = 0.74835
val eval at step 4500: map@0.50 = 0.55677 - map@0.75 = 0.13273
  > Step 4501 (epoch 112): loss 1 = 0.14883, loss 2 = 0.69150
  > Step 4751 (epoch 118): loss 1 = 0.11186, loss 2 = 0.71842
val eval at step 5000: map@0.50 = 0.59880 - map@0.75 = 0.28635
  > Step 5001 (epoch 124): loss 1 = 0.16447, loss 2 = 0.78195
  > Step 5251 (epoch 131): loss 1 = 0.22940, loss 2 = 0.72654
val eval at step 5500: map@0.50 = 0.56774 - map@0.75 = 0.23500
  > Step 5501 (epoch 137): loss 1 = 0.16974, loss 2 = 0.84664
  > Step 5751 (epoch 143): loss 1 = 0.14110, loss 2 = 0.96185
val eval at step 6000: map@0.50 = 0.63969 - map@0.75 = 0.33016
  > Step 6001 (epoch 149): loss 1 = 0.10028, loss 2 = 0.63906
  > Step 6251 (epoch 155): loss 1 = 0.08187, loss 2 = 0.67861
val eval at step 6500: map@0.50 = 0.62323 - map@0.75 = 0.18614
  > Step 6501 (epoch 162): loss 1 = 0.13033, loss 2 = 0.50773
  > Step 6751 (epoch 168): loss 1 = 0.13790, loss 2 = 0.80376
val eval at step 7000: map@0.50 = 0.67239 - map@0.75 = 0.31103
  > Step 7001 (epoch 174): loss 1 = 0.08817, loss 2 = 0.61555
  > Step 7251 (epoch 180): loss 1 = 0.11574, loss 2 = 0.70021
val eval at step 7500: map@0.50 = 0.69541 - map@0.75 = 0.37325
  > Step 7501 (epoch 186): loss 1 = 0.08514, loss 2 = 0.71097
  > Step 7751 (epoch 193): loss 1 = 0.12215, loss 2 = 0.78997
val eval at step 8000: map@0.50 = 0.67378 - map@0.75 = 0.33674
  > Step 8001 (epoch 199): loss 1 = 0.09563, loss 2 = 0.63981
  > Step 8251 (epoch 205): loss 1 = 0.15153, loss 2 = 0.61117
val eval at step 8500: map@0.50 = 0.54328 - map@0.75 = 0.31959
  > Step 8501 (epoch 211): loss 1 = 0.18723, loss 2 = 0.62952
  > Step 8751 (epoch 217): loss 1 = 0.14568, loss 2 = 0.76671
val eval at step 9000: map@0.50 = 0.64727 - map@0.75 = 0.36981
  > Step 9001 (epoch 224): loss 1 = 0.11456, loss 2 = 0.72393
  > Step 9251 (epoch 230): loss 1 = 0.05388, loss 2 = 0.59648
val eval at step 9500: map@0.50 = 0.63228 - map@0.75 = 0.35818
  > Step 9501 (epoch 236): loss 1 = 0.06302, loss 2 = 0.52929
  > Step 9751 (epoch 242): loss 1 = 0.06047, loss 2 = 0.70138
val eval at step 10000: map@0.50 = 0.65175 - map@0.75 = 0.33691
  > Step 10001 (epoch 248): loss 1 = 0.07375, loss 2 = 0.65794
  > Step 10251 (epoch 255): loss 1 = 0.07016, loss 2 = 0.66749
val eval at step 10500: map@0.50 = 0.62643 - map@0.75 = 0.37099
  > Step 10501 (epoch 261): loss 1 = 0.07361, loss 2 = 0.66061
  > Step 10751 (epoch 267): loss 1 = 0.09459, loss 2 = 0.62701
val eval at step 11000: map@0.50 = 0.65413 - map@0.75 = 0.35947
  > Step 11001 (epoch 273): loss 1 = 0.08855, loss 2 = 0.87699
  > Step 11251 (epoch 279): loss 1 = 0.07044, loss 2 = 0.79881
val eval at step 11500: map@0.50 = 0.64115 - map@0.75 = 0.36393
  > Step 11501 (epoch 286): loss 1 = 0.07327, loss 2 = 0.61941
  > Step 11751 (epoch 292): loss 1 = 0.08298, loss 2 = 0.75862
val eval at step 12000: map@0.50 = 0.60761 - map@0.75 = 0.36658
  > Step 12001 (epoch 298): loss 1 = 0.06549, loss 2 = 0.61392
  > Step 12251 (epoch 304): loss 1 = 0.19192, loss 2 = 0.78061
val eval at step 12500: map@0.50 = 0.66935 - map@0.75 = 0.40114
  > Step 12501 (epoch 310): loss 1 = 0.09459, loss 2 = 0.70305
  > Step 12751 (epoch 317): loss 1 = 0.05553, loss 2 = 0.57140
val eval at step 13000: map@0.50 = 0.66067 - map@0.75 = 0.36569
  > Step 13001 (epoch 323): loss 1 = 0.06283, loss 2 = 0.66229
  > Step 13251 (epoch 329): loss 1 = 0.29573, loss 2 = 0.89671
val eval at step 13500: map@0.50 = 0.63342 - map@0.75 = 0.38298
  > Step 13501 (epoch 335): loss 1 = 0.06325, loss 2 = 0.58168
  > Step 13751 (epoch 341): loss 1 = 0.06333, loss 2 = 0.55647
val eval at step 14000: map@0.50 = 0.71019 - map@0.75 = 0.42680
  > Step 14001 (epoch 348): loss 1 = 0.05827, loss 2 = 0.66700
  > Step 14251 (epoch 354): loss 1 = 0.09452, loss 2 = 0.57538
val eval at step 14500: map@0.50 = 0.64973 - map@0.75 = 0.38506
  > Step 14501 (epoch 360): loss 1 = 0.05403, loss 2 = 0.59540
  > Step 14751 (epoch 366): loss 1 = 0.11986, loss 2 = 0.56661
val eval at step 15000: map@0.50 = 0.63401 - map@0.75 = 0.39485
  > Step 15001 (epoch 372): loss 1 = 0.05824, loss 2 = 0.59223
  > Step 15251 (epoch 379): loss 1 = 0.07048, loss 2 = 0.59790
val eval at step 15500: map@0.50 = 0.62211 - map@0.75 = 0.39740
  > Step 15501 (epoch 385): loss 1 = 0.06635, loss 2 = 0.75808
  > Step 15751 (epoch 391): loss 1 = 0.05939, loss 2 = 0.72027
val eval at step 16000: map@0.50 = 0.65936 - map@0.75 = 0.38266
  > Step 16001 (epoch 397): loss 1 = 0.05442, loss 2 = 0.58523
  > Step 16251 (epoch 403): loss 1 = 0.06164, loss 2 = 0.64270
val eval at step 16500: map@0.50 = 0.67844 - map@0.75 = 0.39723
  > Step 16501 (epoch 410): loss 1 = 0.05877, loss 2 = 0.62376
  > Step 16751 (epoch 416): loss 1 = 0.07731, loss 2 = 0.80271
val eval at step 17000: map@0.50 = 0.63941 - map@0.75 = 0.37779
  > Step 17001 (epoch 422): loss 1 = 0.04009, loss 2 = 0.75998
  > Step 17251 (epoch 428): loss 1 = 0.06472, loss 2 = 0.61222
val eval at step 17500: map@0.50 = 0.65131 - map@0.75 = 0.37412
  > Step 17501 (epoch 434): loss 1 = 0.05216, loss 2 = 0.60255
  > Step 17751 (epoch 441): loss 1 = 0.04451, loss 2 = 0.66376
val eval at step 18000: map@0.50 = 0.68767 - map@0.75 = 0.35113
  > Step 18001 (epoch 447): loss 1 = 0.05163, loss 2 = 0.54767
  > Step 18251 (epoch 453): loss 1 = 0.05114, loss 2 = 0.53226
val eval at step 18500: map@0.50 = 0.62952 - map@0.75 = 0.37712
  > Step 18501 (epoch 459): loss 1 = 0.04449, loss 2 = 0.50659
  > Step 18751 (epoch 465): loss 1 = 0.10930, loss 2 = 0.58004
val eval at step 19000: map@0.50 = 0.69822 - map@0.75 = 0.40426
  > Step 19001 (epoch 472): loss 1 = 0.04821, loss 2 = 0.67293
  > Step 19251 (epoch 478): loss 1 = 0.04738, loss 2 = 0.74791
val eval at step 19500: map@0.50 = 0.70333 - map@0.75 = 0.42676
  > Step 19501 (epoch 484): loss 1 = 0.04025, loss 2 = 0.60177
  > Step 19751 (epoch 490): loss 1 = 0.03513, loss 2 = 0.62255
val eval at step 20000: map@0.50 = 0.66326 - map@0.75 = 0.41304
  > Step 20001 (epoch 496): loss 1 = 0.03846, loss 2 = 0.71127
  > Step 20251 (epoch 503): loss 1 = 0.02795, loss 2 = 0.57393
val eval at step 20500: map@0.50 = 0.66823 - map@0.75 = 0.41687
  > Step 20501 (epoch 509): loss 1 = 0.04451, loss 2 = 0.61500
  > Step 20751 (epoch 515): loss 1 = 0.02595, loss 2 = 0.51270
val eval at step 21000: map@0.50 = 0.68531 - map@0.75 = 0.45005
  > Step 21001 (epoch 521): loss 1 = 0.03320, loss 2 = 0.52834
  > Step 21251 (epoch 527): loss 1 = 0.04313, loss 2 = 0.57058
val eval at step 21500: map@0.50 = 0.67157 - map@0.75 = 0.39680
  > Step 21501 (epoch 534): loss 1 = 0.03528, loss 2 = 0.55417
  > Step 21751 (epoch 540): loss 1 = 0.07408, loss 2 = 0.73530
val eval at step 22000: map@0.50 = 0.65383 - map@0.75 = 0.41758
  > Step 22001 (epoch 546): loss 1 = 0.05857, loss 2 = 0.64870
  > Step 22251 (epoch 552): loss 1 = 0.05238, loss 2 = 0.58242
val eval at step 22500: map@0.50 = 0.70874 - map@0.75 = 0.45890
  > Step 22501 (epoch 558): loss 1 = 0.05813, loss 2 = 0.62965
  > Step 22751 (epoch 565): loss 1 = 0.03967, loss 2 = 0.62884
val eval at step 23000: map@0.50 = 0.65795 - map@0.75 = 0.42865
  > Step 23001 (epoch 571): loss 1 = 0.03851, loss 2 = 0.52353
  > Step 23251 (epoch 577): loss 1 = 0.06531, loss 2 = 0.61582
val eval at step 23500: map@0.50 = 0.71264 - map@0.75 = 0.43976
  > Step 23501 (epoch 583): loss 1 = 0.12601, loss 2 = 0.69368
  > Step 23751 (epoch 589): loss 1 = 0.03772, loss 2 = 0.65260
val eval at step 24000: map@0.50 = 0.71524 - map@0.75 = 0.47585
  > Step 24001 (epoch 596): loss 1 = 0.03447, loss 2 = 0.60100
test eval at step 24200: map@0.50 = 0.64427 - map@0.75 = 0.44676
