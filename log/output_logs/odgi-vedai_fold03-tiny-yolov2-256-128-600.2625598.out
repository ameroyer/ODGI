============================================================== FOLD 03
Tensorflow version 1.10.1
ODGI - vedai_fold03, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold03
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold03
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold03_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold03_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold03_val
   using grid size [8 8]
   using grid size [4 4]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 4, 4, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold03/tiny-yolov2_odgi_256_128/09-28_16-43

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold03/tiny-yolov2_odgi_256_128/09-28_16-43[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 8.45857, loss 2 = 7.30500
  > Step 251 (epoch 7): loss 1 = 0.70999, loss 2 = 0.80748
val eval at step 500: map@0.50 = 0.04523 - map@0.75 = 0.00207
  > Step 501 (epoch 13): loss 1 = 0.42538, loss 2 = 0.48454
  > Step 751 (epoch 19): loss 1 = 0.32916, loss 2 = 0.45648
val eval at step 1000: map@0.50 = 0.10617 - map@0.75 = 0.00238
  > Step 1001 (epoch 25): loss 1 = 0.23645, loss 2 = 0.44364
  > Step 1251 (epoch 32): loss 1 = 0.22064, loss 2 = 0.48471
val eval at step 1500: map@0.50 = 0.14577 - map@0.75 = 0.00610
  > Step 1501 (epoch 38): loss 1 = 0.25649, loss 2 = 0.40482
  > Step 1751 (epoch 44): loss 1 = 0.34420, loss 2 = 0.40269
val eval at step 2000: map@0.50 = 0.27881 - map@0.75 = 0.06646
  > Step 2001 (epoch 50): loss 1 = 0.23229, loss 2 = 0.38762
  > Step 2251 (epoch 56): loss 1 = 0.28038, loss 2 = 0.41232
val eval at step 2500: map@0.50 = 0.32296 - map@0.75 = 0.05376
  > Step 2501 (epoch 63): loss 1 = 0.20917, loss 2 = 0.35431
  > Step 2751 (epoch 69): loss 1 = 0.19047, loss 2 = 0.39403
val eval at step 3000: map@0.50 = 0.37059 - map@0.75 = 0.05021
  > Step 3001 (epoch 75): loss 1 = 0.18096, loss 2 = 0.34767
  > Step 3251 (epoch 81): loss 1 = 0.21797, loss 2 = 0.40245
val eval at step 3500: map@0.50 = 0.31334 - map@0.75 = 0.07563
  > Step 3501 (epoch 87): loss 1 = 0.40928, loss 2 = 0.33856
  > Step 3751 (epoch 94): loss 1 = 0.24560, loss 2 = 0.33282
val eval at step 4000: map@0.50 = 0.42738 - map@0.75 = 0.11647
  > Step 4001 (epoch 100): loss 1 = 0.20390, loss 2 = 0.37292
  > Step 4251 (epoch 106): loss 1 = 0.17928, loss 2 = 0.29852
val eval at step 4500: map@0.50 = 0.42818 - map@0.75 = 0.07782
  > Step 4501 (epoch 112): loss 1 = 0.19575, loss 2 = 0.27126
  > Step 4751 (epoch 118): loss 1 = 0.22579, loss 2 = 0.31705
val eval at step 5000: map@0.50 = 0.44664 - map@0.75 = 0.10843
  > Step 5001 (epoch 124): loss 1 = 0.23638, loss 2 = 0.32438
  > Step 5251 (epoch 131): loss 1 = 0.17527, loss 2 = 0.25023
val eval at step 5500: map@0.50 = 0.18512 - map@0.75 = 0.04054
  > Step 5501 (epoch 137): loss 1 = 0.35090, loss 2 = 0.32574
  > Step 5751 (epoch 143): loss 1 = 0.24810, loss 2 = 0.33973
val eval at step 6000: map@0.50 = 0.50106 - map@0.75 = 0.15172
  > Step 6001 (epoch 149): loss 1 = 0.15093, loss 2 = 0.26854
  > Step 6251 (epoch 155): loss 1 = 0.15808, loss 2 = 0.25232
val eval at step 6500: map@0.50 = 0.48980 - map@0.75 = 0.16834
  > Step 6501 (epoch 162): loss 1 = 0.17592, loss 2 = 0.26550
  > Step 6751 (epoch 168): loss 1 = 0.14999, loss 2 = 0.24915
val eval at step 7000: map@0.50 = 0.45326 - map@0.75 = 0.14163
  > Step 7001 (epoch 174): loss 1 = 0.19769, loss 2 = 0.25237
  > Step 7251 (epoch 180): loss 1 = 0.17530, loss 2 = 0.24093
val eval at step 7500: map@0.50 = 0.54255 - map@0.75 = 0.13102
  > Step 7501 (epoch 186): loss 1 = 0.14152, loss 2 = 0.22298
  > Step 7751 (epoch 193): loss 1 = 0.16511, loss 2 = 0.22293
val eval at step 8000: map@0.50 = 0.35132 - map@0.75 = 0.07596
  > Step 8001 (epoch 199): loss 1 = 0.34312, loss 2 = 0.30491
  > Step 8251 (epoch 205): loss 1 = 0.16290, loss 2 = 0.28113
val eval at step 8500: map@0.50 = 0.52427 - map@0.75 = 0.17038
  > Step 8501 (epoch 211): loss 1 = 0.16247, loss 2 = 0.30771
  > Step 8751 (epoch 217): loss 1 = 0.10873, loss 2 = 0.24011
val eval at step 9000: map@0.50 = 0.55079 - map@0.75 = 0.21551
  > Step 9001 (epoch 224): loss 1 = 0.10238, loss 2 = 0.22206
  > Step 9251 (epoch 230): loss 1 = 0.17378, loss 2 = 0.26243
val eval at step 9500: map@0.50 = 0.54487 - map@0.75 = 0.16250
  > Step 9501 (epoch 236): loss 1 = 0.11790, loss 2 = 0.21024
  > Step 9751 (epoch 242): loss 1 = 0.13240, loss 2 = 0.23136
val eval at step 10000: map@0.50 = 0.53250 - map@0.75 = 0.19235
  > Step 10001 (epoch 248): loss 1 = 0.13046, loss 2 = 0.16309
  > Step 10251 (epoch 255): loss 1 = 0.12784, loss 2 = 0.16723
val eval at step 10500: map@0.50 = 0.54934 - map@0.75 = 0.19434
  > Step 10501 (epoch 261): loss 1 = 0.10684, loss 2 = 0.19573
  > Step 10751 (epoch 267): loss 1 = 0.14404, loss 2 = 0.19699
val eval at step 11000: map@0.50 = 0.59512 - map@0.75 = 0.18867
  > Step 11001 (epoch 273): loss 1 = 0.14591, loss 2 = 0.21488
  > Step 11251 (epoch 279): loss 1 = 0.13537, loss 2 = 0.23911
val eval at step 11500: map@0.50 = 0.48238 - map@0.75 = 0.17922
  > Step 11501 (epoch 286): loss 1 = 0.11752, loss 2 = 0.19977
  > Step 11751 (epoch 292): loss 1 = 0.08865, loss 2 = 0.18808
val eval at step 12000: map@0.50 = 0.54842 - map@0.75 = 0.22361
  > Step 12001 (epoch 298): loss 1 = 0.10449, loss 2 = 0.19021
  > Step 12251 (epoch 304): loss 1 = 0.17345, loss 2 = 0.21619
val eval at step 12500: map@0.50 = 0.54802 - map@0.75 = 0.26571
  > Step 12501 (epoch 310): loss 1 = 0.14213, loss 2 = 0.20214
  > Step 12751 (epoch 317): loss 1 = 0.08719, loss 2 = 0.18546
val eval at step 13000: map@0.50 = 0.56724 - map@0.75 = 0.20480
  > Step 13001 (epoch 323): loss 1 = 0.08327, loss 2 = 0.23626
  > Step 13251 (epoch 329): loss 1 = 0.08059, loss 2 = 0.17386
val eval at step 13500: map@0.50 = 0.56320 - map@0.75 = 0.24724
  > Step 13501 (epoch 335): loss 1 = 0.09983, loss 2 = 0.19457
  > Step 13751 (epoch 341): loss 1 = 0.10147, loss 2 = 0.15593
val eval at step 14000: map@0.50 = 0.55439 - map@0.75 = 0.19843
  > Step 14001 (epoch 348): loss 1 = 0.08305, loss 2 = 0.16164
  > Step 14251 (epoch 354): loss 1 = 0.08885, loss 2 = 0.17699
val eval at step 14500: map@0.50 = 0.61563 - map@0.75 = 0.22662
  > Step 14501 (epoch 360): loss 1 = 0.10641, loss 2 = 0.24568
  > Step 14751 (epoch 366): loss 1 = 0.09635, loss 2 = 0.14631
val eval at step 15000: map@0.50 = 0.57206 - map@0.75 = 0.22033
  > Step 15001 (epoch 372): loss 1 = 0.08700, loss 2 = 0.18833
  > Step 15251 (epoch 379): loss 1 = 0.05555, loss 2 = 0.18066
val eval at step 15500: map@0.50 = 0.59104 - map@0.75 = 0.26296
  > Step 15501 (epoch 385): loss 1 = 0.08686, loss 2 = 0.20171
  > Step 15751 (epoch 391): loss 1 = 0.14724, loss 2 = 0.16760
val eval at step 16000: map@0.50 = 0.57645 - map@0.75 = 0.25316
  > Step 16001 (epoch 397): loss 1 = 0.06464, loss 2 = 0.15234
  > Step 16251 (epoch 403): loss 1 = 0.09282, loss 2 = 0.18529
val eval at step 16500: map@0.50 = 0.55275 - map@0.75 = 0.17575
  > Step 16501 (epoch 410): loss 1 = 0.08081, loss 2 = 0.14065
  > Step 16751 (epoch 416): loss 1 = 0.09826, loss 2 = 0.17009
val eval at step 17000: map@0.50 = 0.56899 - map@0.75 = 0.25495
  > Step 17001 (epoch 422): loss 1 = 0.07718, loss 2 = 0.16631
  > Step 17251 (epoch 428): loss 1 = 0.08136, loss 2 = 0.19441
val eval at step 17500: map@0.50 = 0.52992 - map@0.75 = 0.19662
  > Step 17501 (epoch 434): loss 1 = 0.08645, loss 2 = 0.26273
  > Step 17751 (epoch 441): loss 1 = 0.21664, loss 2 = 0.20847
val eval at step 18000: map@0.50 = 0.56433 - map@0.75 = 0.25469
  > Step 18001 (epoch 447): loss 1 = 0.11525, loss 2 = 0.19395
  > Step 18251 (epoch 453): loss 1 = 0.08090, loss 2 = 0.18909
val eval at step 18500: map@0.50 = 0.54176 - map@0.75 = 0.23429
  > Step 18501 (epoch 459): loss 1 = 0.08860, loss 2 = 0.16877
  > Step 18751 (epoch 465): loss 1 = 0.08355, loss 2 = 0.17872
val eval at step 19000: map@0.50 = 0.49862 - map@0.75 = 0.18672
  > Step 19001 (epoch 472): loss 1 = 0.06823, loss 2 = 0.20868
  > Step 19251 (epoch 478): loss 1 = 0.06712, loss 2 = 0.16551
val eval at step 19500: map@0.50 = 0.52793 - map@0.75 = 0.22036
  > Step 19501 (epoch 484): loss 1 = 0.08794, loss 2 = 0.16628
  > Step 19751 (epoch 490): loss 1 = 0.04561, loss 2 = 0.18435
val eval at step 20000: map@0.50 = 0.53723 - map@0.75 = 0.24315
  > Step 20001 (epoch 496): loss 1 = 0.06826, loss 2 = 0.17358
  > Step 20251 (epoch 503): loss 1 = 0.07706, loss 2 = 0.18964
val eval at step 20500: map@0.50 = 0.56642 - map@0.75 = 0.22793
  > Step 20501 (epoch 509): loss 1 = 0.04497, loss 2 = 0.20193
  > Step 20751 (epoch 515): loss 1 = 0.05003, loss 2 = 0.16750
val eval at step 21000: map@0.50 = 0.57595 - map@0.75 = 0.21110
  > Step 21001 (epoch 521): loss 1 = 0.09100, loss 2 = 0.15363
  > Step 21251 (epoch 527): loss 1 = 0.06547, loss 2 = 0.16525
val eval at step 21500: map@0.50 = 0.58725 - map@0.75 = 0.21328
  > Step 21501 (epoch 534): loss 1 = 0.09993, loss 2 = 0.18174
  > Step 21751 (epoch 540): loss 1 = 0.06349, loss 2 = 0.14949
val eval at step 22000: map@0.50 = 0.57939 - map@0.75 = 0.26969
  > Step 22001 (epoch 546): loss 1 = 0.07387, loss 2 = 0.13242
  > Step 22251 (epoch 552): loss 1 = 0.08709, loss 2 = 0.20458
val eval at step 22500: map@0.50 = 0.55714 - map@0.75 = 0.18025
  > Step 22501 (epoch 558): loss 1 = 0.05660, loss 2 = 0.19807
  > Step 22751 (epoch 565): loss 1 = 0.09295, loss 2 = 0.15859
val eval at step 23000: map@0.50 = 0.54676 - map@0.75 = 0.21329
  > Step 23001 (epoch 571): loss 1 = 0.06627, loss 2 = 0.16838
  > Step 23251 (epoch 577): loss 1 = 0.09308, loss 2 = 0.20454
val eval at step 23500: map@0.50 = 0.54919 - map@0.75 = 0.22157
  > Step 23501 (epoch 583): loss 1 = 0.06379, loss 2 = 0.14221
  > Step 23751 (epoch 589): loss 1 = 0.12676, loss 2 = 0.19962
val eval at step 24000: map@0.50 = 0.55549 - map@0.75 = 0.21048
  > Step 24001 (epoch 596): loss 1 = 0.09211, loss 2 = 0.18147
test eval at step 24200: map@0.50 = 0.49520 - map@0.75 = 0.18864
