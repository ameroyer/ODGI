============================================================== FOLD 08
Tensorflow version 1.10.1
ODGI - vedai_fold08, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold08
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold08
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold08_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold08_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold08_val
   using grid size [16 16]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold08/tiny-yolov2_odgi_512_64/09-27_16-05

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold08/tiny-yolov2_odgi_512_64/09-27_16-05[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 11.64895, loss 2 = 10.77005
  > Step 251 (epoch 7): loss 1 = 0.81317, loss 2 = 0.52870
val eval at step 500: map@0.50 = 0.07059 - map@0.75 = 0.01125
  > Step 501 (epoch 13): loss 1 = 0.59417, loss 2 = 0.42640
  > Step 751 (epoch 19): loss 1 = 0.30762, loss 2 = 0.34967
val eval at step 1000: map@0.50 = 0.25688 - map@0.75 = 0.03844
  > Step 1001 (epoch 25): loss 1 = 0.28070, loss 2 = 0.35353
  > Step 1251 (epoch 32): loss 1 = 0.20983, loss 2 = 0.32005
val eval at step 1500: map@0.50 = 0.28245 - map@0.75 = 0.05430
  > Step 1501 (epoch 38): loss 1 = 0.21882, loss 2 = 0.37691
  > Step 1751 (epoch 44): loss 1 = 0.16932, loss 2 = 0.36345
val eval at step 2000: map@0.50 = 0.31052 - map@0.75 = 0.05695
  > Step 2001 (epoch 50): loss 1 = 0.20544, loss 2 = 0.25378
  > Step 2251 (epoch 56): loss 1 = 0.31891, loss 2 = 0.25381
val eval at step 2500: map@0.50 = 0.31942 - map@0.75 = 0.06039
  > Step 2501 (epoch 63): loss 1 = 0.24664, loss 2 = 0.33973
  > Step 2751 (epoch 69): loss 1 = 0.21265, loss 2 = 0.38775
val eval at step 3000: map@0.50 = 0.37375 - map@0.75 = 0.09436
  > Step 3001 (epoch 75): loss 1 = 0.12429, loss 2 = 0.25965
  > Step 3251 (epoch 81): loss 1 = 0.11893, loss 2 = 0.26607
val eval at step 3500: map@0.50 = 0.38804 - map@0.75 = 0.07660
  > Step 3501 (epoch 87): loss 1 = 0.12928, loss 2 = 0.25482
  > Step 3751 (epoch 94): loss 1 = 0.13616, loss 2 = 0.22828
val eval at step 4000: map@0.50 = 0.39753 - map@0.75 = 0.13563
  > Step 4001 (epoch 100): loss 1 = 0.12235, loss 2 = 0.25439
  > Step 4251 (epoch 106): loss 1 = 0.27819, loss 2 = 0.32399
val eval at step 4500: map@0.50 = 0.45065 - map@0.75 = 0.12516
  > Step 4501 (epoch 112): loss 1 = 0.14883, loss 2 = 0.18298
  > Step 4751 (epoch 118): loss 1 = 0.11194, loss 2 = 0.19509
val eval at step 5000: map@0.50 = 0.45480 - map@0.75 = 0.11447
  > Step 5001 (epoch 124): loss 1 = 0.16340, loss 2 = 0.24181
  > Step 5251 (epoch 131): loss 1 = 0.12235, loss 2 = 0.18323
val eval at step 5500: map@0.50 = 0.46707 - map@0.75 = 0.11555
  > Step 5501 (epoch 137): loss 1 = 0.10109, loss 2 = 0.19978
  > Step 5751 (epoch 143): loss 1 = 0.12462, loss 2 = 0.21735
val eval at step 6000: map@0.50 = 0.45866 - map@0.75 = 0.12900
  > Step 6001 (epoch 149): loss 1 = 0.10573, loss 2 = 0.18482
  > Step 6251 (epoch 155): loss 1 = 0.09737, loss 2 = 0.18409
val eval at step 6500: map@0.50 = 0.44073 - map@0.75 = 0.09999
  > Step 6501 (epoch 162): loss 1 = 0.24045, loss 2 = 0.23290
  > Step 6751 (epoch 168): loss 1 = 0.11681, loss 2 = 0.17833
val eval at step 7000: map@0.50 = 0.49753 - map@0.75 = 0.18815
  > Step 7001 (epoch 174): loss 1 = 0.10264, loss 2 = 0.17041
  > Step 7251 (epoch 180): loss 1 = 0.09736, loss 2 = 0.19398
val eval at step 7500: map@0.50 = 0.43867 - map@0.75 = 0.13591
  > Step 7501 (epoch 186): loss 1 = 0.06399, loss 2 = 0.17217
  > Step 7751 (epoch 193): loss 1 = 0.05954, loss 2 = 0.10100
val eval at step 8000: map@0.50 = 0.46553 - map@0.75 = 0.16265
  > Step 8001 (epoch 199): loss 1 = 0.07128, loss 2 = 0.14500
  > Step 8251 (epoch 205): loss 1 = 0.06535, loss 2 = 0.14592
val eval at step 8500: map@0.50 = 0.50361 - map@0.75 = 0.12408
  > Step 8501 (epoch 211): loss 1 = 0.06962, loss 2 = 0.12378
  > Step 8751 (epoch 217): loss 1 = 0.06818, loss 2 = 0.12930
val eval at step 9000: map@0.50 = 0.48760 - map@0.75 = 0.14080
  > Step 9001 (epoch 224): loss 1 = 0.06841, loss 2 = 0.16248
  > Step 9251 (epoch 230): loss 1 = 0.07337, loss 2 = 0.15256
val eval at step 9500: map@0.50 = 0.50810 - map@0.75 = 0.16432
  > Step 9501 (epoch 236): loss 1 = 0.08459, loss 2 = 0.11375
  > Step 9751 (epoch 242): loss 1 = 0.08278, loss 2 = 0.15065
val eval at step 10000: map@0.50 = 0.43107 - map@0.75 = 0.13775
  > Step 10001 (epoch 248): loss 1 = 0.24919, loss 2 = 0.22270
  > Step 10251 (epoch 255): loss 1 = 0.07415, loss 2 = 0.08559
val eval at step 10500: map@0.50 = 0.48885 - map@0.75 = 0.18273
  > Step 10501 (epoch 261): loss 1 = 0.06281, loss 2 = 0.12962
  > Step 10751 (epoch 267): loss 1 = 0.05827, loss 2 = 0.09075
val eval at step 11000: map@0.50 = 0.49293 - map@0.75 = 0.11683
  > Step 11001 (epoch 273): loss 1 = 0.06464, loss 2 = 0.11471
  > Step 11251 (epoch 279): loss 1 = 0.05351, loss 2 = 0.09402
val eval at step 11500: map@0.50 = 0.47224 - map@0.75 = 0.13398
  > Step 11501 (epoch 286): loss 1 = 0.06312, loss 2 = 0.13860
  > Step 11751 (epoch 292): loss 1 = 0.04931, loss 2 = 0.11179
val eval at step 12000: map@0.50 = 0.46138 - map@0.75 = 0.14060
  > Step 12001 (epoch 298): loss 1 = 0.12751, loss 2 = 0.08143
  > Step 12251 (epoch 304): loss 1 = 0.06235, loss 2 = 0.10389
val eval at step 12500: map@0.50 = 0.48398 - map@0.75 = 0.15793
  > Step 12501 (epoch 310): loss 1 = 0.05109, loss 2 = 0.10996
  > Step 12751 (epoch 317): loss 1 = 0.07699, loss 2 = 0.16754
val eval at step 13000: map@0.50 = 0.49394 - map@0.75 = 0.14058
  > Step 13001 (epoch 323): loss 1 = 0.26702, loss 2 = 0.09245
  > Step 13251 (epoch 329): loss 1 = 0.19476, loss 2 = 0.12900
val eval at step 13500: map@0.50 = 0.52657 - map@0.75 = 0.20515
  > Step 13501 (epoch 335): loss 1 = 0.08152, loss 2 = 0.11394
  > Step 13751 (epoch 341): loss 1 = 0.06484, loss 2 = 0.11039
val eval at step 14000: map@0.50 = 0.50968 - map@0.75 = 0.14830
  > Step 14001 (epoch 348): loss 1 = 0.05691, loss 2 = 0.07780
  > Step 14251 (epoch 354): loss 1 = 0.06145, loss 2 = 0.09227
val eval at step 14500: map@0.50 = 0.50848 - map@0.75 = 0.17781
  > Step 14501 (epoch 360): loss 1 = 0.15637, loss 2 = 0.08469
  > Step 14751 (epoch 366): loss 1 = 0.06284, loss 2 = 0.06379
val eval at step 15000: map@0.50 = 0.47447 - map@0.75 = 0.16186
  > Step 15001 (epoch 372): loss 1 = 0.04702, loss 2 = 0.11115
  > Step 15251 (epoch 379): loss 1 = 0.03989, loss 2 = 0.08684
val eval at step 15500: map@0.50 = 0.47345 - map@0.75 = 0.16620
  > Step 15501 (epoch 385): loss 1 = 0.12404, loss 2 = 0.06698
  > Step 15751 (epoch 391): loss 1 = 0.22851, loss 2 = 0.07670
val eval at step 16000: map@0.50 = 0.46190 - map@0.75 = 0.14523
  > Step 16001 (epoch 397): loss 1 = 0.04671, loss 2 = 0.07650
  > Step 16251 (epoch 403): loss 1 = 0.04395, loss 2 = 0.07673
val eval at step 16500: map@0.50 = 0.48125 - map@0.75 = 0.17410
  > Step 16501 (epoch 410): loss 1 = 0.03745, loss 2 = 0.07186
  > Step 16751 (epoch 416): loss 1 = 0.15221, loss 2 = 0.05429
val eval at step 17000: map@0.50 = 0.49692 - map@0.75 = 0.15198
  > Step 17001 (epoch 422): loss 1 = 0.06442, loss 2 = 0.09249
  > Step 17251 (epoch 428): loss 1 = 0.05730, loss 2 = 0.08337
val eval at step 17500: map@0.50 = 0.51060 - map@0.75 = 0.17704
  > Step 17501 (epoch 434): loss 1 = 0.07214, loss 2 = 0.07711
  > Step 17751 (epoch 441): loss 1 = 0.04375, loss 2 = 0.07211
val eval at step 18000: map@0.50 = 0.46850 - map@0.75 = 0.17208
  > Step 18001 (epoch 447): loss 1 = 0.05302, loss 2 = 0.07080
  > Step 18251 (epoch 453): loss 1 = 0.06870, loss 2 = 0.10132
val eval at step 18500: map@0.50 = 0.52007 - map@0.75 = 0.14797
  > Step 18501 (epoch 459): loss 1 = 0.04143, loss 2 = 0.06529
  > Step 18751 (epoch 465): loss 1 = 0.03623, loss 2 = 0.05901
val eval at step 19000: map@0.50 = 0.51794 - map@0.75 = 0.20348
  > Step 19001 (epoch 472): loss 1 = 0.06813, loss 2 = 0.06203
  > Step 19251 (epoch 478): loss 1 = 0.05696, loss 2 = 0.08121
val eval at step 19500: map@0.50 = 0.50113 - map@0.75 = 0.17146
  > Step 19501 (epoch 484): loss 1 = 0.19610, loss 2 = 0.06093
  > Step 19751 (epoch 490): loss 1 = 0.04856, loss 2 = 0.07002
val eval at step 20000: map@0.50 = 0.50872 - map@0.75 = 0.17480
  > Step 20001 (epoch 496): loss 1 = 0.03868, loss 2 = 0.05447
  > Step 20251 (epoch 503): loss 1 = 0.10040, loss 2 = 0.08343
val eval at step 20500: map@0.50 = 0.52288 - map@0.75 = 0.21351
  > Step 20501 (epoch 509): loss 1 = 0.23557, loss 2 = 0.08384
  > Step 20751 (epoch 515): loss 1 = 0.05348, loss 2 = 0.08740
val eval at step 21000: map@0.50 = 0.46464 - map@0.75 = 0.19987
  > Step 21001 (epoch 521): loss 1 = 0.04456, loss 2 = 0.07663
  > Step 21251 (epoch 527): loss 1 = 0.02742, loss 2 = 0.05364
val eval at step 21500: map@0.50 = 0.46959 - map@0.75 = 0.18232
  > Step 21501 (epoch 534): loss 1 = 0.05368, loss 2 = 0.05328
  > Step 21751 (epoch 540): loss 1 = 0.12292, loss 2 = 0.06739
val eval at step 22000: map@0.50 = 0.51421 - map@0.75 = 0.14236
  > Step 22001 (epoch 546): loss 1 = 0.05654, loss 2 = 0.07808
  > Step 22251 (epoch 552): loss 1 = 0.02825, loss 2 = 0.06157
val eval at step 22500: map@0.50 = 0.48791 - map@0.75 = 0.13142
  > Step 22501 (epoch 558): loss 1 = 0.02644, loss 2 = 0.06929
  > Step 22751 (epoch 565): loss 1 = 0.04307, loss 2 = 0.07117
val eval at step 23000: map@0.50 = 0.47914 - map@0.75 = 0.15060
  > Step 23001 (epoch 571): loss 1 = 0.03589, loss 2 = 0.06698
  > Step 23251 (epoch 577): loss 1 = 0.05850, loss 2 = 0.06235
val eval at step 23500: map@0.50 = 0.48815 - map@0.75 = 0.15755
  > Step 23501 (epoch 583): loss 1 = 0.04760, loss 2 = 0.07196
  > Step 23751 (epoch 589): loss 1 = 0.03783, loss 2 = 0.07075
val eval at step 24000: map@0.50 = 0.48229 - map@0.75 = 0.13136
  > Step 24001 (epoch 596): loss 1 = 0.04257, loss 2 = 0.04514
test eval at step 24200: map@0.50 = 0.49983 - map@0.75 = 0.16221
