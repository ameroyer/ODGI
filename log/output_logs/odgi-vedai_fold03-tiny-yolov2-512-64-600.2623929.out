============================================================== FOLD 03
Tensorflow version 1.10.1
ODGI - vedai_fold03, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold03
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold03
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold03_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold03_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold03_val
   using grid size [16 16]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold03/tiny-yolov2_odgi_512_64/09-27_16-00

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold03/tiny-yolov2_odgi_512_64/09-27_16-00[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 7.07969, loss 2 = 5.62863
  > Step 251 (epoch 7): loss 1 = 0.81957, loss 2 = 0.51413
val eval at step 500: map@0.50 = 0.12236 - map@0.75 = 0.00127
  > Step 501 (epoch 13): loss 1 = 0.54718, loss 2 = 0.37915
  > Step 751 (epoch 19): loss 1 = 0.39660, loss 2 = 0.36841
val eval at step 1000: map@0.50 = 0.18190 - map@0.75 = 0.01802
  > Step 1001 (epoch 25): loss 1 = 0.34320, loss 2 = 0.33600
  > Step 1251 (epoch 32): loss 1 = 0.23374, loss 2 = 0.37222
val eval at step 1500: map@0.50 = 0.33951 - map@0.75 = 0.04805
  > Step 1501 (epoch 38): loss 1 = 0.20636, loss 2 = 0.30073
  > Step 1751 (epoch 44): loss 1 = 0.15454, loss 2 = 0.28009
val eval at step 2000: map@0.50 = 0.34802 - map@0.75 = 0.04655
  > Step 2001 (epoch 50): loss 1 = 0.19591, loss 2 = 0.28255
  > Step 2251 (epoch 56): loss 1 = 0.16855, loss 2 = 0.26481
val eval at step 2500: map@0.50 = 0.32638 - map@0.75 = 0.06037
  > Step 2501 (epoch 63): loss 1 = 0.24334, loss 2 = 0.29458
  > Step 2751 (epoch 69): loss 1 = 0.18303, loss 2 = 0.24064
val eval at step 3000: map@0.50 = 0.50380 - map@0.75 = 0.13642
  > Step 3001 (epoch 75): loss 1 = 0.15881, loss 2 = 0.22491
  > Step 3251 (epoch 81): loss 1 = 0.15171, loss 2 = 0.25665
val eval at step 3500: map@0.50 = 0.44126 - map@0.75 = 0.13343
  > Step 3501 (epoch 87): loss 1 = 0.23195, loss 2 = 0.19258
  > Step 3751 (epoch 94): loss 1 = 0.12610, loss 2 = 0.21624
val eval at step 4000: map@0.50 = 0.49768 - map@0.75 = 0.10967
  > Step 4001 (epoch 100): loss 1 = 0.11403, loss 2 = 0.19124
  > Step 4251 (epoch 106): loss 1 = 0.19294, loss 2 = 0.20992
val eval at step 4500: map@0.50 = 0.46192 - map@0.75 = 0.10484
  > Step 4501 (epoch 112): loss 1 = 0.16204, loss 2 = 0.25573
  > Step 4751 (epoch 118): loss 1 = 0.12547, loss 2 = 0.17016
val eval at step 5000: map@0.50 = 0.53653 - map@0.75 = 0.19740
  > Step 5001 (epoch 124): loss 1 = 0.09296, loss 2 = 0.17545
  > Step 5251 (epoch 131): loss 1 = 0.09522, loss 2 = 0.18759
val eval at step 5500: map@0.50 = 0.42821 - map@0.75 = 0.11976
  > Step 5501 (epoch 137): loss 1 = 0.08014, loss 2 = 0.16198
  > Step 5751 (epoch 143): loss 1 = 0.08179, loss 2 = 0.17001
val eval at step 6000: map@0.50 = 0.51563 - map@0.75 = 0.24474
  > Step 6001 (epoch 149): loss 1 = 0.08476, loss 2 = 0.17162
  > Step 6251 (epoch 155): loss 1 = 0.10688, loss 2 = 0.17831
val eval at step 6500: map@0.50 = 0.48839 - map@0.75 = 0.17342
  > Step 6501 (epoch 162): loss 1 = 0.08049, loss 2 = 0.19087
  > Step 6751 (epoch 168): loss 1 = 0.08746, loss 2 = 0.18172
val eval at step 7000: map@0.50 = 0.48193 - map@0.75 = 0.16881
  > Step 7001 (epoch 174): loss 1 = 0.09925, loss 2 = 0.11785
  > Step 7251 (epoch 180): loss 1 = 0.08603, loss 2 = 0.16295
val eval at step 7500: map@0.50 = 0.50749 - map@0.75 = 0.19727
  > Step 7501 (epoch 186): loss 1 = 0.17149, loss 2 = 0.15338
  > Step 7751 (epoch 193): loss 1 = 0.09680, loss 2 = 0.19922
val eval at step 8000: map@0.50 = 0.47063 - map@0.75 = 0.15447
  > Step 8001 (epoch 199): loss 1 = 0.05931, loss 2 = 0.16718
  > Step 8251 (epoch 205): loss 1 = 0.07538, loss 2 = 0.11636
val eval at step 8500: map@0.50 = 0.47161 - map@0.75 = 0.19093
  > Step 8501 (epoch 211): loss 1 = 0.14083, loss 2 = 0.09974
  > Step 8751 (epoch 217): loss 1 = 0.06539, loss 2 = 0.13911
val eval at step 9000: map@0.50 = 0.48780 - map@0.75 = 0.13580
  > Step 9001 (epoch 224): loss 1 = 0.06354, loss 2 = 0.11958
  > Step 9251 (epoch 230): loss 1 = 0.06638, loss 2 = 0.11618
val eval at step 9500: map@0.50 = 0.49585 - map@0.75 = 0.15292
  > Step 9501 (epoch 236): loss 1 = 0.06778, loss 2 = 0.12427
  > Step 9751 (epoch 242): loss 1 = 0.08739, loss 2 = 0.13212
val eval at step 10000: map@0.50 = 0.49436 - map@0.75 = 0.18419
  > Step 10001 (epoch 248): loss 1 = 0.06844, loss 2 = 0.13218
  > Step 10251 (epoch 255): loss 1 = 0.07520, loss 2 = 0.11784
val eval at step 10500: map@0.50 = 0.46596 - map@0.75 = 0.17708
  > Step 10501 (epoch 261): loss 1 = 0.09462, loss 2 = 0.09345
  > Step 10751 (epoch 267): loss 1 = 0.36097, loss 2 = 0.18071
val eval at step 11000: map@0.50 = 0.52725 - map@0.75 = 0.19277
  > Step 11001 (epoch 273): loss 1 = 0.14078, loss 2 = 0.09789
  > Step 11251 (epoch 279): loss 1 = 0.06615, loss 2 = 0.08331
val eval at step 11500: map@0.50 = 0.49096 - map@0.75 = 0.19712
  > Step 11501 (epoch 286): loss 1 = 0.04548, loss 2 = 0.09378
  > Step 11751 (epoch 292): loss 1 = 0.04930, loss 2 = 0.12425
val eval at step 12000: map@0.50 = 0.51725 - map@0.75 = 0.11791
  > Step 12001 (epoch 298): loss 1 = 0.04642, loss 2 = 0.07606
  > Step 12251 (epoch 304): loss 1 = 0.03510, loss 2 = 0.08199
val eval at step 12500: map@0.50 = 0.50886 - map@0.75 = 0.16738
  > Step 12501 (epoch 310): loss 1 = 0.23696, loss 2 = 0.08890
  > Step 12751 (epoch 317): loss 1 = 0.05227, loss 2 = 0.14711
val eval at step 13000: map@0.50 = 0.49175 - map@0.75 = 0.15270
  > Step 13001 (epoch 323): loss 1 = 0.05101, loss 2 = 0.07151
  > Step 13251 (epoch 329): loss 1 = 0.04892, loss 2 = 0.11270
val eval at step 13500: map@0.50 = 0.51203 - map@0.75 = 0.16025
  > Step 13501 (epoch 335): loss 1 = 0.06391, loss 2 = 0.08812
  > Step 13751 (epoch 341): loss 1 = 0.05578, loss 2 = 0.12111
val eval at step 14000: map@0.50 = 0.47228 - map@0.75 = 0.18938
  > Step 14001 (epoch 348): loss 1 = 0.06415, loss 2 = 0.11791
  > Step 14251 (epoch 354): loss 1 = 0.05341, loss 2 = 0.14328
val eval at step 14500: map@0.50 = 0.52954 - map@0.75 = 0.16917
  > Step 14501 (epoch 360): loss 1 = 0.20531, loss 2 = 0.17561
  > Step 14751 (epoch 366): loss 1 = 0.18594, loss 2 = 0.08393
val eval at step 15000: map@0.50 = 0.54453 - map@0.75 = 0.23092
  > Step 15001 (epoch 372): loss 1 = 0.06998, loss 2 = 0.10704
  > Step 15251 (epoch 379): loss 1 = 0.05143, loss 2 = 0.08315
val eval at step 15500: map@0.50 = 0.49890 - map@0.75 = 0.13505
  > Step 15501 (epoch 385): loss 1 = 0.04366, loss 2 = 0.09816
  > Step 15751 (epoch 391): loss 1 = 0.04360, loss 2 = 0.06094
val eval at step 16000: map@0.50 = 0.52404 - map@0.75 = 0.20577
  > Step 16001 (epoch 397): loss 1 = 0.03820, loss 2 = 0.09248
  > Step 16251 (epoch 403): loss 1 = 0.06579, loss 2 = 0.09772
val eval at step 16500: map@0.50 = 0.47878 - map@0.75 = 0.15280
  > Step 16501 (epoch 410): loss 1 = 0.05294, loss 2 = 0.07290
  > Step 16751 (epoch 416): loss 1 = 0.05397, loss 2 = 0.06075
val eval at step 17000: map@0.50 = 0.51377 - map@0.75 = 0.16768
  > Step 17001 (epoch 422): loss 1 = 0.03041, loss 2 = 0.06240
  > Step 17251 (epoch 428): loss 1 = 0.04162, loss 2 = 0.09227
val eval at step 17500: map@0.50 = 0.51718 - map@0.75 = 0.16405
  > Step 17501 (epoch 434): loss 1 = 0.06863, loss 2 = 0.05766
  > Step 17751 (epoch 441): loss 1 = 0.06560, loss 2 = 0.08562
val eval at step 18000: map@0.50 = 0.51988 - map@0.75 = 0.20842
  > Step 18001 (epoch 447): loss 1 = 0.05761, loss 2 = 0.09760
  > Step 18251 (epoch 453): loss 1 = 0.10833, loss 2 = 0.12575
val eval at step 18500: map@0.50 = 0.48785 - map@0.75 = 0.15983
  > Step 18501 (epoch 459): loss 1 = 0.06247, loss 2 = 0.06042
  > Step 18751 (epoch 465): loss 1 = 0.06438, loss 2 = 0.09098
val eval at step 19000: map@0.50 = 0.51773 - map@0.75 = 0.19387
  > Step 19001 (epoch 472): loss 1 = 0.12833, loss 2 = 0.11474
  > Step 19251 (epoch 478): loss 1 = 0.04612, loss 2 = 0.09333
val eval at step 19500: map@0.50 = 0.51509 - map@0.75 = 0.16212
  > Step 19501 (epoch 484): loss 1 = 0.05514, loss 2 = 0.09223
  > Step 19751 (epoch 490): loss 1 = 0.05032, loss 2 = 0.04364
val eval at step 20000: map@0.50 = 0.53316 - map@0.75 = 0.18694
  > Step 20001 (epoch 496): loss 1 = 0.03503, loss 2 = 0.07191
  > Step 20251 (epoch 503): loss 1 = 0.04742, loss 2 = 0.06267
val eval at step 20500: map@0.50 = 0.48341 - map@0.75 = 0.13295
  > Step 20501 (epoch 509): loss 1 = 0.04773, loss 2 = 0.04495
  > Step 20751 (epoch 515): loss 1 = 0.02553, loss 2 = 0.06591
val eval at step 21000: map@0.50 = 0.48704 - map@0.75 = 0.12894
  > Step 21001 (epoch 521): loss 1 = 0.03263, loss 2 = 0.08241
  > Step 21251 (epoch 527): loss 1 = 0.03847, loss 2 = 0.07047
val eval at step 21500: map@0.50 = 0.52318 - map@0.75 = 0.14335
  > Step 21501 (epoch 534): loss 1 = 0.04561, loss 2 = 0.07378
  > Step 21751 (epoch 540): loss 1 = 0.05632, loss 2 = 0.07005
val eval at step 22000: map@0.50 = 0.51988 - map@0.75 = 0.18555
  > Step 22001 (epoch 546): loss 1 = 0.04432, loss 2 = 0.06800
  > Step 22251 (epoch 552): loss 1 = 0.04837, loss 2 = 0.06649
val eval at step 22500: map@0.50 = 0.53277 - map@0.75 = 0.21049
  > Step 22501 (epoch 558): loss 1 = 0.04613, loss 2 = 0.06132
  > Step 22751 (epoch 565): loss 1 = 0.04691, loss 2 = 0.07238
val eval at step 23000: map@0.50 = 0.57865 - map@0.75 = 0.21975
  > Step 23001 (epoch 571): loss 1 = 0.08129, loss 2 = 0.09370
  > Step 23251 (epoch 577): loss 1 = 0.08095, loss 2 = 0.08684
val eval at step 23500: map@0.50 = 0.53328 - map@0.75 = 0.17025
  > Step 23501 (epoch 583): loss 1 = 0.03517, loss 2 = 0.05838
  > Step 23751 (epoch 589): loss 1 = 0.04388, loss 2 = 0.07493
val eval at step 24000: map@0.50 = 0.51504 - map@0.75 = 0.14762
  > Step 24001 (epoch 596): loss 1 = 0.03384, loss 2 = 0.08742
test eval at step 24200: map@0.50 = 0.50315 - map@0.75 = 0.18782
