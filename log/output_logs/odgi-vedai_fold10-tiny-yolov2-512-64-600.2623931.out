============================================================== FOLD 10
Tensorflow version 1.10.1
ODGI - vedai_fold10, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold10
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold10
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold10_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold10_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold10_val
   using grid size [16 16]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold10/tiny-yolov2_odgi_512_64/09-27_16-05

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold10/tiny-yolov2_odgi_512_64/09-27_16-05[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 8.00181, loss 2 = 13.63255
  > Step 251 (epoch 7): loss 1 = 0.76527, loss 2 = 0.49284
val eval at step 500: map@0.50 = 0.12448 - map@0.75 = 0.01309
  > Step 501 (epoch 13): loss 1 = 0.58278, loss 2 = 0.42705
  > Step 751 (epoch 19): loss 1 = 0.40542, loss 2 = 0.35045
val eval at step 1000: map@0.50 = 0.18520 - map@0.75 = 0.00888
  > Step 1001 (epoch 25): loss 1 = 0.25758, loss 2 = 0.35121
  > Step 1251 (epoch 32): loss 1 = 0.37144, loss 2 = 0.41144
val eval at step 1500: map@0.50 = 0.27321 - map@0.75 = 0.02368
  > Step 1501 (epoch 38): loss 1 = 0.27730, loss 2 = 0.43905
  > Step 1751 (epoch 44): loss 1 = 0.19843, loss 2 = 0.28865
val eval at step 2000: map@0.50 = 0.33729 - map@0.75 = 0.04506
  > Step 2001 (epoch 50): loss 1 = 0.15450, loss 2 = 0.24611
  > Step 2251 (epoch 56): loss 1 = 0.15210, loss 2 = 0.27768
val eval at step 2500: map@0.50 = 0.37550 - map@0.75 = 0.09523
  > Step 2501 (epoch 63): loss 1 = 0.33516, loss 2 = 0.30876
  > Step 2751 (epoch 69): loss 1 = 0.21349, loss 2 = 0.26819
val eval at step 3000: map@0.50 = 0.42320 - map@0.75 = 0.06787
  > Step 3001 (epoch 75): loss 1 = 0.14957, loss 2 = 0.28230
  > Step 3251 (epoch 81): loss 1 = 0.15645, loss 2 = 0.26252
val eval at step 3500: map@0.50 = 0.45305 - map@0.75 = 0.14381
  > Step 3501 (epoch 87): loss 1 = 0.15542, loss 2 = 0.26777
  > Step 3751 (epoch 94): loss 1 = 0.09831, loss 2 = 0.21165
val eval at step 4000: map@0.50 = 0.47109 - map@0.75 = 0.12482
  > Step 4001 (epoch 100): loss 1 = 0.13822, loss 2 = 0.20901
  > Step 4251 (epoch 106): loss 1 = 0.13461, loss 2 = 0.16385
val eval at step 4500: map@0.50 = 0.50795 - map@0.75 = 0.14083
  > Step 4501 (epoch 112): loss 1 = 0.12413, loss 2 = 0.15328
  > Step 4751 (epoch 118): loss 1 = 0.19633, loss 2 = 0.21702
val eval at step 5000: map@0.50 = 0.48592 - map@0.75 = 0.16161
  > Step 5001 (epoch 124): loss 1 = 0.27659, loss 2 = 0.21559
  > Step 5251 (epoch 131): loss 1 = 0.12726, loss 2 = 0.19005
val eval at step 5500: map@0.50 = 0.51309 - map@0.75 = 0.15318
  > Step 5501 (epoch 137): loss 1 = 0.11891, loss 2 = 0.17691
  > Step 5751 (epoch 143): loss 1 = 0.10328, loss 2 = 0.17454
val eval at step 6000: map@0.50 = 0.56029 - map@0.75 = 0.16291
  > Step 6001 (epoch 149): loss 1 = 0.08488, loss 2 = 0.15916
  > Step 6251 (epoch 155): loss 1 = 0.09643, loss 2 = 0.15728
val eval at step 6500: map@0.50 = 0.53725 - map@0.75 = 0.12502
  > Step 6501 (epoch 162): loss 1 = 0.07139, loss 2 = 0.13909
  > Step 6751 (epoch 168): loss 1 = 0.08363, loss 2 = 0.14564
val eval at step 7000: map@0.50 = 0.54705 - map@0.75 = 0.15050
  > Step 7001 (epoch 174): loss 1 = 0.11891, loss 2 = 0.12443
  > Step 7251 (epoch 180): loss 1 = 0.13263, loss 2 = 0.15585
val eval at step 7500: map@0.50 = 0.54493 - map@0.75 = 0.19422
  > Step 7501 (epoch 186): loss 1 = 0.08821, loss 2 = 0.16669
  > Step 7751 (epoch 193): loss 1 = 0.11182, loss 2 = 0.15107
val eval at step 8000: map@0.50 = 0.54143 - map@0.75 = 0.19990
  > Step 8001 (epoch 199): loss 1 = 0.12169, loss 2 = 0.14495
  > Step 8251 (epoch 205): loss 1 = 0.14283, loss 2 = 0.21240
val eval at step 8500: map@0.50 = 0.57503 - map@0.75 = 0.19074
  > Step 8501 (epoch 211): loss 1 = 0.11185, loss 2 = 0.15437
  > Step 8751 (epoch 217): loss 1 = 0.06975, loss 2 = 0.15330
val eval at step 9000: map@0.50 = 0.55698 - map@0.75 = 0.16149
  > Step 9001 (epoch 224): loss 1 = 0.06754, loss 2 = 0.10839
  > Step 9251 (epoch 230): loss 1 = 0.07930, loss 2 = 0.15432
val eval at step 9500: map@0.50 = 0.57073 - map@0.75 = 0.15969
  > Step 9501 (epoch 236): loss 1 = 0.05820, loss 2 = 0.12449
  > Step 9751 (epoch 242): loss 1 = 0.05636, loss 2 = 0.10463
val eval at step 10000: map@0.50 = 0.56433 - map@0.75 = 0.21631
  > Step 10001 (epoch 248): loss 1 = 0.07011, loss 2 = 0.10541
  > Step 10251 (epoch 255): loss 1 = 0.07093, loss 2 = 0.10591
val eval at step 10500: map@0.50 = 0.58483 - map@0.75 = 0.24045
  > Step 10501 (epoch 261): loss 1 = 0.16837, loss 2 = 0.10210
  > Step 10751 (epoch 267): loss 1 = 0.08197, loss 2 = 0.13837
val eval at step 11000: map@0.50 = 0.57207 - map@0.75 = 0.22638
  > Step 11001 (epoch 273): loss 1 = 0.06055, loss 2 = 0.10421
  > Step 11251 (epoch 279): loss 1 = 0.08170, loss 2 = 0.09773
val eval at step 11500: map@0.50 = 0.54016 - map@0.75 = 0.19209
  > Step 11501 (epoch 286): loss 1 = 0.06097, loss 2 = 0.10347
  > Step 11751 (epoch 292): loss 1 = 0.07739, loss 2 = 0.10446
val eval at step 12000: map@0.50 = 0.53377 - map@0.75 = 0.19758
  > Step 12001 (epoch 298): loss 1 = 0.19479, loss 2 = 0.11512
  > Step 12251 (epoch 304): loss 1 = 0.07717, loss 2 = 0.10152
val eval at step 12500: map@0.50 = 0.58531 - map@0.75 = 0.19493
  > Step 12501 (epoch 310): loss 1 = 0.07607, loss 2 = 0.10231
  > Step 12751 (epoch 317): loss 1 = 0.05674, loss 2 = 0.09457
val eval at step 13000: map@0.50 = 0.53159 - map@0.75 = 0.19569
  > Step 13001 (epoch 323): loss 1 = 0.03597, loss 2 = 0.05895
  > Step 13251 (epoch 329): loss 1 = 0.03987, loss 2 = 0.09153
val eval at step 13500: map@0.50 = 0.53558 - map@0.75 = 0.14953
  > Step 13501 (epoch 335): loss 1 = 0.05040, loss 2 = 0.08531
  > Step 13751 (epoch 341): loss 1 = 0.06683, loss 2 = 0.07956
val eval at step 14000: map@0.50 = 0.54036 - map@0.75 = 0.19129
  > Step 14001 (epoch 348): loss 1 = 0.03778, loss 2 = 0.07023
  > Step 14251 (epoch 354): loss 1 = 0.04674, loss 2 = 0.08231
val eval at step 14500: map@0.50 = 0.56116 - map@0.75 = 0.17533
  > Step 14501 (epoch 360): loss 1 = 0.06336, loss 2 = 0.11266
  > Step 14751 (epoch 366): loss 1 = 0.04250, loss 2 = 0.07643
val eval at step 15000: map@0.50 = 0.54897 - map@0.75 = 0.18420
  > Step 15001 (epoch 372): loss 1 = 0.06516, loss 2 = 0.08655
  > Step 15251 (epoch 379): loss 1 = 0.06858, loss 2 = 0.15268
val eval at step 15500: map@0.50 = 0.57547 - map@0.75 = 0.14931
  > Step 15501 (epoch 385): loss 1 = 0.05884, loss 2 = 0.09673
  > Step 15751 (epoch 391): loss 1 = 0.05151, loss 2 = 0.07518
val eval at step 16000: map@0.50 = 0.58402 - map@0.75 = 0.18359
  > Step 16001 (epoch 397): loss 1 = 0.06758, loss 2 = 0.06233
  > Step 16251 (epoch 403): loss 1 = 0.05637, loss 2 = 0.08307
val eval at step 16500: map@0.50 = 0.57269 - map@0.75 = 0.15820
  > Step 16501 (epoch 410): loss 1 = 0.07869, loss 2 = 0.07933
  > Step 16751 (epoch 416): loss 1 = 0.05000, loss 2 = 0.06544
val eval at step 17000: map@0.50 = 0.59220 - map@0.75 = 0.22869
  > Step 17001 (epoch 422): loss 1 = 0.15797, loss 2 = 0.12437
  > Step 17251 (epoch 428): loss 1 = 0.05635, loss 2 = 0.06383
val eval at step 17500: map@0.50 = 0.59897 - map@0.75 = 0.22348
  > Step 17501 (epoch 434): loss 1 = 0.05140, loss 2 = 0.05296
  > Step 17751 (epoch 441): loss 1 = 0.05636, loss 2 = 0.07196
val eval at step 18000: map@0.50 = 0.58445 - map@0.75 = 0.17607
  > Step 18001 (epoch 447): loss 1 = 0.03900, loss 2 = 0.06467
  > Step 18251 (epoch 453): loss 1 = 0.03938, loss 2 = 0.06827
val eval at step 18500: map@0.50 = 0.56630 - map@0.75 = 0.18502
  > Step 18501 (epoch 459): loss 1 = 0.05655, loss 2 = 0.08293
  > Step 18751 (epoch 465): loss 1 = 0.05188, loss 2 = 0.05763
val eval at step 19000: map@0.50 = 0.53704 - map@0.75 = 0.17374
  > Step 19001 (epoch 472): loss 1 = 0.05762, loss 2 = 0.08027
  > Step 19251 (epoch 478): loss 1 = 0.04264, loss 2 = 0.07259
val eval at step 19500: map@0.50 = 0.55752 - map@0.75 = 0.18477
  > Step 19501 (epoch 484): loss 1 = 0.03460, loss 2 = 0.07893
  > Step 19751 (epoch 490): loss 1 = 0.02828, loss 2 = 0.06614
val eval at step 20000: map@0.50 = 0.57578 - map@0.75 = 0.14808
  > Step 20001 (epoch 496): loss 1 = 0.14949, loss 2 = 0.10641
  > Step 20251 (epoch 503): loss 1 = 0.07103, loss 2 = 0.05102
val eval at step 20500: map@0.50 = 0.53214 - map@0.75 = 0.15706
  > Step 20501 (epoch 509): loss 1 = 0.03900, loss 2 = 0.07455
  > Step 20751 (epoch 515): loss 1 = 0.04053, loss 2 = 0.07003
val eval at step 21000: map@0.50 = 0.56328 - map@0.75 = 0.17959
  > Step 21001 (epoch 521): loss 1 = 0.05949, loss 2 = 0.11060
  > Step 21251 (epoch 527): loss 1 = 0.05040, loss 2 = 0.08960
val eval at step 21500: map@0.50 = 0.57074 - map@0.75 = 0.14491
  > Step 21501 (epoch 534): loss 1 = 0.05523, loss 2 = 0.07513
  > Step 21751 (epoch 540): loss 1 = 0.08867, loss 2 = 0.10949
val eval at step 22000: map@0.50 = 0.56406 - map@0.75 = 0.19288
  > Step 22001 (epoch 546): loss 1 = 0.05524, loss 2 = 0.11918
  > Step 22251 (epoch 552): loss 1 = 0.11725, loss 2 = 0.07967
val eval at step 22500: map@0.50 = 0.54568 - map@0.75 = 0.16523
  > Step 22501 (epoch 558): loss 1 = 0.04098, loss 2 = 0.03859
  > Step 22751 (epoch 565): loss 1 = 0.04117, loss 2 = 0.03924
val eval at step 23000: map@0.50 = 0.49175 - map@0.75 = 0.18945
  > Step 23001 (epoch 571): loss 1 = 0.05674, loss 2 = 0.06851
  > Step 23251 (epoch 577): loss 1 = 0.04742, loss 2 = 0.04685
val eval at step 23500: map@0.50 = 0.52642 - map@0.75 = 0.19120
  > Step 23501 (epoch 583): loss 1 = 0.04220, loss 2 = 0.07269
  > Step 23751 (epoch 589): loss 1 = 0.05052, loss 2 = 0.10621
val eval at step 24000: map@0.50 = 0.53138 - map@0.75 = 0.21733
  > Step 24001 (epoch 596): loss 1 = 0.02987, loss 2 = 0.05281
test eval at step 24200: map@0.50 = 0.54252 - map@0.75 = 0.17019
