============================================================== FOLD 01
Tensorflow version 1.10.1
ODGI - vedai_fold01, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold01
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold01
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold01_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold01_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold01_val
   using grid size [16 16]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold01/tiny-yolov2_odgi_512_64/09-27_16-00

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold01/tiny-yolov2_odgi_512_64/09-27_16-00[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 7.33537, loss 2 = 5.15247
  > Step 251 (epoch 7): loss 1 = 0.74528, loss 2 = 0.58527
val eval at step 500: map@0.50 = 0.09821 - map@0.75 = 0.00293
  > Step 501 (epoch 13): loss 1 = 0.46102, loss 2 = 0.47538
  > Step 751 (epoch 19): loss 1 = 0.41711, loss 2 = 0.36215
val eval at step 1000: map@0.50 = 0.18279 - map@0.75 = 0.00833
  > Step 1001 (epoch 25): loss 1 = 0.37474, loss 2 = 0.40346
  > Step 1251 (epoch 32): loss 1 = 0.22191, loss 2 = 0.37485
val eval at step 1500: map@0.50 = 0.29707 - map@0.75 = 0.06019
  > Step 1501 (epoch 38): loss 1 = 0.20515, loss 2 = 0.32953
  > Step 1751 (epoch 44): loss 1 = 0.19710, loss 2 = 0.31673
val eval at step 2000: map@0.50 = 0.32831 - map@0.75 = 0.06269
  > Step 2001 (epoch 50): loss 1 = 0.24750, loss 2 = 0.33115
  > Step 2251 (epoch 56): loss 1 = 0.28966, loss 2 = 0.38323
val eval at step 2500: map@0.50 = 0.47327 - map@0.75 = 0.13707
  > Step 2501 (epoch 63): loss 1 = 0.17357, loss 2 = 0.23883
  > Step 2751 (epoch 69): loss 1 = 0.17041, loss 2 = 0.30387
val eval at step 3000: map@0.50 = 0.46176 - map@0.75 = 0.11327
  > Step 3001 (epoch 75): loss 1 = 0.21371, loss 2 = 0.29958
  > Step 3251 (epoch 81): loss 1 = 0.14959, loss 2 = 0.18186
val eval at step 3500: map@0.50 = 0.47233 - map@0.75 = 0.18330
  > Step 3501 (epoch 87): loss 1 = 0.15793, loss 2 = 0.30527
  > Step 3751 (epoch 94): loss 1 = 0.23953, loss 2 = 0.24042
val eval at step 4000: map@0.50 = 0.44669 - map@0.75 = 0.12197
  > Step 4001 (epoch 100): loss 1 = 0.14007, loss 2 = 0.17884
  > Step 4251 (epoch 106): loss 1 = 0.10465, loss 2 = 0.19438
val eval at step 4500: map@0.50 = 0.53447 - map@0.75 = 0.14455
  > Step 4501 (epoch 112): loss 1 = 0.10495, loss 2 = 0.15678
  > Step 4751 (epoch 118): loss 1 = 0.09750, loss 2 = 0.18591
val eval at step 5000: map@0.50 = 0.48317 - map@0.75 = 0.17395
  > Step 5001 (epoch 124): loss 1 = 0.10314, loss 2 = 0.18816
  > Step 5251 (epoch 131): loss 1 = 0.11954, loss 2 = 0.24733
val eval at step 5500: map@0.50 = 0.51101 - map@0.75 = 0.16451
  > Step 5501 (epoch 137): loss 1 = 0.08414, loss 2 = 0.16953
  > Step 5751 (epoch 143): loss 1 = 0.11721, loss 2 = 0.16258
val eval at step 6000: map@0.50 = 0.51226 - map@0.75 = 0.18825
  > Step 6001 (epoch 149): loss 1 = 0.19495, loss 2 = 0.18573
  > Step 6251 (epoch 155): loss 1 = 0.14665, loss 2 = 0.17861
val eval at step 6500: map@0.50 = 0.49963 - map@0.75 = 0.17220
  > Step 6501 (epoch 162): loss 1 = 0.10089, loss 2 = 0.17145
  > Step 6751 (epoch 168): loss 1 = 0.07088, loss 2 = 0.14936
val eval at step 7000: map@0.50 = 0.54538 - map@0.75 = 0.18983
  > Step 7001 (epoch 174): loss 1 = 0.07868, loss 2 = 0.16141
  > Step 7251 (epoch 180): loss 1 = 0.08187, loss 2 = 0.16387
val eval at step 7500: map@0.50 = 0.52936 - map@0.75 = 0.17902
  > Step 7501 (epoch 186): loss 1 = 0.06262, loss 2 = 0.12465
  > Step 7751 (epoch 193): loss 1 = 0.07709, loss 2 = 0.14167
val eval at step 8000: map@0.50 = 0.51151 - map@0.75 = 0.15383
  > Step 8001 (epoch 199): loss 1 = 0.09197, loss 2 = 0.09500
  > Step 8251 (epoch 205): loss 1 = 0.30396, loss 2 = 0.19140
val eval at step 8500: map@0.50 = 0.51864 - map@0.75 = 0.15837
  > Step 8501 (epoch 211): loss 1 = 0.07340, loss 2 = 0.14725
  > Step 8751 (epoch 217): loss 1 = 0.52879, loss 2 = 0.23785
val eval at step 9000: map@0.50 = 0.55061 - map@0.75 = 0.20706
  > Step 9001 (epoch 224): loss 1 = 0.12435, loss 2 = 0.13484
  > Step 9251 (epoch 230): loss 1 = 0.16315, loss 2 = 0.15758
val eval at step 9500: map@0.50 = 0.52847 - map@0.75 = 0.20460
  > Step 9501 (epoch 236): loss 1 = 0.06675, loss 2 = 0.09230
  > Step 9751 (epoch 242): loss 1 = 0.06225, loss 2 = 0.12176
val eval at step 10000: map@0.50 = 0.51496 - map@0.75 = 0.13912
  > Step 10001 (epoch 248): loss 1 = 0.06514, loss 2 = 0.12823
  > Step 10251 (epoch 255): loss 1 = 0.05731, loss 2 = 0.09902
val eval at step 10500: map@0.50 = 0.51047 - map@0.75 = 0.15842
  > Step 10501 (epoch 261): loss 1 = 0.07248, loss 2 = 0.11921
  > Step 10751 (epoch 267): loss 1 = 0.04816, loss 2 = 0.10787
val eval at step 11000: map@0.50 = 0.47933 - map@0.75 = 0.13295
  > Step 11001 (epoch 273): loss 1 = 0.06808, loss 2 = 0.09641
  > Step 11251 (epoch 279): loss 1 = 0.14303, loss 2 = 0.12560
val eval at step 11500: map@0.50 = 0.51284 - map@0.75 = 0.15173
  > Step 11501 (epoch 286): loss 1 = 0.06373, loss 2 = 0.12784
  > Step 11751 (epoch 292): loss 1 = 0.09280, loss 2 = 0.13192
val eval at step 12000: map@0.50 = 0.55723 - map@0.75 = 0.22376
  > Step 12001 (epoch 298): loss 1 = 0.04390, loss 2 = 0.09089
  > Step 12251 (epoch 304): loss 1 = 0.08455, loss 2 = 0.10780
val eval at step 12500: map@0.50 = 0.53784 - map@0.75 = 0.18638
  > Step 12501 (epoch 310): loss 1 = 0.07685, loss 2 = 0.11897
  > Step 12751 (epoch 317): loss 1 = 0.17290, loss 2 = 0.13591
val eval at step 13000: map@0.50 = 0.53737 - map@0.75 = 0.24665
  > Step 13001 (epoch 323): loss 1 = 0.13114, loss 2 = 0.15551
  > Step 13251 (epoch 329): loss 1 = 0.08986, loss 2 = 0.10040
val eval at step 13500: map@0.50 = 0.56730 - map@0.75 = 0.27535
  > Step 13501 (epoch 335): loss 1 = 0.04967, loss 2 = 0.08563
  > Step 13751 (epoch 341): loss 1 = 0.06352, loss 2 = 0.08928
val eval at step 14000: map@0.50 = 0.50801 - map@0.75 = 0.16462
  > Step 14001 (epoch 348): loss 1 = 0.06045, loss 2 = 0.07929
  > Step 14251 (epoch 354): loss 1 = 0.07376, loss 2 = 0.10181
val eval at step 14500: map@0.50 = 0.54647 - map@0.75 = 0.20733
  > Step 14501 (epoch 360): loss 1 = 0.04651, loss 2 = 0.08302
  > Step 14751 (epoch 366): loss 1 = 0.05828, loss 2 = 0.04243
val eval at step 15000: map@0.50 = 0.54099 - map@0.75 = 0.13439
  > Step 15001 (epoch 372): loss 1 = 0.05376, loss 2 = 0.06374
  > Step 15251 (epoch 379): loss 1 = 0.04089, loss 2 = 0.06733
val eval at step 15500: map@0.50 = 0.51116 - map@0.75 = 0.17330
  > Step 15501 (epoch 385): loss 1 = 0.06716, loss 2 = 0.12110
  > Step 15751 (epoch 391): loss 1 = 0.07906, loss 2 = 0.15976
val eval at step 16000: map@0.50 = 0.52160 - map@0.75 = 0.17139
  > Step 16001 (epoch 397): loss 1 = 0.05689, loss 2 = 0.10107
  > Step 16251 (epoch 403): loss 1 = 0.04826, loss 2 = 0.08817
val eval at step 16500: map@0.50 = 0.56513 - map@0.75 = 0.24802
  > Step 16501 (epoch 410): loss 1 = 0.10707, loss 2 = 0.07699
  > Step 16751 (epoch 416): loss 1 = 0.10334, loss 2 = 0.09613
val eval at step 17000: map@0.50 = 0.53447 - map@0.75 = 0.22579
  > Step 17001 (epoch 422): loss 1 = 0.05839, loss 2 = 0.06031
  > Step 17251 (epoch 428): loss 1 = 0.04582, loss 2 = 0.06289
val eval at step 17500: map@0.50 = 0.50481 - map@0.75 = 0.21113
  > Step 17501 (epoch 434): loss 1 = 0.04748, loss 2 = 0.07470
  > Step 17751 (epoch 441): loss 1 = 0.06499, loss 2 = 0.07312
val eval at step 18000: map@0.50 = 0.51219 - map@0.75 = 0.20183
  > Step 18001 (epoch 447): loss 1 = 0.03723, loss 2 = 0.07535
  > Step 18251 (epoch 453): loss 1 = 0.03779, loss 2 = 0.08729
val eval at step 18500: map@0.50 = 0.49060 - map@0.75 = 0.20038
  > Step 18501 (epoch 459): loss 1 = 0.05657, loss 2 = 0.08738
  > Step 18751 (epoch 465): loss 1 = 0.05467, loss 2 = 0.10205
val eval at step 19000: map@0.50 = 0.53797 - map@0.75 = 0.24480
  > Step 19001 (epoch 472): loss 1 = 0.02990, loss 2 = 0.03774
  > Step 19251 (epoch 478): loss 1 = 0.05883, loss 2 = 0.07302
val eval at step 19500: map@0.50 = 0.55408 - map@0.75 = 0.27373
  > Step 19501 (epoch 484): loss 1 = 0.03449, loss 2 = 0.05568
  > Step 19751 (epoch 490): loss 1 = 0.14863, loss 2 = 0.11973
val eval at step 20000: map@0.50 = 0.55516 - map@0.75 = 0.28429
  > Step 20001 (epoch 496): loss 1 = 0.07748, loss 2 = 0.09573
  > Step 20251 (epoch 503): loss 1 = 0.30014, loss 2 = 0.07286
val eval at step 20500: map@0.50 = 0.54230 - map@0.75 = 0.21661
  > Step 20501 (epoch 509): loss 1 = 0.03275, loss 2 = 0.07143
  > Step 20751 (epoch 515): loss 1 = 0.03715, loss 2 = 0.06477
val eval at step 21000: map@0.50 = 0.54275 - map@0.75 = 0.21420
  > Step 21001 (epoch 521): loss 1 = 0.04718, loss 2 = 0.05407
  > Step 21251 (epoch 527): loss 1 = 0.03068, loss 2 = 0.09601
val eval at step 21500: map@0.50 = 0.51873 - map@0.75 = 0.18122
  > Step 21501 (epoch 534): loss 1 = 0.02940, loss 2 = 0.07151
  > Step 21751 (epoch 540): loss 1 = 0.03526, loss 2 = 0.03957
val eval at step 22000: map@0.50 = 0.56309 - map@0.75 = 0.19747
  > Step 22001 (epoch 546): loss 1 = 0.03213, loss 2 = 0.05130
  > Step 22251 (epoch 552): loss 1 = 0.04228, loss 2 = 0.06449
val eval at step 22500: map@0.50 = 0.51943 - map@0.75 = 0.17415
  > Step 22501 (epoch 558): loss 1 = 0.04271, loss 2 = 0.07866
  > Step 22751 (epoch 565): loss 1 = 0.04437, loss 2 = 0.07956
val eval at step 23000: map@0.50 = 0.53560 - map@0.75 = 0.21930
  > Step 23001 (epoch 571): loss 1 = 0.03565, loss 2 = 0.07234
  > Step 23251 (epoch 577): loss 1 = 0.05294, loss 2 = 0.07735
val eval at step 23500: map@0.50 = 0.57706 - map@0.75 = 0.23571
  > Step 23501 (epoch 583): loss 1 = 0.06446, loss 2 = 0.05370
  > Step 23751 (epoch 589): loss 1 = 0.04118, loss 2 = 0.07892
val eval at step 24000: map@0.50 = 0.55835 - map@0.75 = 0.21807
  > Step 24001 (epoch 596): loss 1 = 0.05443, loss 2 = 0.06936
test eval at step 24200: map@0.50 = 0.59056 - map@0.75 = 0.24335
