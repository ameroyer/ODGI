============================================================== FOLD 01
Tensorflow version 1.10.1
ODGI - vedai_fold01, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold01
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold01
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold01_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold01_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold01_val
   using grid size [8 8]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.97 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold01/tiny-yolov2_odgi_256_64/10-05_14-32

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold01/tiny-yolov2_odgi_256_64/10-05_14-32[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 6.04001, loss 2 = 11.23141
  > Step 251 (epoch 7): loss 1 = 0.76315, loss 2 = 0.55116
val eval at step 500: map@0.50 = 0.01687 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.43421, loss 2 = 0.42715
  > Step 751 (epoch 19): loss 1 = 0.41648, loss 2 = 0.44584
val eval at step 1000: map@0.50 = 0.04880 - map@0.75 = 0.00275
  > Step 1001 (epoch 25): loss 1 = 0.34481, loss 2 = 0.33823
  > Step 1251 (epoch 32): loss 1 = 0.20155, loss 2 = 0.38739
val eval at step 1500: map@0.50 = 0.16573 - map@0.75 = 0.02548
  > Step 1501 (epoch 38): loss 1 = 0.24460, loss 2 = 0.33477
  > Step 1751 (epoch 44): loss 1 = 0.24085, loss 2 = 0.32572
val eval at step 2000: map@0.50 = 0.18438 - map@0.75 = 0.00826
  > Step 2001 (epoch 50): loss 1 = 0.21839, loss 2 = 0.32774
  > Step 2251 (epoch 56): loss 1 = 0.30906, loss 2 = 0.33114
val eval at step 2500: map@0.50 = 0.18665 - map@0.75 = 0.02532
  > Step 2501 (epoch 63): loss 1 = 0.21745, loss 2 = 0.26362
  > Step 2751 (epoch 69): loss 1 = 0.18363, loss 2 = 0.25290
val eval at step 3000: map@0.50 = 0.26050 - map@0.75 = 0.05375
  > Step 3001 (epoch 75): loss 1 = 0.23003, loss 2 = 0.31413
  > Step 3251 (epoch 81): loss 1 = 0.21322, loss 2 = 0.24235
val eval at step 3500: map@0.50 = 0.26886 - map@0.75 = 0.02064
  > Step 3501 (epoch 87): loss 1 = 0.23469, loss 2 = 0.26955
  > Step 3751 (epoch 94): loss 1 = 0.43915, loss 2 = 0.29740
val eval at step 4000: map@0.50 = 0.26036 - map@0.75 = 0.04329
  > Step 4001 (epoch 100): loss 1 = 0.20168, loss 2 = 0.24074
  > Step 4251 (epoch 106): loss 1 = 0.22142, loss 2 = 0.25196
val eval at step 4500: map@0.50 = 0.31747 - map@0.75 = 0.08393
  > Step 4501 (epoch 112): loss 1 = 0.20981, loss 2 = 0.22248
  > Step 4751 (epoch 118): loss 1 = 0.19477, loss 2 = 0.27488
val eval at step 5000: map@0.50 = 0.30825 - map@0.75 = 0.05379
  > Step 5001 (epoch 124): loss 1 = 0.16003, loss 2 = 0.22768
  > Step 5251 (epoch 131): loss 1 = 0.14496, loss 2 = 0.24807
val eval at step 5500: map@0.50 = 0.38794 - map@0.75 = 0.05713
  > Step 5501 (epoch 137): loss 1 = 0.26593, loss 2 = 0.25757
  > Step 5751 (epoch 143): loss 1 = 0.17004, loss 2 = 0.22364
val eval at step 6000: map@0.50 = 0.31468 - map@0.75 = 0.05955
  > Step 6001 (epoch 149): loss 1 = 0.14697, loss 2 = 0.18852
  > Step 6251 (epoch 155): loss 1 = 0.20229, loss 2 = 0.22777
val eval at step 6500: map@0.50 = 0.37073 - map@0.75 = 0.06880
  > Step 6501 (epoch 162): loss 1 = 0.20701, loss 2 = 0.18507
  > Step 6751 (epoch 168): loss 1 = 0.16783, loss 2 = 0.19886
val eval at step 7000: map@0.50 = 0.27464 - map@0.75 = 0.02287
  > Step 7001 (epoch 174): loss 1 = 0.15933, loss 2 = 0.19253
  > Step 7251 (epoch 180): loss 1 = 0.17807, loss 2 = 0.22802
val eval at step 7500: map@0.50 = 0.39562 - map@0.75 = 0.10134
  > Step 7501 (epoch 186): loss 1 = 0.13694, loss 2 = 0.15093
  > Step 7751 (epoch 193): loss 1 = 0.10736, loss 2 = 0.16230
val eval at step 8000: map@0.50 = 0.30215 - map@0.75 = 0.05172
  > Step 8001 (epoch 199): loss 1 = 0.16199, loss 2 = 0.18443
  > Step 8251 (epoch 205): loss 1 = 0.13302, loss 2 = 0.18084
val eval at step 8500: map@0.50 = 0.36647 - map@0.75 = 0.10911
  > Step 8501 (epoch 211): loss 1 = 0.20651, loss 2 = 0.16035
  > Step 8751 (epoch 217): loss 1 = 0.12782, loss 2 = 0.13689
val eval at step 9000: map@0.50 = 0.23936 - map@0.75 = 0.05512
  > Step 9001 (epoch 224): loss 1 = 0.50489, loss 2 = 0.22771
  > Step 9251 (epoch 230): loss 1 = 0.19240, loss 2 = 0.20995
val eval at step 9500: map@0.50 = 0.46677 - map@0.75 = 0.09441
  > Step 9501 (epoch 236): loss 1 = 0.13196, loss 2 = 0.15054
  > Step 9751 (epoch 242): loss 1 = 0.13677, loss 2 = 0.14248
val eval at step 10000: map@0.50 = 0.43386 - map@0.75 = 0.10982
  > Step 10001 (epoch 248): loss 1 = 0.12274, loss 2 = 0.12532
  > Step 10251 (epoch 255): loss 1 = 0.10498, loss 2 = 0.15232
val eval at step 10500: map@0.50 = 0.38413 - map@0.75 = 0.09514
  > Step 10501 (epoch 261): loss 1 = 0.12022, loss 2 = 0.13635
  > Step 10751 (epoch 267): loss 1 = 0.08774, loss 2 = 0.10861
val eval at step 11000: map@0.50 = 0.37503 - map@0.75 = 0.07582
  > Step 11001 (epoch 273): loss 1 = 0.11982, loss 2 = 0.14240
  > Step 11251 (epoch 279): loss 1 = 0.11337, loss 2 = 0.15554
val eval at step 11500: map@0.50 = 0.41250 - map@0.75 = 0.13256
  > Step 11501 (epoch 286): loss 1 = 0.11001, loss 2 = 0.12093
  > Step 11751 (epoch 292): loss 1 = 0.10435, loss 2 = 0.11812
val eval at step 12000: map@0.50 = 0.42195 - map@0.75 = 0.11224
  > Step 12001 (epoch 298): loss 1 = 0.13805, loss 2 = 0.13755
  > Step 12251 (epoch 304): loss 1 = 0.15412, loss 2 = 0.12517
val eval at step 12500: map@0.50 = 0.39026 - map@0.75 = 0.12515
  > Step 12501 (epoch 310): loss 1 = 0.10451, loss 2 = 0.13933
  > Step 12751 (epoch 317): loss 1 = 0.10158, loss 2 = 0.16074
val eval at step 13000: map@0.50 = 0.32494 - map@0.75 = 0.06463
  > Step 13001 (epoch 323): loss 1 = 0.31721, loss 2 = 0.27434
  > Step 13251 (epoch 329): loss 1 = 0.12820, loss 2 = 0.14180
val eval at step 13500: map@0.50 = 0.43755 - map@0.75 = 0.13241
  > Step 13501 (epoch 335): loss 1 = 0.10515, loss 2 = 0.09778
  > Step 13751 (epoch 341): loss 1 = 0.09384, loss 2 = 0.10820
val eval at step 14000: map@0.50 = 0.46311 - map@0.75 = 0.15321
  > Step 14001 (epoch 348): loss 1 = 0.07492, loss 2 = 0.16792
  > Step 14251 (epoch 354): loss 1 = 0.09381, loss 2 = 0.14548
val eval at step 14500: map@0.50 = 0.40422 - map@0.75 = 0.12491
  > Step 14501 (epoch 360): loss 1 = 0.07778, loss 2 = 0.11338
  > Step 14751 (epoch 366): loss 1 = 0.11218, loss 2 = 0.08402
val eval at step 15000: map@0.50 = 0.42576 - map@0.75 = 0.13772
  > Step 15001 (epoch 372): loss 1 = 0.07173, loss 2 = 0.14137
  > Step 15251 (epoch 379): loss 1 = 0.07912, loss 2 = 0.12963
val eval at step 15500: map@0.50 = 0.41365 - map@0.75 = 0.13980
  > Step 15501 (epoch 385): loss 1 = 0.07695, loss 2 = 0.09480
  > Step 15751 (epoch 391): loss 1 = 0.07957, loss 2 = 0.11021
val eval at step 16000: map@0.50 = 0.41239 - map@0.75 = 0.14019
  > Step 16001 (epoch 397): loss 1 = 0.07642, loss 2 = 0.17260
  > Step 16251 (epoch 403): loss 1 = 0.06192, loss 2 = 0.10315
val eval at step 16500: map@0.50 = 0.42326 - map@0.75 = 0.08869
  > Step 16501 (epoch 410): loss 1 = 0.09197, loss 2 = 0.10164
  > Step 16751 (epoch 416): loss 1 = 0.09070, loss 2 = 0.08957
val eval at step 17000: map@0.50 = 0.42033 - map@0.75 = 0.13132
  > Step 17001 (epoch 422): loss 1 = 0.08442, loss 2 = 0.12589
  > Step 17251 (epoch 428): loss 1 = 0.09925, loss 2 = 0.10946
val eval at step 17500: map@0.50 = 0.46773 - map@0.75 = 0.17855
  > Step 17501 (epoch 434): loss 1 = 0.09718, loss 2 = 0.10952
  > Step 17751 (epoch 441): loss 1 = 0.18863, loss 2 = 0.15094
val eval at step 18000: map@0.50 = 0.43824 - map@0.75 = 0.13840
  > Step 18001 (epoch 447): loss 1 = 0.16732, loss 2 = 0.14014
  > Step 18251 (epoch 453): loss 1 = 0.07635, loss 2 = 0.07731
val eval at step 18500: map@0.50 = 0.43772 - map@0.75 = 0.15858
  > Step 18501 (epoch 459): loss 1 = 0.08535, loss 2 = 0.08072
  > Step 18751 (epoch 465): loss 1 = 0.06027, loss 2 = 0.11364
val eval at step 19000: map@0.50 = 0.44694 - map@0.75 = 0.12147
  > Step 19001 (epoch 472): loss 1 = 0.07056, loss 2 = 0.09179
  > Step 19251 (epoch 478): loss 1 = 0.08298, loss 2 = 0.12472
val eval at step 19500: map@0.50 = 0.40241 - map@0.75 = 0.10410
  > Step 19501 (epoch 484): loss 1 = 0.06385, loss 2 = 0.09787
  > Step 19751 (epoch 490): loss 1 = 0.07563, loss 2 = 0.11458
val eval at step 20000: map@0.50 = 0.40464 - map@0.75 = 0.13540
  > Step 20001 (epoch 496): loss 1 = 0.07225, loss 2 = 0.08330
  > Step 20251 (epoch 503): loss 1 = 0.08215, loss 2 = 0.06024
val eval at step 20500: map@0.50 = 0.43429 - map@0.75 = 0.14575
  > Step 20501 (epoch 509): loss 1 = 0.05424, loss 2 = 0.07604
  > Step 20751 (epoch 515): loss 1 = 0.06412, loss 2 = 0.11577
val eval at step 21000: map@0.50 = 0.44178 - map@0.75 = 0.15016
  > Step 21001 (epoch 521): loss 1 = 0.07247, loss 2 = 0.12563
  > Step 21251 (epoch 527): loss 1 = 0.06307, loss 2 = 0.06964
val eval at step 21500: map@0.50 = 0.41336 - map@0.75 = 0.15135
  > Step 21501 (epoch 534): loss 1 = 0.06886, loss 2 = 0.05949
  > Step 21751 (epoch 540): loss 1 = 0.09422, loss 2 = 0.09916
val eval at step 22000: map@0.50 = 0.42323 - map@0.75 = 0.13857
  > Step 22001 (epoch 546): loss 1 = 0.14918, loss 2 = 0.07612
  > Step 22251 (epoch 552): loss 1 = 0.18566, loss 2 = 0.09691
val eval at step 22500: map@0.50 = 0.41928 - map@0.75 = 0.16978
  > Step 22501 (epoch 558): loss 1 = 0.08311, loss 2 = 0.11668
  > Step 22751 (epoch 565): loss 1 = 0.05059, loss 2 = 0.08961
val eval at step 23000: map@0.50 = 0.42172 - map@0.75 = 0.15748
  > Step 23001 (epoch 571): loss 1 = 0.06209, loss 2 = 0.09225
  > Step 23251 (epoch 577): loss 1 = 0.08881, loss 2 = 0.06843
val eval at step 23500: map@0.50 = 0.41423 - map@0.75 = 0.14475
  > Step 23501 (epoch 583): loss 1 = 0.05763, loss 2 = 0.08771
  > Step 23751 (epoch 589): loss 1 = 0.05905, loss 2 = 0.06070
val eval at step 24000: map@0.50 = 0.43896 - map@0.75 = 0.18020
  > Step 24001 (epoch 596): loss 1 = 0.06658, loss 2 = 0.08994
test eval at step 24200: map@0.50 = 0.45706 - map@0.75 = 0.15388
