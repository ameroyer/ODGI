============================================================== FOLD 09
Tensorflow version 1.10.1
ODGI - vedai_fold09, Input size 128

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold09
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold09
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold09_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold09_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold09_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold09/tiny-yolov2_odgi_128_64/09-27_14-09

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold09/tiny-yolov2_odgi_128_64/09-27_14-09[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 10.41927, loss 2 = 17.30338
  > Step 251 (epoch 7): loss 1 = 0.98456, loss 2 = 16.29923
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.49012, loss 2 = 0.39134
  > Step 751 (epoch 19): loss 1 = 0.45406, loss 2 = 0.42515
val eval at step 1000: map@0.50 = 0.00496 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.33856, loss 2 = 0.44894
  > Step 1251 (epoch 32): loss 1 = 0.20563, loss 2 = 0.34561
val eval at step 1500: map@0.50 = 0.00826 - map@0.75 = 0.00000
  > Step 1501 (epoch 38): loss 1 = 0.30562, loss 2 = 0.36359
  > Step 1751 (epoch 44): loss 1 = 0.26157, loss 2 = 0.33791
val eval at step 2000: map@0.50 = 0.00118 - map@0.75 = 0.00000
  > Step 2001 (epoch 50): loss 1 = 0.22293, loss 2 = 0.42673
  > Step 2251 (epoch 56): loss 1 = 0.21889, loss 2 = 0.34805
val eval at step 2500: map@0.50 = 0.00364 - map@0.75 = 0.00000
  > Step 2501 (epoch 63): loss 1 = 0.23476, loss 2 = 0.41130
  > Step 2751 (epoch 69): loss 1 = 0.19794, loss 2 = 0.38643
val eval at step 3000: map@0.50 = 0.01001 - map@0.75 = 0.00000
  > Step 3001 (epoch 75): loss 1 = 0.33225, loss 2 = 0.34406
  > Step 3251 (epoch 81): loss 1 = 0.29029, loss 2 = 0.37986
val eval at step 3500: map@0.50 = 0.00503 - map@0.75 = 0.00195
  > Step 3501 (epoch 87): loss 1 = 0.29210, loss 2 = 0.32607
  > Step 3751 (epoch 94): loss 1 = 0.23430, loss 2 = 0.33226
val eval at step 4000: map@0.50 = 0.04602 - map@0.75 = 0.00000
  > Step 4001 (epoch 100): loss 1 = 0.22673, loss 2 = 0.34115
  > Step 4251 (epoch 106): loss 1 = 0.20508, loss 2 = 0.33485
val eval at step 4500: map@0.50 = 0.02986 - map@0.75 = 0.00000
  > Step 4501 (epoch 112): loss 1 = 0.23346, loss 2 = 0.33002
  > Step 4751 (epoch 118): loss 1 = 0.16155, loss 2 = 0.27049
val eval at step 5000: map@0.50 = 0.03012 - map@0.75 = 0.00826
  > Step 5001 (epoch 124): loss 1 = 0.18646, loss 2 = 0.37088
  > Step 5251 (epoch 131): loss 1 = 0.29252, loss 2 = 0.27722
val eval at step 5500: map@0.50 = 0.02039 - map@0.75 = 0.00000
  > Step 5501 (epoch 137): loss 1 = 0.27152, loss 2 = 0.31215
  > Step 5751 (epoch 143): loss 1 = 0.23832, loss 2 = 0.25287
val eval at step 6000: map@0.50 = 0.02980 - map@0.75 = 0.00303
  > Step 6001 (epoch 149): loss 1 = 0.18450, loss 2 = 0.23728
  > Step 6251 (epoch 155): loss 1 = 0.17270, loss 2 = 0.27000
val eval at step 6500: map@0.50 = 0.04973 - map@0.75 = 0.00103
  > Step 6501 (epoch 162): loss 1 = 0.17694, loss 2 = 0.27802
  > Step 6751 (epoch 168): loss 1 = 0.25029, loss 2 = 0.23963
val eval at step 7000: map@0.50 = 0.03665 - map@0.75 = 0.00413
  > Step 7001 (epoch 174): loss 1 = 0.19144, loss 2 = 0.24080
  > Step 7251 (epoch 180): loss 1 = 0.29703, loss 2 = 0.33731
val eval at step 7500: map@0.50 = 0.01056 - map@0.75 = 0.00041
  > Step 7501 (epoch 186): loss 1 = 0.31491, loss 2 = 0.27822
  > Step 7751 (epoch 193): loss 1 = 0.16120, loss 2 = 0.25065
val eval at step 8000: map@0.50 = 0.06893 - map@0.75 = 0.00207
  > Step 8001 (epoch 199): loss 1 = 0.21436, loss 2 = 0.24729
  > Step 8251 (epoch 205): loss 1 = 0.18078, loss 2 = 0.23630
val eval at step 8500: map@0.50 = 0.04166 - map@0.75 = 0.00826
  > Step 8501 (epoch 211): loss 1 = 0.18088, loss 2 = 0.19873
  > Step 8751 (epoch 217): loss 1 = 0.22774, loss 2 = 0.25231
val eval at step 9000: map@0.50 = 0.08928 - map@0.75 = 0.00055
  > Step 9001 (epoch 224): loss 1 = 0.19389, loss 2 = 0.23321
  > Step 9251 (epoch 230): loss 1 = 0.20408, loss 2 = 0.24862
val eval at step 9500: map@0.50 = 0.04938 - map@0.75 = 0.00909
  > Step 9501 (epoch 236): loss 1 = 0.24682, loss 2 = 0.28291
  > Step 9751 (epoch 242): loss 1 = 0.19646, loss 2 = 0.19235
val eval at step 10000: map@0.50 = 0.05484 - map@0.75 = 0.00654
  > Step 10001 (epoch 248): loss 1 = 0.23673, loss 2 = 0.22127
  > Step 10251 (epoch 255): loss 1 = 0.25284, loss 2 = 0.16930
val eval at step 10500: map@0.50 = 0.06523 - map@0.75 = 0.00000
  > Step 10501 (epoch 261): loss 1 = 0.20036, loss 2 = 0.20657
  > Step 10751 (epoch 267): loss 1 = 0.24947, loss 2 = 0.23062
val eval at step 11000: map@0.50 = 0.07231 - map@0.75 = 0.01129
  > Step 11001 (epoch 273): loss 1 = 0.19393, loss 2 = 0.18201
  > Step 11251 (epoch 279): loss 1 = 0.20752, loss 2 = 0.20135
val eval at step 11500: map@0.50 = 0.10387 - map@0.75 = 0.00518
  > Step 11501 (epoch 286): loss 1 = 0.13593, loss 2 = 0.17539
  > Step 11751 (epoch 292): loss 1 = 0.14161, loss 2 = 0.26994
val eval at step 12000: map@0.50 = 0.07126 - map@0.75 = 0.01556
  > Step 12001 (epoch 298): loss 1 = 0.21343, loss 2 = 0.21645
  > Step 12251 (epoch 304): loss 1 = 0.25028, loss 2 = 0.22439
val eval at step 12500: map@0.50 = 0.07625 - map@0.75 = 0.00296
  > Step 12501 (epoch 310): loss 1 = 0.22037, loss 2 = 0.20358
  > Step 12751 (epoch 317): loss 1 = 0.19701, loss 2 = 0.21860
val eval at step 13000: map@0.50 = 0.13547 - map@0.75 = 0.03038
  > Step 13001 (epoch 323): loss 1 = 0.22478, loss 2 = 0.19768
  > Step 13251 (epoch 329): loss 1 = 0.20638, loss 2 = 0.22824
val eval at step 13500: map@0.50 = 0.09093 - map@0.75 = 0.00517
  > Step 13501 (epoch 335): loss 1 = 0.25740, loss 2 = 0.23744
  > Step 13751 (epoch 341): loss 1 = 0.17777, loss 2 = 0.20078
val eval at step 14000: map@0.50 = 0.01428 - map@0.75 = 0.00083
  > Step 14001 (epoch 348): loss 1 = 0.19308, loss 2 = 0.25936
  > Step 14251 (epoch 354): loss 1 = 0.21835, loss 2 = 0.18877
val eval at step 14500: map@0.50 = 0.12276 - map@0.75 = 0.00165
  > Step 14501 (epoch 360): loss 1 = 0.16847, loss 2 = 0.14352
  > Step 14751 (epoch 366): loss 1 = 0.16885, loss 2 = 0.15866
val eval at step 15000: map@0.50 = 0.09818 - map@0.75 = 0.01302
  > Step 15001 (epoch 372): loss 1 = 0.12435, loss 2 = 0.17202
  > Step 15251 (epoch 379): loss 1 = 0.18785, loss 2 = 0.15336
val eval at step 15500: map@0.50 = 0.13578 - map@0.75 = 0.01299
  > Step 15501 (epoch 385): loss 1 = 0.18332, loss 2 = 0.13367
  > Step 15751 (epoch 391): loss 1 = 0.16572, loss 2 = 0.16375
val eval at step 16000: map@0.50 = 0.11581 - map@0.75 = 0.00554
  > Step 16001 (epoch 397): loss 1 = 0.12236, loss 2 = 0.21146
  > Step 16251 (epoch 403): loss 1 = 0.14939, loss 2 = 0.20318
val eval at step 16500: map@0.50 = 0.07549 - map@0.75 = 0.01136
  > Step 16501 (epoch 410): loss 1 = 0.17129, loss 2 = 0.18474
  > Step 16751 (epoch 416): loss 1 = 0.17848, loss 2 = 0.14830
val eval at step 17000: map@0.50 = 0.11260 - map@0.75 = 0.02046
  > Step 17001 (epoch 422): loss 1 = 0.17697, loss 2 = 0.21561
  > Step 17251 (epoch 428): loss 1 = 0.22197, loss 2 = 0.14371
val eval at step 17500: map@0.50 = 0.12176 - map@0.75 = 0.01117
  > Step 17501 (epoch 434): loss 1 = 0.23850, loss 2 = 0.21549
  > Step 17751 (epoch 441): loss 1 = 0.18747, loss 2 = 0.16575
val eval at step 18000: map@0.50 = 0.11444 - map@0.75 = 0.00703
  > Step 18001 (epoch 447): loss 1 = 0.12644, loss 2 = 0.17927
  > Step 18251 (epoch 453): loss 1 = 0.18597, loss 2 = 0.18620
val eval at step 18500: map@0.50 = 0.03595 - map@0.75 = 0.00517
  > Step 18501 (epoch 459): loss 1 = 0.25540, loss 2 = 0.25066
  > Step 18751 (epoch 465): loss 1 = 0.23438, loss 2 = 0.15519
val eval at step 19000: map@0.50 = 0.09515 - map@0.75 = 0.01754
  > Step 19001 (epoch 472): loss 1 = 0.15391, loss 2 = 0.16018
  > Step 19251 (epoch 478): loss 1 = 0.15571, loss 2 = 0.13190
val eval at step 19500: map@0.50 = 0.11327 - map@0.75 = 0.01358
  > Step 19501 (epoch 484): loss 1 = 0.20348, loss 2 = 0.18220
  > Step 19751 (epoch 490): loss 1 = 0.17059, loss 2 = 0.14252
val eval at step 20000: map@0.50 = 0.09655 - map@0.75 = 0.00520
  > Step 20001 (epoch 496): loss 1 = 0.11033, loss 2 = 0.12945
  > Step 20251 (epoch 503): loss 1 = 0.20271, loss 2 = 0.13310
val eval at step 20500: map@0.50 = 0.11681 - map@0.75 = 0.02092
  > Step 20501 (epoch 509): loss 1 = 0.20809, loss 2 = 0.17556
  > Step 20751 (epoch 515): loss 1 = 0.25605, loss 2 = 0.12437
val eval at step 21000: map@0.50 = 0.11471 - map@0.75 = 0.02666
  > Step 21001 (epoch 521): loss 1 = 0.14880, loss 2 = 0.14863
  > Step 21251 (epoch 527): loss 1 = 0.13095, loss 2 = 0.14020
val eval at step 21500: map@0.50 = 0.10660 - map@0.75 = 0.01971
  > Step 21501 (epoch 534): loss 1 = 0.12953, loss 2 = 0.16839
  > Step 21751 (epoch 540): loss 1 = 0.19884, loss 2 = 0.16305
val eval at step 22000: map@0.50 = 0.11982 - map@0.75 = 0.01067
  > Step 22001 (epoch 546): loss 1 = 0.13962, loss 2 = 0.15851
  > Step 22251 (epoch 552): loss 1 = 0.13803, loss 2 = 0.10006
val eval at step 22500: map@0.50 = 0.08899 - map@0.75 = 0.01346
  > Step 22501 (epoch 558): loss 1 = 0.17536, loss 2 = 0.15434
  > Step 22751 (epoch 565): loss 1 = 0.15875, loss 2 = 0.16415
val eval at step 23000: map@0.50 = 0.13467 - map@0.75 = 0.01711
  > Step 23001 (epoch 571): loss 1 = 0.17894, loss 2 = 0.11171
  > Step 23251 (epoch 577): loss 1 = 0.12237, loss 2 = 0.14805
val eval at step 23500: map@0.50 = 0.09125 - map@0.75 = 0.01165
  > Step 23501 (epoch 583): loss 1 = 0.17487, loss 2 = 0.19485
  > Step 23751 (epoch 589): loss 1 = 0.17001, loss 2 = 0.11518
val eval at step 24000: map@0.50 = 0.16983 - map@0.75 = 0.02115
  > Step 24001 (epoch 596): loss 1 = 0.10032, loss 2 = 0.16167
test eval at step 24200: map@0.50 = 0.16430 - map@0.75 = 0.04363
