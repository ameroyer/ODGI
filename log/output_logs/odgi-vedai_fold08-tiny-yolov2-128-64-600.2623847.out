============================================================== FOLD 08
Tensorflow version 1.10.1
ODGI - vedai_fold08, Input size 128

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold08
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold08
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold08_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold08_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold08_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold08/tiny-yolov2_odgi_128_64/09-27_14-09

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold08/tiny-yolov2_odgi_128_64/09-27_14-09[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 10.96522, loss 2 = 7.68901
  > Step 251 (epoch 7): loss 1 = 1.03675, loss 2 = 5.98998
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.53871, loss 2 = 0.59199
  > Step 751 (epoch 19): loss 1 = 0.34533, loss 2 = 0.45290
val eval at step 1000: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.35101, loss 2 = 0.35491
  > Step 1251 (epoch 32): loss 1 = 0.25503, loss 2 = 0.46863
val eval at step 1500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 1501 (epoch 38): loss 1 = 0.27549, loss 2 = 0.40492
  > Step 1751 (epoch 44): loss 1 = 0.29075, loss 2 = 0.41527
val eval at step 2000: map@0.50 = 0.00744 - map@0.75 = 0.00000
  > Step 2001 (epoch 50): loss 1 = 0.26189, loss 2 = 0.33796
  > Step 2251 (epoch 56): loss 1 = 0.22590, loss 2 = 0.41128
val eval at step 2500: map@0.50 = 0.00702 - map@0.75 = 0.00207
  > Step 2501 (epoch 63): loss 1 = 0.23391, loss 2 = 0.37503
  > Step 2751 (epoch 69): loss 1 = 0.27983, loss 2 = 0.38599
val eval at step 3000: map@0.50 = 0.01612 - map@0.75 = 0.00083
  > Step 3001 (epoch 75): loss 1 = 0.22406, loss 2 = 0.34000
  > Step 3251 (epoch 81): loss 1 = 0.23460, loss 2 = 0.37633
val eval at step 3500: map@0.50 = 0.02305 - map@0.75 = 0.00124
  > Step 3501 (epoch 87): loss 1 = 0.24640, loss 2 = 0.36313
  > Step 3751 (epoch 94): loss 1 = 0.20777, loss 2 = 0.37687
val eval at step 4000: map@0.50 = 0.04556 - map@0.75 = 0.00165
  > Step 4001 (epoch 100): loss 1 = 0.24012, loss 2 = 0.28021
  > Step 4251 (epoch 106): loss 1 = 0.24157, loss 2 = 0.31052
val eval at step 4500: map@0.50 = 0.07070 - map@0.75 = 0.01466
  > Step 4501 (epoch 112): loss 1 = 0.24381, loss 2 = 0.32504
  > Step 4751 (epoch 118): loss 1 = 0.24567, loss 2 = 0.35994
val eval at step 5000: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 5001 (epoch 124): loss 1 = 0.66218, loss 2 = 0.37942
  > Step 5251 (epoch 131): loss 1 = 0.18474, loss 2 = 0.27081
val eval at step 5500: map@0.50 = 0.05209 - map@0.75 = 0.01061
  > Step 5501 (epoch 137): loss 1 = 0.24815, loss 2 = 0.31715
  > Step 5751 (epoch 143): loss 1 = 0.22125, loss 2 = 0.25066
val eval at step 6000: map@0.50 = 0.04487 - map@0.75 = 0.00046
  > Step 6001 (epoch 149): loss 1 = 0.21744, loss 2 = 0.25942
  > Step 6251 (epoch 155): loss 1 = 0.16214, loss 2 = 0.27713
val eval at step 6500: map@0.50 = 0.04056 - map@0.75 = 0.00579
  > Step 6501 (epoch 162): loss 1 = 0.17763, loss 2 = 0.24170
  > Step 6751 (epoch 168): loss 1 = 0.23912, loss 2 = 0.25232
val eval at step 7000: map@0.50 = 0.01273 - map@0.75 = 0.00165
  > Step 7001 (epoch 174): loss 1 = 0.24875, loss 2 = 0.29261
  > Step 7251 (epoch 180): loss 1 = 0.21144, loss 2 = 0.27521
val eval at step 7500: map@0.50 = 0.03408 - map@0.75 = 0.00083
  > Step 7501 (epoch 186): loss 1 = 0.25806, loss 2 = 0.24408
  > Step 7751 (epoch 193): loss 1 = 0.18083, loss 2 = 0.21225
val eval at step 8000: map@0.50 = 0.04183 - map@0.75 = 0.00620
  > Step 8001 (epoch 199): loss 1 = 0.25800, loss 2 = 0.24582
  > Step 8251 (epoch 205): loss 1 = 0.21613, loss 2 = 0.22845
val eval at step 8500: map@0.50 = 0.04258 - map@0.75 = 0.01240
  > Step 8501 (epoch 211): loss 1 = 0.21965, loss 2 = 0.22792
  > Step 8751 (epoch 217): loss 1 = 0.18661, loss 2 = 0.24974
val eval at step 9000: map@0.50 = 0.11467 - map@0.75 = 0.00441
  > Step 9001 (epoch 224): loss 1 = 0.21657, loss 2 = 0.27899
  > Step 9251 (epoch 230): loss 1 = 0.24008, loss 2 = 0.21512
val eval at step 9500: map@0.50 = 0.08491 - map@0.75 = 0.00551
  > Step 9501 (epoch 236): loss 1 = 0.20199, loss 2 = 0.26371
  > Step 9751 (epoch 242): loss 1 = 0.31594, loss 2 = 0.31498
val eval at step 10000: map@0.50 = 0.03360 - map@0.75 = 0.01519
  > Step 10001 (epoch 248): loss 1 = 0.15705, loss 2 = 0.28625
  > Step 10251 (epoch 255): loss 1 = 0.24972, loss 2 = 0.22032
val eval at step 10500: map@0.50 = 0.08765 - map@0.75 = 0.01302
  > Step 10501 (epoch 261): loss 1 = 0.16723, loss 2 = 0.26242
  > Step 10751 (epoch 267): loss 1 = 0.14440, loss 2 = 0.22093
val eval at step 11000: map@0.50 = 0.05672 - map@0.75 = 0.00000
  > Step 11001 (epoch 273): loss 1 = 0.16657, loss 2 = 0.20448
  > Step 11251 (epoch 279): loss 1 = 0.17930, loss 2 = 0.18878
val eval at step 11500: map@0.50 = 0.08467 - map@0.75 = 0.02107
  > Step 11501 (epoch 286): loss 1 = 0.11522, loss 2 = 0.20426
  > Step 11751 (epoch 292): loss 1 = 0.20941, loss 2 = 0.22205
val eval at step 12000: map@0.50 = 0.10288 - map@0.75 = 0.00551
  > Step 12001 (epoch 298): loss 1 = 0.17521, loss 2 = 0.21204
  > Step 12251 (epoch 304): loss 1 = 0.17125, loss 2 = 0.17646
val eval at step 12500: map@0.50 = 0.09027 - map@0.75 = 0.01240
  > Step 12501 (epoch 310): loss 1 = 0.16196, loss 2 = 0.20776
  > Step 12751 (epoch 317): loss 1 = 0.20341, loss 2 = 0.18831
val eval at step 13000: map@0.50 = 0.07084 - map@0.75 = 0.01102
  > Step 13001 (epoch 323): loss 1 = 0.24056, loss 2 = 0.19307
  > Step 13251 (epoch 329): loss 1 = 0.29229, loss 2 = 0.24015
val eval at step 13500: map@0.50 = 0.08171 - map@0.75 = 0.00792
  > Step 13501 (epoch 335): loss 1 = 0.14442, loss 2 = 0.20382
  > Step 13751 (epoch 341): loss 1 = 0.12434, loss 2 = 0.18342
val eval at step 14000: map@0.50 = 0.10738 - map@0.75 = 0.01254
  > Step 14001 (epoch 348): loss 1 = 0.19643, loss 2 = 0.18555
  > Step 14251 (epoch 354): loss 1 = 0.18935, loss 2 = 0.19056
val eval at step 14500: map@0.50 = 0.12856 - map@0.75 = 0.00551
  > Step 14501 (epoch 360): loss 1 = 0.17823, loss 2 = 0.13477
  > Step 14751 (epoch 366): loss 1 = 0.13679, loss 2 = 0.17893
val eval at step 15000: map@0.50 = 0.11014 - map@0.75 = 0.03409
  > Step 15001 (epoch 372): loss 1 = 0.18505, loss 2 = 0.17012
  > Step 15251 (epoch 379): loss 1 = 0.21570, loss 2 = 0.15508
val eval at step 15500: map@0.50 = 0.13050 - map@0.75 = 0.01653
  > Step 15501 (epoch 385): loss 1 = 0.18366, loss 2 = 0.22501
  > Step 15751 (epoch 391): loss 1 = 0.17785, loss 2 = 0.16416
val eval at step 16000: map@0.50 = 0.08821 - map@0.75 = 0.01309
  > Step 16001 (epoch 397): loss 1 = 0.19287, loss 2 = 0.15854
  > Step 16251 (epoch 403): loss 1 = 0.16926, loss 2 = 0.17874
val eval at step 16500: map@0.50 = 0.09115 - map@0.75 = 0.02169
  > Step 16501 (epoch 410): loss 1 = 0.15840, loss 2 = 0.18860
  > Step 16751 (epoch 416): loss 1 = 0.15614, loss 2 = 0.19563
val eval at step 17000: map@0.50 = 0.11933 - map@0.75 = 0.01640
  > Step 17001 (epoch 422): loss 1 = 0.23136, loss 2 = 0.20202
  > Step 17251 (epoch 428): loss 1 = 0.20615, loss 2 = 0.17065
val eval at step 17500: map@0.50 = 0.05943 - map@0.75 = 0.01997
  > Step 17501 (epoch 434): loss 1 = 0.23859, loss 2 = 0.15202
  > Step 17751 (epoch 441): loss 1 = 0.20013, loss 2 = 0.19027
val eval at step 18000: map@0.50 = 0.10659 - map@0.75 = 0.00598
  > Step 18001 (epoch 447): loss 1 = 0.13911, loss 2 = 0.19447
  > Step 18251 (epoch 453): loss 1 = 0.22691, loss 2 = 0.18248
val eval at step 18500: map@0.50 = 0.08735 - map@0.75 = 0.01860
  > Step 18501 (epoch 459): loss 1 = 0.20933, loss 2 = 0.14628
  > Step 18751 (epoch 465): loss 1 = 0.15115, loss 2 = 0.15305
val eval at step 19000: map@0.50 = 0.09486 - map@0.75 = 0.00505
  > Step 19001 (epoch 472): loss 1 = 0.14430, loss 2 = 0.15270
  > Step 19251 (epoch 478): loss 1 = 0.14675, loss 2 = 0.15112
val eval at step 19500: map@0.50 = 0.10421 - map@0.75 = 0.01584
  > Step 19501 (epoch 484): loss 1 = 0.18054, loss 2 = 0.12394
  > Step 19751 (epoch 490): loss 1 = 0.16822, loss 2 = 0.18059
val eval at step 20000: map@0.50 = 0.09239 - map@0.75 = 0.01240
  > Step 20001 (epoch 496): loss 1 = 0.17136, loss 2 = 0.12940
  > Step 20251 (epoch 503): loss 1 = 0.19448, loss 2 = 0.14244
val eval at step 20500: map@0.50 = 0.09514 - map@0.75 = 0.01460
  > Step 20501 (epoch 509): loss 1 = 0.16790, loss 2 = 0.15329
  > Step 20751 (epoch 515): loss 1 = 0.16456, loss 2 = 0.15327
val eval at step 21000: map@0.50 = 0.11140 - map@0.75 = 0.01033
  > Step 21001 (epoch 521): loss 1 = 0.14541, loss 2 = 0.14145
  > Step 21251 (epoch 527): loss 1 = 0.21416, loss 2 = 0.14910
val eval at step 21500: map@0.50 = 0.09810 - map@0.75 = 0.01882
  > Step 21501 (epoch 534): loss 1 = 0.16185, loss 2 = 0.10756
  > Step 21751 (epoch 540): loss 1 = 0.18920, loss 2 = 0.11271
val eval at step 22000: map@0.50 = 0.09637 - map@0.75 = 0.01612
  > Step 22001 (epoch 546): loss 1 = 0.20852, loss 2 = 0.15252
  > Step 22251 (epoch 552): loss 1 = 0.18236, loss 2 = 0.11838
val eval at step 22500: map@0.50 = 0.09399 - map@0.75 = 0.00358
  > Step 22501 (epoch 558): loss 1 = 0.08169, loss 2 = 0.15968
  > Step 22751 (epoch 565): loss 1 = 0.12226, loss 2 = 0.13641
val eval at step 23000: map@0.50 = 0.04946 - map@0.75 = 0.00826
  > Step 23001 (epoch 571): loss 1 = 0.19718, loss 2 = 0.16610
  > Step 23251 (epoch 577): loss 1 = 0.15614, loss 2 = 0.22116
val eval at step 23500: map@0.50 = 0.11743 - map@0.75 = 0.01033
  > Step 23501 (epoch 583): loss 1 = 0.12152, loss 2 = 0.08650
  > Step 23751 (epoch 589): loss 1 = 0.14509, loss 2 = 0.15802
val eval at step 24000: map@0.50 = 0.10925 - map@0.75 = 0.00551
  > Step 24001 (epoch 596): loss 1 = 0.13626, loss 2 = 0.13962
test eval at step 24200: map@0.50 = 0.11968 - map@0.75 = 0.02599
