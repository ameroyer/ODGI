============================================================== FOLD 06
Tensorflow version 1.10.1
ODGI - vedai_fold06, Input size 128

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold06
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold06
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold06_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold06_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold06_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold06/tiny-yolov2_odgi_128_64/09-27_10-44

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold06/tiny-yolov2_odgi_128_64/09-27_10-44[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 10.24493, loss 2 = 6.72847
  > Step 251 (epoch 7): loss 1 = 0.87014, loss 2 = 4.92362
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.60153, loss 2 = 0.44392
  > Step 751 (epoch 19): loss 1 = 0.42893, loss 2 = 0.36590
val eval at step 1000: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.29811, loss 2 = 0.38164
  > Step 1251 (epoch 32): loss 1 = 0.22715, loss 2 = 0.39412
val eval at step 1500: map@0.50 = 0.00790 - map@0.75 = 0.00000
  > Step 1501 (epoch 38): loss 1 = 0.27487, loss 2 = 0.45183
  > Step 1751 (epoch 44): loss 1 = 0.16392, loss 2 = 0.42728
val eval at step 2000: map@0.50 = 0.00510 - map@0.75 = 0.00000
  > Step 2001 (epoch 50): loss 1 = 0.22761, loss 2 = 0.38486
  > Step 2251 (epoch 56): loss 1 = 0.34578, loss 2 = 0.41903
val eval at step 2500: map@0.50 = 0.02642 - map@0.75 = 0.00000
  > Step 2501 (epoch 63): loss 1 = 0.28131, loss 2 = 0.32470
  > Step 2751 (epoch 69): loss 1 = 0.20398, loss 2 = 0.36125
val eval at step 3000: map@0.50 = 0.03133 - map@0.75 = 0.00275
  > Step 3001 (epoch 75): loss 1 = 0.22557, loss 2 = 0.35176
  > Step 3251 (epoch 81): loss 1 = 0.20236, loss 2 = 0.34856
val eval at step 3500: map@0.50 = 0.02129 - map@0.75 = 0.00000
  > Step 3501 (epoch 87): loss 1 = 0.26242, loss 2 = 0.27134
  > Step 3751 (epoch 94): loss 1 = 0.33049, loss 2 = 0.36286
val eval at step 4000: map@0.50 = 0.03267 - map@0.75 = 0.00000
  > Step 4001 (epoch 100): loss 1 = 0.25412, loss 2 = 0.32191
  > Step 4251 (epoch 106): loss 1 = 0.16389, loss 2 = 0.30061
val eval at step 4500: map@0.50 = 0.04504 - map@0.75 = 0.01653
  > Step 4501 (epoch 112): loss 1 = 0.19229, loss 2 = 0.32510
  > Step 4751 (epoch 118): loss 1 = 0.22902, loss 2 = 0.29253
val eval at step 5000: map@0.50 = 0.07530 - map@0.75 = 0.00344
  > Step 5001 (epoch 124): loss 1 = 0.19044, loss 2 = 0.33527
  > Step 5251 (epoch 131): loss 1 = 0.18209, loss 2 = 0.32628
val eval at step 5500: map@0.50 = 0.01446 - map@0.75 = 0.00000
  > Step 5501 (epoch 137): loss 1 = 0.18504, loss 2 = 0.30889
  > Step 5751 (epoch 143): loss 1 = 0.18939, loss 2 = 0.28113
val eval at step 6000: map@0.50 = 0.06198 - map@0.75 = 0.00930
  > Step 6001 (epoch 149): loss 1 = 0.23790, loss 2 = 0.28813
  > Step 6251 (epoch 155): loss 1 = 0.24341, loss 2 = 0.28307
val eval at step 6500: map@0.50 = 0.07071 - map@0.75 = 0.01143
  > Step 6501 (epoch 162): loss 1 = 0.22907, loss 2 = 0.29919
  > Step 6751 (epoch 168): loss 1 = 0.21489, loss 2 = 0.29781
val eval at step 7000: map@0.50 = 0.10556 - map@0.75 = 0.01287
  > Step 7001 (epoch 174): loss 1 = 0.22977, loss 2 = 0.21096
  > Step 7251 (epoch 180): loss 1 = 0.17318, loss 2 = 0.26716
val eval at step 7500: map@0.50 = 0.05328 - map@0.75 = 0.00826
  > Step 7501 (epoch 186): loss 1 = 0.17298, loss 2 = 0.28031
  > Step 7751 (epoch 193): loss 1 = 0.21638, loss 2 = 0.25105
val eval at step 8000: map@0.50 = 0.00826 - map@0.75 = 0.00000
  > Step 8001 (epoch 199): loss 1 = 0.32863, loss 2 = 0.28624
  > Step 8251 (epoch 205): loss 1 = 0.25972, loss 2 = 0.22922
val eval at step 8500: map@0.50 = 0.06962 - map@0.75 = 0.00098
  > Step 8501 (epoch 211): loss 1 = 0.21536, loss 2 = 0.26574
  > Step 8751 (epoch 217): loss 1 = 0.23961, loss 2 = 0.17832
val eval at step 9000: map@0.50 = 0.08899 - map@0.75 = 0.00954
  > Step 9001 (epoch 224): loss 1 = 0.22583, loss 2 = 0.23580
  > Step 9251 (epoch 230): loss 1 = 0.23680, loss 2 = 0.23878
val eval at step 9500: map@0.50 = 0.09934 - map@0.75 = 0.00708
  > Step 9501 (epoch 236): loss 1 = 0.17009, loss 2 = 0.22206
  > Step 9751 (epoch 242): loss 1 = 0.18655, loss 2 = 0.25614
val eval at step 10000: map@0.50 = 0.08816 - map@0.75 = 0.00885
  > Step 10001 (epoch 248): loss 1 = 0.16365, loss 2 = 0.18485
  > Step 10251 (epoch 255): loss 1 = 0.18976, loss 2 = 0.21287
val eval at step 10500: map@0.50 = 0.10882 - map@0.75 = 0.01381
  > Step 10501 (epoch 261): loss 1 = 0.16331, loss 2 = 0.23906
  > Step 10751 (epoch 267): loss 1 = 0.27378, loss 2 = 0.28038
val eval at step 11000: map@0.50 = 0.06745 - map@0.75 = 0.00964
  > Step 11001 (epoch 273): loss 1 = 0.15541, loss 2 = 0.23832
  > Step 11251 (epoch 279): loss 1 = 0.27611, loss 2 = 0.22665
val eval at step 11500: map@0.50 = 0.12816 - map@0.75 = 0.01814
  > Step 11501 (epoch 286): loss 1 = 0.21731, loss 2 = 0.18128
  > Step 11751 (epoch 292): loss 1 = 0.24861, loss 2 = 0.17336
val eval at step 12000: map@0.50 = 0.11639 - map@0.75 = 0.01879
  > Step 12001 (epoch 298): loss 1 = 0.20054, loss 2 = 0.21780
  > Step 12251 (epoch 304): loss 1 = 0.15395, loss 2 = 0.19624
val eval at step 12500: map@0.50 = 0.11930 - map@0.75 = 0.02388
  > Step 12501 (epoch 310): loss 1 = 0.16610, loss 2 = 0.16128
  > Step 12751 (epoch 317): loss 1 = 0.16436, loss 2 = 0.19251
val eval at step 13000: map@0.50 = 0.10233 - map@0.75 = 0.01549
  > Step 13001 (epoch 323): loss 1 = 0.16554, loss 2 = 0.19245
  > Step 13251 (epoch 329): loss 1 = 0.17593, loss 2 = 0.16831
val eval at step 13500: map@0.50 = 0.07377 - map@0.75 = 0.00193
  > Step 13501 (epoch 335): loss 1 = 0.15446, loss 2 = 0.19806
  > Step 13751 (epoch 341): loss 1 = 0.16499, loss 2 = 0.19994
val eval at step 14000: map@0.50 = 0.10052 - map@0.75 = 0.01664
  > Step 14001 (epoch 348): loss 1 = 0.20841, loss 2 = 0.19215
  > Step 14251 (epoch 354): loss 1 = 0.23518, loss 2 = 0.19813
val eval at step 14500: map@0.50 = 0.11428 - map@0.75 = 0.01019
  > Step 14501 (epoch 360): loss 1 = 0.14867, loss 2 = 0.20087
  > Step 14751 (epoch 366): loss 1 = 0.18723, loss 2 = 0.19635
val eval at step 15000: map@0.50 = 0.07432 - map@0.75 = 0.00052
  > Step 15001 (epoch 372): loss 1 = 0.15876, loss 2 = 0.20032
  > Step 15251 (epoch 379): loss 1 = 0.19861, loss 2 = 0.15278
val eval at step 15500: map@0.50 = 0.10944 - map@0.75 = 0.01770
  > Step 15501 (epoch 385): loss 1 = 0.22676, loss 2 = 0.16846
  > Step 15751 (epoch 391): loss 1 = 0.15157, loss 2 = 0.19071
val eval at step 16000: map@0.50 = 0.11867 - map@0.75 = 0.01305
  > Step 16001 (epoch 397): loss 1 = 0.16925, loss 2 = 0.17198
  > Step 16251 (epoch 403): loss 1 = 0.13844, loss 2 = 0.13920
val eval at step 16500: map@0.50 = 0.06712 - map@0.75 = 0.02323
  > Step 16501 (epoch 410): loss 1 = 0.21741, loss 2 = 0.14974
  > Step 16751 (epoch 416): loss 1 = 0.11044, loss 2 = 0.16677
val eval at step 17000: map@0.50 = 0.09092 - map@0.75 = 0.01717
  > Step 17001 (epoch 422): loss 1 = 0.16061, loss 2 = 0.15229
  > Step 17251 (epoch 428): loss 1 = 0.14451, loss 2 = 0.15699
val eval at step 17500: map@0.50 = 0.11059 - map@0.75 = 0.02101
  > Step 17501 (epoch 434): loss 1 = 0.26172, loss 2 = 0.16181
  > Step 17751 (epoch 441): loss 1 = 0.29888, loss 2 = 0.15755
val eval at step 18000: map@0.50 = 0.12805 - map@0.75 = 0.03679
  > Step 18001 (epoch 447): loss 1 = 0.17166, loss 2 = 0.18301
  > Step 18251 (epoch 453): loss 1 = 0.25065, loss 2 = 0.18180
val eval at step 18500: map@0.50 = 0.10722 - map@0.75 = 0.01639
  > Step 18501 (epoch 459): loss 1 = 0.16482, loss 2 = 0.17542
  > Step 18751 (epoch 465): loss 1 = 0.14317, loss 2 = 0.16485
val eval at step 19000: map@0.50 = 0.11043 - map@0.75 = 0.02401
  > Step 19001 (epoch 472): loss 1 = 0.14014, loss 2 = 0.16144
  > Step 19251 (epoch 478): loss 1 = 0.17977, loss 2 = 0.16298
val eval at step 19500: map@0.50 = 0.12331 - map@0.75 = 0.03458
  > Step 19501 (epoch 484): loss 1 = 0.15873, loss 2 = 0.16769
  > Step 19751 (epoch 490): loss 1 = 0.14530, loss 2 = 0.17722
val eval at step 20000: map@0.50 = 0.07676 - map@0.75 = 0.01309
  > Step 20001 (epoch 496): loss 1 = 0.33190, loss 2 = 0.24717
  > Step 20251 (epoch 503): loss 1 = 0.15820, loss 2 = 0.17565
val eval at step 20500: map@0.50 = 0.10850 - map@0.75 = 0.01609
  > Step 20501 (epoch 509): loss 1 = 0.12609, loss 2 = 0.14847
  > Step 20751 (epoch 515): loss 1 = 0.16612, loss 2 = 0.12728
val eval at step 21000: map@0.50 = 0.15254 - map@0.75 = 0.02596
  > Step 21001 (epoch 521): loss 1 = 0.19213, loss 2 = 0.20853
  > Step 21251 (epoch 527): loss 1 = 0.18188, loss 2 = 0.14937
val eval at step 21500: map@0.50 = 0.15292 - map@0.75 = 0.02448
  > Step 21501 (epoch 534): loss 1 = 0.13136, loss 2 = 0.15232
  > Step 21751 (epoch 540): loss 1 = 0.12760, loss 2 = 0.14499
val eval at step 22000: map@0.50 = 0.10769 - map@0.75 = 0.01659
  > Step 22001 (epoch 546): loss 1 = 0.13280, loss 2 = 0.13349
  > Step 22251 (epoch 552): loss 1 = 0.18379, loss 2 = 0.11515
val eval at step 22500: map@0.50 = 0.11931 - map@0.75 = 0.02479
  > Step 22501 (epoch 558): loss 1 = 0.12910, loss 2 = 0.17149
  > Step 22751 (epoch 565): loss 1 = 0.19805, loss 2 = 0.11782
val eval at step 23000: map@0.50 = 0.12327 - map@0.75 = 0.02763
  > Step 23001 (epoch 571): loss 1 = 0.18183, loss 2 = 0.10634
  > Step 23251 (epoch 577): loss 1 = 0.12136, loss 2 = 0.18136
val eval at step 23500: map@0.50 = 0.12840 - map@0.75 = 0.02335
  > Step 23501 (epoch 583): loss 1 = 0.16472, loss 2 = 0.15064
  > Step 23751 (epoch 589): loss 1 = 0.17063, loss 2 = 0.12743
val eval at step 24000: map@0.50 = 0.09233 - map@0.75 = 0.03719
  > Step 24001 (epoch 596): loss 1 = 0.20407, loss 2 = 0.13866
test eval at step 24200: map@0.50 = 0.14865 - map@0.75 = 0.02059
