============================================================== FOLD 01
Tensorflow version 1.10.1
ODGI - vedai_fold01, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold01
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold01
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold01_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold01_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold01_val
   using grid size [8 8]
   using grid size [4 4]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 4, 4, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold01/tiny-yolov2_odgi_256_128/09-28_16-43

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold01/tiny-yolov2_odgi_256_128/09-28_16-43[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 7.98355, loss 2 = 7.98915
  > Step 251 (epoch 7): loss 1 = 0.74502, loss 2 = 1.03924
val eval at step 500: map@0.50 = 0.00290 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.45642, loss 2 = 0.62555
  > Step 751 (epoch 19): loss 1 = 0.39148, loss 2 = 0.42470
val eval at step 1000: map@0.50 = 0.07672 - map@0.75 = 0.00199
  > Step 1001 (epoch 25): loss 1 = 0.35179, loss 2 = 0.52096
  > Step 1251 (epoch 32): loss 1 = 0.27527, loss 2 = 0.49453
val eval at step 1500: map@0.50 = 0.20763 - map@0.75 = 0.02546
  > Step 1501 (epoch 38): loss 1 = 0.34493, loss 2 = 0.40067
  > Step 1751 (epoch 44): loss 1 = 0.28624, loss 2 = 0.44557
val eval at step 2000: map@0.50 = 0.18975 - map@0.75 = 0.02491
  > Step 2001 (epoch 50): loss 1 = 0.29850, loss 2 = 0.45450
  > Step 2251 (epoch 56): loss 1 = 0.27017, loss 2 = 0.46262
val eval at step 2500: map@0.50 = 0.25196 - map@0.75 = 0.04266
  > Step 2501 (epoch 63): loss 1 = 0.17606, loss 2 = 0.33882
  > Step 2751 (epoch 69): loss 1 = 0.22560, loss 2 = 0.36337
val eval at step 3000: map@0.50 = 0.19741 - map@0.75 = 0.03307
  > Step 3001 (epoch 75): loss 1 = 0.25226, loss 2 = 0.43596
  > Step 3251 (epoch 81): loss 1 = 0.20806, loss 2 = 0.33262
val eval at step 3500: map@0.50 = 0.27538 - map@0.75 = 0.05373
  > Step 3501 (epoch 87): loss 1 = 0.22469, loss 2 = 0.37251
  > Step 3751 (epoch 94): loss 1 = 0.21888, loss 2 = 0.32723
val eval at step 4000: map@0.50 = 0.25695 - map@0.75 = 0.01782
  > Step 4001 (epoch 100): loss 1 = 0.16959, loss 2 = 0.34809
  > Step 4251 (epoch 106): loss 1 = 0.16807, loss 2 = 0.39905
val eval at step 4500: map@0.50 = 0.33832 - map@0.75 = 0.04563
  > Step 4501 (epoch 112): loss 1 = 0.35391, loss 2 = 0.35456
  > Step 4751 (epoch 118): loss 1 = 0.25241, loss 2 = 0.35278
val eval at step 5000: map@0.50 = 0.30904 - map@0.75 = 0.03595
  > Step 5001 (epoch 124): loss 1 = 0.21291, loss 2 = 0.32605
  > Step 5251 (epoch 131): loss 1 = 0.18595, loss 2 = 0.29471
val eval at step 5500: map@0.50 = 0.42518 - map@0.75 = 0.10508
  > Step 5501 (epoch 137): loss 1 = 0.16802, loss 2 = 0.27643
  > Step 5751 (epoch 143): loss 1 = 0.14063, loss 2 = 0.31177
val eval at step 6000: map@0.50 = 0.42917 - map@0.75 = 0.07472
  > Step 6001 (epoch 149): loss 1 = 0.16415, loss 2 = 0.24783
  > Step 6251 (epoch 155): loss 1 = 0.18143, loss 2 = 0.24683
val eval at step 6500: map@0.50 = 0.40084 - map@0.75 = 0.11701
  > Step 6501 (epoch 162): loss 1 = 0.20318, loss 2 = 0.24454
  > Step 6751 (epoch 168): loss 1 = 0.15241, loss 2 = 0.30244
val eval at step 7000: map@0.50 = 0.43148 - map@0.75 = 0.13055
  > Step 7001 (epoch 174): loss 1 = 0.16572, loss 2 = 0.23085
  > Step 7251 (epoch 180): loss 1 = 0.23647, loss 2 = 0.28614
val eval at step 7500: map@0.50 = 0.32827 - map@0.75 = 0.04663
  > Step 7501 (epoch 186): loss 1 = 0.21478, loss 2 = 0.24353
  > Step 7751 (epoch 193): loss 1 = 0.17163, loss 2 = 0.21657
val eval at step 8000: map@0.50 = 0.46563 - map@0.75 = 0.12932
  > Step 8001 (epoch 199): loss 1 = 0.11210, loss 2 = 0.25980
  > Step 8251 (epoch 205): loss 1 = 0.15610, loss 2 = 0.25316
val eval at step 8500: map@0.50 = 0.50476 - map@0.75 = 0.16805
  > Step 8501 (epoch 211): loss 1 = 0.14043, loss 2 = 0.26294
  > Step 8751 (epoch 217): loss 1 = 0.11917, loss 2 = 0.26361
val eval at step 9000: map@0.50 = 0.49493 - map@0.75 = 0.16922
  > Step 9001 (epoch 224): loss 1 = 0.14093, loss 2 = 0.29715
  > Step 9251 (epoch 230): loss 1 = 0.20242, loss 2 = 0.18694
val eval at step 9500: map@0.50 = 0.53328 - map@0.75 = 0.16623
  > Step 9501 (epoch 236): loss 1 = 0.11882, loss 2 = 0.21030
  > Step 9751 (epoch 242): loss 1 = 0.14543, loss 2 = 0.25475
val eval at step 10000: map@0.50 = 0.53477 - map@0.75 = 0.21086
  > Step 10001 (epoch 248): loss 1 = 0.12843, loss 2 = 0.23378
  > Step 10251 (epoch 255): loss 1 = 0.15472, loss 2 = 0.23400
val eval at step 10500: map@0.50 = 0.43976 - map@0.75 = 0.16427
  > Step 10501 (epoch 261): loss 1 = 0.19666, loss 2 = 0.25209
  > Step 10751 (epoch 267): loss 1 = 0.14999, loss 2 = 0.18695
val eval at step 11000: map@0.50 = 0.48966 - map@0.75 = 0.17091
  > Step 11001 (epoch 273): loss 1 = 0.18480, loss 2 = 0.20725
  > Step 11251 (epoch 279): loss 1 = 0.09561, loss 2 = 0.18503
val eval at step 11500: map@0.50 = 0.51643 - map@0.75 = 0.21236
  > Step 11501 (epoch 286): loss 1 = 0.09408, loss 2 = 0.17986
  > Step 11751 (epoch 292): loss 1 = 0.10513, loss 2 = 0.21859
val eval at step 12000: map@0.50 = 0.51780 - map@0.75 = 0.18691
  > Step 12001 (epoch 298): loss 1 = 0.12485, loss 2 = 0.21644
  > Step 12251 (epoch 304): loss 1 = 0.09732, loss 2 = 0.20203
val eval at step 12500: map@0.50 = 0.49817 - map@0.75 = 0.15856
  > Step 12501 (epoch 310): loss 1 = 0.09769, loss 2 = 0.19404
  > Step 12751 (epoch 317): loss 1 = 0.09944, loss 2 = 0.19192
val eval at step 13000: map@0.50 = 0.51263 - map@0.75 = 0.17457
  > Step 13001 (epoch 323): loss 1 = 0.15286, loss 2 = 0.22703
  > Step 13251 (epoch 329): loss 1 = 0.11655, loss 2 = 0.19796
val eval at step 13500: map@0.50 = 0.50129 - map@0.75 = 0.19774
  > Step 13501 (epoch 335): loss 1 = 0.10904, loss 2 = 0.24026
  > Step 13751 (epoch 341): loss 1 = 0.08378, loss 2 = 0.22767
val eval at step 14000: map@0.50 = 0.54299 - map@0.75 = 0.25527
  > Step 14001 (epoch 348): loss 1 = 0.08643, loss 2 = 0.18636
  > Step 14251 (epoch 354): loss 1 = 0.15014, loss 2 = 0.16323
val eval at step 14500: map@0.50 = 0.44765 - map@0.75 = 0.07099
  > Step 14501 (epoch 360): loss 1 = 0.10573, loss 2 = 0.23128
  > Step 14751 (epoch 366): loss 1 = 0.08923, loss 2 = 0.19925
val eval at step 15000: map@0.50 = 0.49694 - map@0.75 = 0.17878
  > Step 15001 (epoch 372): loss 1 = 0.14678, loss 2 = 0.16767
  > Step 15251 (epoch 379): loss 1 = 0.08932, loss 2 = 0.17031
val eval at step 15500: map@0.50 = 0.44562 - map@0.75 = 0.10786
  > Step 15501 (epoch 385): loss 1 = 0.08794, loss 2 = 0.25491
  > Step 15751 (epoch 391): loss 1 = 0.19567, loss 2 = 0.16332
val eval at step 16000: map@0.50 = 0.49030 - map@0.75 = 0.17982
  > Step 16001 (epoch 397): loss 1 = 0.09825, loss 2 = 0.20539
  > Step 16251 (epoch 403): loss 1 = 0.07784, loss 2 = 0.21332
val eval at step 16500: map@0.50 = 0.49591 - map@0.75 = 0.17580
  > Step 16501 (epoch 410): loss 1 = 0.08847, loss 2 = 0.16124
  > Step 16751 (epoch 416): loss 1 = 0.06392, loss 2 = 0.13082
val eval at step 17000: map@0.50 = 0.50282 - map@0.75 = 0.20243
  > Step 17001 (epoch 422): loss 1 = 0.09113, loss 2 = 0.16175
  > Step 17251 (epoch 428): loss 1 = 0.08524, loss 2 = 0.18340
val eval at step 17500: map@0.50 = 0.50075 - map@0.75 = 0.20958
  > Step 17501 (epoch 434): loss 1 = 0.06444, loss 2 = 0.17942
  > Step 17751 (epoch 441): loss 1 = 0.10944, loss 2 = 0.17467
val eval at step 18000: map@0.50 = 0.49117 - map@0.75 = 0.17615
  > Step 18001 (epoch 447): loss 1 = 0.06390, loss 2 = 0.18335
  > Step 18251 (epoch 453): loss 1 = 0.09946, loss 2 = 0.17206
val eval at step 18500: map@0.50 = 0.50692 - map@0.75 = 0.18405
  > Step 18501 (epoch 459): loss 1 = 0.06593, loss 2 = 0.19051
  > Step 18751 (epoch 465): loss 1 = 0.09424, loss 2 = 0.16604
val eval at step 19000: map@0.50 = 0.52807 - map@0.75 = 0.18827
  > Step 19001 (epoch 472): loss 1 = 0.11351, loss 2 = 0.21500
  > Step 19251 (epoch 478): loss 1 = 0.07319, loss 2 = 0.14442
val eval at step 19500: map@0.50 = 0.51567 - map@0.75 = 0.16985
  > Step 19501 (epoch 484): loss 1 = 0.08932, loss 2 = 0.17296
  > Step 19751 (epoch 490): loss 1 = 0.18335, loss 2 = 0.18365
val eval at step 20000: map@0.50 = 0.52514 - map@0.75 = 0.21872
  > Step 20001 (epoch 496): loss 1 = 0.10972, loss 2 = 0.17801
  > Step 20251 (epoch 503): loss 1 = 0.09963, loss 2 = 0.14990
val eval at step 20500: map@0.50 = 0.51943 - map@0.75 = 0.25929
  > Step 20501 (epoch 509): loss 1 = 0.06981, loss 2 = 0.15787
  > Step 20751 (epoch 515): loss 1 = 0.09115, loss 2 = 0.21847
val eval at step 21000: map@0.50 = 0.48644 - map@0.75 = 0.16714
  > Step 21001 (epoch 521): loss 1 = 0.09621, loss 2 = 0.13672
  > Step 21251 (epoch 527): loss 1 = 0.08606, loss 2 = 0.14004
val eval at step 21500: map@0.50 = 0.52069 - map@0.75 = 0.21982
  > Step 21501 (epoch 534): loss 1 = 0.05670, loss 2 = 0.19004
  > Step 21751 (epoch 540): loss 1 = 0.06555, loss 2 = 0.14676
val eval at step 22000: map@0.50 = 0.48246 - map@0.75 = 0.20641
  > Step 22001 (epoch 546): loss 1 = 0.06682, loss 2 = 0.16376
  > Step 22251 (epoch 552): loss 1 = 0.06057, loss 2 = 0.18224
val eval at step 22500: map@0.50 = 0.49883 - map@0.75 = 0.21967
  > Step 22501 (epoch 558): loss 1 = 0.10079, loss 2 = 0.17653
  > Step 22751 (epoch 565): loss 1 = 0.04335, loss 2 = 0.20089
val eval at step 23000: map@0.50 = 0.48559 - map@0.75 = 0.18275
  > Step 23001 (epoch 571): loss 1 = 0.07066, loss 2 = 0.19810
  > Step 23251 (epoch 577): loss 1 = 0.06313, loss 2 = 0.16050
val eval at step 23500: map@0.50 = 0.48297 - map@0.75 = 0.22559
  > Step 23501 (epoch 583): loss 1 = 0.03861, loss 2 = 0.15564
  > Step 23751 (epoch 589): loss 1 = 0.06428, loss 2 = 0.17900
val eval at step 24000: map@0.50 = 0.50691 - map@0.75 = 0.22897
  > Step 24001 (epoch 596): loss 1 = 0.08184, loss 2 = 0.15528
test eval at step 24200: map@0.50 = 0.53122 - map@0.75 = 0.25522
