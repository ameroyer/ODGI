============================================================== FOLD 07
Tensorflow version 1.10.1
ODGI - vedai_fold07, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold07
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold07
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold07_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold07_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold07_val
   using grid size [8 8]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.97 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold07/tiny-yolov2_odgi_256_64/10-05_14-32

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold07/tiny-yolov2_odgi_256_64/10-05_14-32[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 8.50150, loss 2 = 19.87698
  > Step 251 (epoch 7): loss 1 = 0.78262, loss 2 = 0.48288
val eval at step 500: map@0.50 = 0.00718 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.42975, loss 2 = 0.42109
  > Step 751 (epoch 19): loss 1 = 0.32687, loss 2 = 0.41266
val eval at step 1000: map@0.50 = 0.03841 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.25409, loss 2 = 0.34066
  > Step 1251 (epoch 32): loss 1 = 0.28054, loss 2 = 0.36527
val eval at step 1500: map@0.50 = 0.07402 - map@0.75 = 0.01212
  > Step 1501 (epoch 38): loss 1 = 0.23506, loss 2 = 0.38651
  > Step 1751 (epoch 44): loss 1 = 0.22455, loss 2 = 0.32668
val eval at step 2000: map@0.50 = 0.15200 - map@0.75 = 0.00445
  > Step 2001 (epoch 50): loss 1 = 0.23777, loss 2 = 0.29742
  > Step 2251 (epoch 56): loss 1 = 0.24415, loss 2 = 0.29533
val eval at step 2500: map@0.50 = 0.19142 - map@0.75 = 0.03329
  > Step 2501 (epoch 63): loss 1 = 0.22397, loss 2 = 0.28233
  > Step 2751 (epoch 69): loss 1 = 0.18964, loss 2 = 0.34086
val eval at step 3000: map@0.50 = 0.03609 - map@0.75 = 0.00895
  > Step 3001 (epoch 75): loss 1 = 0.53160, loss 2 = 0.37312
  > Step 3251 (epoch 81): loss 1 = 0.25699, loss 2 = 0.39287
val eval at step 3500: map@0.50 = 0.22417 - map@0.75 = 0.02589
  > Step 3501 (epoch 87): loss 1 = 0.21255, loss 2 = 0.27137
  > Step 3751 (epoch 94): loss 1 = 0.20190, loss 2 = 0.25155
val eval at step 4000: map@0.50 = 0.30945 - map@0.75 = 0.05224
  > Step 4001 (epoch 100): loss 1 = 0.18422, loss 2 = 0.25887
  > Step 4251 (epoch 106): loss 1 = 0.16685, loss 2 = 0.27084
val eval at step 4500: map@0.50 = 0.26885 - map@0.75 = 0.06437
  > Step 4501 (epoch 112): loss 1 = 0.20533, loss 2 = 0.21967
  > Step 4751 (epoch 118): loss 1 = 0.16973, loss 2 = 0.26594
val eval at step 5000: map@0.50 = 0.29288 - map@0.75 = 0.06277
  > Step 5001 (epoch 124): loss 1 = 0.24970, loss 2 = 0.27174
  > Step 5251 (epoch 131): loss 1 = 0.26392, loss 2 = 0.25062
val eval at step 5500: map@0.50 = 0.29828 - map@0.75 = 0.04453
  > Step 5501 (epoch 137): loss 1 = 0.24544, loss 2 = 0.30643
  > Step 5751 (epoch 143): loss 1 = 0.19014, loss 2 = 0.21895
val eval at step 6000: map@0.50 = 0.33981 - map@0.75 = 0.10635
  > Step 6001 (epoch 149): loss 1 = 0.22098, loss 2 = 0.20237
  > Step 6251 (epoch 155): loss 1 = 0.14960, loss 2 = 0.20244
val eval at step 6500: map@0.50 = 0.31364 - map@0.75 = 0.07809
  > Step 6501 (epoch 162): loss 1 = 0.11960, loss 2 = 0.21942
  > Step 6751 (epoch 168): loss 1 = 0.15357, loss 2 = 0.18891
val eval at step 7000: map@0.50 = 0.36053 - map@0.75 = 0.07316
  > Step 7001 (epoch 174): loss 1 = 0.17187, loss 2 = 0.18673
  > Step 7251 (epoch 180): loss 1 = 0.13969, loss 2 = 0.15183
val eval at step 7500: map@0.50 = 0.31121 - map@0.75 = 0.05845
  > Step 7501 (epoch 186): loss 1 = 0.27173, loss 2 = 0.21304
  > Step 7751 (epoch 193): loss 1 = 0.17209, loss 2 = 0.18371
val eval at step 8000: map@0.50 = 0.32253 - map@0.75 = 0.07415
  > Step 8001 (epoch 199): loss 1 = 0.18986, loss 2 = 0.17140
  > Step 8251 (epoch 205): loss 1 = 0.12410, loss 2 = 0.19184
val eval at step 8500: map@0.50 = 0.33840 - map@0.75 = 0.08279
  > Step 8501 (epoch 211): loss 1 = 0.17540, loss 2 = 0.14451
  > Step 8751 (epoch 217): loss 1 = 0.13211, loss 2 = 0.12320
val eval at step 9000: map@0.50 = 0.37256 - map@0.75 = 0.10432
  > Step 9001 (epoch 224): loss 1 = 0.10271, loss 2 = 0.18147
  > Step 9251 (epoch 230): loss 1 = 0.14349, loss 2 = 0.16200
val eval at step 9500: map@0.50 = 0.38752 - map@0.75 = 0.07735
  > Step 9501 (epoch 236): loss 1 = 0.09288, loss 2 = 0.12314
  > Step 9751 (epoch 242): loss 1 = 0.12660, loss 2 = 0.18280
val eval at step 10000: map@0.50 = 0.37269 - map@0.75 = 0.11126
  > Step 10001 (epoch 248): loss 1 = 0.17738, loss 2 = 0.18157
  > Step 10251 (epoch 255): loss 1 = 0.16623, loss 2 = 0.27898
val eval at step 10500: map@0.50 = 0.33976 - map@0.75 = 0.03408
  > Step 10501 (epoch 261): loss 1 = 0.15813, loss 2 = 0.17843
  > Step 10751 (epoch 267): loss 1 = 0.13388, loss 2 = 0.19183
val eval at step 11000: map@0.50 = 0.39698 - map@0.75 = 0.11412
  > Step 11001 (epoch 273): loss 1 = 0.10948, loss 2 = 0.15698
  > Step 11251 (epoch 279): loss 1 = 0.10570, loss 2 = 0.12911
val eval at step 11500: map@0.50 = 0.36909 - map@0.75 = 0.11607
  > Step 11501 (epoch 286): loss 1 = 0.09005, loss 2 = 0.12633
  > Step 11751 (epoch 292): loss 1 = 0.12332, loss 2 = 0.16235
val eval at step 12000: map@0.50 = 0.39058 - map@0.75 = 0.09585
  > Step 12001 (epoch 298): loss 1 = 0.09230, loss 2 = 0.15130
  > Step 12251 (epoch 304): loss 1 = 0.10804, loss 2 = 0.12377
val eval at step 12500: map@0.50 = 0.41605 - map@0.75 = 0.08891
  > Step 12501 (epoch 310): loss 1 = 0.09116, loss 2 = 0.12575
  > Step 12751 (epoch 317): loss 1 = 0.09041, loss 2 = 0.11277
val eval at step 13000: map@0.50 = 0.36386 - map@0.75 = 0.10695
  > Step 13001 (epoch 323): loss 1 = 0.08931, loss 2 = 0.13542
  > Step 13251 (epoch 329): loss 1 = 0.11360, loss 2 = 0.12869
val eval at step 13500: map@0.50 = 0.38361 - map@0.75 = 0.13657
  > Step 13501 (epoch 335): loss 1 = 0.16150, loss 2 = 0.15813
  > Step 13751 (epoch 341): loss 1 = 0.16929, loss 2 = 0.19097
val eval at step 14000: map@0.50 = 0.41366 - map@0.75 = 0.12563
  > Step 14001 (epoch 348): loss 1 = 0.10086, loss 2 = 0.09571
  > Step 14251 (epoch 354): loss 1 = 0.08890, loss 2 = 0.11336
val eval at step 14500: map@0.50 = 0.42193 - map@0.75 = 0.12607
  > Step 14501 (epoch 360): loss 1 = 0.08510, loss 2 = 0.11484
  > Step 14751 (epoch 366): loss 1 = 0.06640, loss 2 = 0.11376
val eval at step 15000: map@0.50 = 0.41864 - map@0.75 = 0.14033
  > Step 15001 (epoch 372): loss 1 = 0.10951, loss 2 = 0.12891
  > Step 15251 (epoch 379): loss 1 = 0.05935, loss 2 = 0.09864
val eval at step 15500: map@0.50 = 0.40082 - map@0.75 = 0.12841
  > Step 15501 (epoch 385): loss 1 = 0.08566, loss 2 = 0.09947
  > Step 15751 (epoch 391): loss 1 = 0.09213, loss 2 = 0.09941
val eval at step 16000: map@0.50 = 0.42527 - map@0.75 = 0.11855
  > Step 16001 (epoch 397): loss 1 = 0.07006, loss 2 = 0.10350
  > Step 16251 (epoch 403): loss 1 = 0.11860, loss 2 = 0.13604
val eval at step 16500: map@0.50 = 0.43253 - map@0.75 = 0.12293
  > Step 16501 (epoch 410): loss 1 = 0.08994, loss 2 = 0.11475
  > Step 16751 (epoch 416): loss 1 = 0.14911, loss 2 = 0.08893
val eval at step 17000: map@0.50 = 0.43918 - map@0.75 = 0.13672
  > Step 17001 (epoch 422): loss 1 = 0.10705, loss 2 = 0.14913
  > Step 17251 (epoch 428): loss 1 = 0.12250, loss 2 = 0.11499
val eval at step 17500: map@0.50 = 0.42669 - map@0.75 = 0.07377
  > Step 17501 (epoch 434): loss 1 = 0.18047, loss 2 = 0.12348
  > Step 17751 (epoch 441): loss 1 = 0.15744, loss 2 = 0.13807
val eval at step 18000: map@0.50 = 0.43579 - map@0.75 = 0.10448
  > Step 18001 (epoch 447): loss 1 = 0.10015, loss 2 = 0.08054
  > Step 18251 (epoch 453): loss 1 = 0.04832, loss 2 = 0.06329
val eval at step 18500: map@0.50 = 0.40469 - map@0.75 = 0.12613
  > Step 18501 (epoch 459): loss 1 = 0.05535, loss 2 = 0.08659
  > Step 18751 (epoch 465): loss 1 = 0.08987, loss 2 = 0.07648
val eval at step 19000: map@0.50 = 0.35646 - map@0.75 = 0.11716
  > Step 19001 (epoch 472): loss 1 = 0.08386, loss 2 = 0.09355
  > Step 19251 (epoch 478): loss 1 = 0.07347, loss 2 = 0.11756
val eval at step 19500: map@0.50 = 0.39299 - map@0.75 = 0.13010
  > Step 19501 (epoch 484): loss 1 = 0.07526, loss 2 = 0.05527
  > Step 19751 (epoch 490): loss 1 = 0.05833, loss 2 = 0.08209
val eval at step 20000: map@0.50 = 0.35294 - map@0.75 = 0.11932
  > Step 20001 (epoch 496): loss 1 = 0.04776, loss 2 = 0.11158
  > Step 20251 (epoch 503): loss 1 = 0.06872, loss 2 = 0.11815
val eval at step 20500: map@0.50 = 0.44426 - map@0.75 = 0.10512
  > Step 20501 (epoch 509): loss 1 = 0.10390, loss 2 = 0.11286
  > Step 20751 (epoch 515): loss 1 = 0.10077, loss 2 = 0.11148
val eval at step 21000: map@0.50 = 0.43313 - map@0.75 = 0.13194
  > Step 21001 (epoch 521): loss 1 = 0.09165, loss 2 = 0.13141
  > Step 21251 (epoch 527): loss 1 = 0.06681, loss 2 = 0.07319
val eval at step 21500: map@0.50 = 0.44108 - map@0.75 = 0.08865
  > Step 21501 (epoch 534): loss 1 = 0.09609, loss 2 = 0.08622
  > Step 21751 (epoch 540): loss 1 = 0.06083, loss 2 = 0.05699
val eval at step 22000: map@0.50 = 0.42237 - map@0.75 = 0.13951
  > Step 22001 (epoch 546): loss 1 = 0.10891, loss 2 = 0.07915
  > Step 22251 (epoch 552): loss 1 = 0.14141, loss 2 = 0.07898
val eval at step 22500: map@0.50 = 0.32241 - map@0.75 = 0.07697
  > Step 22501 (epoch 558): loss 1 = 0.38056, loss 2 = 0.14628
  > Step 22751 (epoch 565): loss 1 = 0.10404, loss 2 = 0.12278
val eval at step 23000: map@0.50 = 0.42634 - map@0.75 = 0.12934
  > Step 23001 (epoch 571): loss 1 = 0.10424, loss 2 = 0.10266
  > Step 23251 (epoch 577): loss 1 = 0.10720, loss 2 = 0.07904
val eval at step 23500: map@0.50 = 0.38468 - map@0.75 = 0.10217
  > Step 23501 (epoch 583): loss 1 = 0.03290, loss 2 = 0.06023
  > Step 23751 (epoch 589): loss 1 = 0.06482, loss 2 = 0.08311
val eval at step 24000: map@0.50 = 0.35260 - map@0.75 = 0.09911
  > Step 24001 (epoch 596): loss 1 = 0.05633, loss 2 = 0.08123
test eval at step 24200: map@0.50 = 0.35885 - map@0.75 = 0.10106
