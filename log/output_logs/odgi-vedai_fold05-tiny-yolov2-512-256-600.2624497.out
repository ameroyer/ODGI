============================================================== FOLD 05
Tensorflow version 1.10.1
ODGI - vedai_fold05, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold05
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.0008
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold05
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold05_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold05_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold05_val
   using grid size [16 16]
   using grid size [8 8]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 8, 8, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 8.00e-04
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold05/tiny-yolov2_odgi_512_256/09-28_10-15

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold05/tiny-yolov2_odgi_512_256/09-28_10-15[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 5.07907, loss 2 = 7.86082
  > Step 251 (epoch 7): loss 1 = 0.85104, loss 2 = 1.45425
val eval at step 500: map@0.50 = 0.22075 - map@0.75 = 0.02538
  > Step 501 (epoch 13): loss 1 = 0.62300, loss 2 = 1.41455
  > Step 751 (epoch 19): loss 1 = 0.41103, loss 2 = 0.77849
val eval at step 1000: map@0.50 = 0.34078 - map@0.75 = 0.06330
  > Step 1001 (epoch 25): loss 1 = 0.35055, loss 2 = 0.87109
  > Step 1251 (epoch 32): loss 1 = 0.28415, loss 2 = 0.75285
val eval at step 1500: map@0.50 = 0.40968 - map@0.75 = 0.06189
  > Step 1501 (epoch 38): loss 1 = 0.21976, loss 2 = 1.03579
  > Step 1751 (epoch 44): loss 1 = 0.17430, loss 2 = 0.80717
val eval at step 2000: map@0.50 = 0.47858 - map@0.75 = 0.14824
  > Step 2001 (epoch 50): loss 1 = 0.17981, loss 2 = 0.69242
  > Step 2251 (epoch 56): loss 1 = 0.19339, loss 2 = 0.89671
val eval at step 2500: map@0.50 = 0.48469 - map@0.75 = 0.11747
  > Step 2501 (epoch 63): loss 1 = 0.36816, loss 2 = 0.87146
  > Step 2751 (epoch 69): loss 1 = 0.14648, loss 2 = 0.78522
val eval at step 3000: map@0.50 = 0.59985 - map@0.75 = 0.23475
  > Step 3001 (epoch 75): loss 1 = 0.13287, loss 2 = 0.94131
  > Step 3251 (epoch 81): loss 1 = 0.17664, loss 2 = 0.80287
val eval at step 3500: map@0.50 = 0.60569 - map@0.75 = 0.18771
  > Step 3501 (epoch 87): loss 1 = 0.14754, loss 2 = 0.73647
  > Step 3751 (epoch 94): loss 1 = 0.13773, loss 2 = 0.74126
val eval at step 4000: map@0.50 = 0.60345 - map@0.75 = 0.30633
  > Step 4001 (epoch 100): loss 1 = 0.14203, loss 2 = 0.65806
  > Step 4251 (epoch 106): loss 1 = 0.14354, loss 2 = 0.84516
val eval at step 4500: map@0.50 = 0.62031 - map@0.75 = 0.37398
  > Step 4501 (epoch 112): loss 1 = 0.13401, loss 2 = 0.72037
  > Step 4751 (epoch 118): loss 1 = 0.26630, loss 2 = 0.80452
val eval at step 5000: map@0.50 = 0.55225 - map@0.75 = 0.15410
  > Step 5001 (epoch 124): loss 1 = 0.16335, loss 2 = 0.77588
  > Step 5251 (epoch 131): loss 1 = 0.10228, loss 2 = 0.72657
val eval at step 5500: map@0.50 = 0.62427 - map@0.75 = 0.26787
  > Step 5501 (epoch 137): loss 1 = 0.11269, loss 2 = 0.82761
  > Step 5751 (epoch 143): loss 1 = 0.10031, loss 2 = 0.73952
val eval at step 6000: map@0.50 = 0.62600 - map@0.75 = 0.33088
  > Step 6001 (epoch 149): loss 1 = 0.13770, loss 2 = 0.88574
  > Step 6251 (epoch 155): loss 1 = 0.08854, loss 2 = 0.64835
val eval at step 6500: map@0.50 = 0.59354 - map@0.75 = 0.25654
  > Step 6501 (epoch 162): loss 1 = 0.11046, loss 2 = 0.77570
  > Step 6751 (epoch 168): loss 1 = 0.19837, loss 2 = 0.72965
val eval at step 7000: map@0.50 = 0.63794 - map@0.75 = 0.26740
  > Step 7001 (epoch 174): loss 1 = 0.10727, loss 2 = 0.64685
  > Step 7251 (epoch 180): loss 1 = 0.08349, loss 2 = 0.60383
val eval at step 7500: map@0.50 = 0.62931 - map@0.75 = 0.23151
  > Step 7501 (epoch 186): loss 1 = 0.13018, loss 2 = 0.93721
  > Step 7751 (epoch 193): loss 1 = 0.09679, loss 2 = 0.58097
val eval at step 8000: map@0.50 = 0.61585 - map@0.75 = 0.31332
  > Step 8001 (epoch 199): loss 1 = 0.18177, loss 2 = 0.76547
  > Step 8251 (epoch 205): loss 1 = 0.17856, loss 2 = 0.84143
val eval at step 8500: map@0.50 = 0.67049 - map@0.75 = 0.39137
  > Step 8501 (epoch 211): loss 1 = 0.08776, loss 2 = 0.52314
  > Step 8751 (epoch 217): loss 1 = 0.08236, loss 2 = 0.66962
val eval at step 9000: map@0.50 = 0.68294 - map@0.75 = 0.47479
  > Step 9001 (epoch 224): loss 1 = 0.05562, loss 2 = 0.58703
  > Step 9251 (epoch 230): loss 1 = 0.07515, loss 2 = 0.66106
val eval at step 9500: map@0.50 = 0.65631 - map@0.75 = 0.39749
  > Step 9501 (epoch 236): loss 1 = 0.06492, loss 2 = 0.56003
  > Step 9751 (epoch 242): loss 1 = 0.07320, loss 2 = 0.72120
val eval at step 10000: map@0.50 = 0.66616 - map@0.75 = 0.43364
  > Step 10001 (epoch 248): loss 1 = 0.06449, loss 2 = 0.51490
  > Step 10251 (epoch 255): loss 1 = 0.12570, loss 2 = 0.92597
val eval at step 10500: map@0.50 = 0.67231 - map@0.75 = 0.41328
  > Step 10501 (epoch 261): loss 1 = 0.08887, loss 2 = 0.78855
  > Step 10751 (epoch 267): loss 1 = 0.13771, loss 2 = 0.74820
val eval at step 11000: map@0.50 = 0.70068 - map@0.75 = 0.36970
  > Step 11001 (epoch 273): loss 1 = 0.06513, loss 2 = 0.65686
  > Step 11251 (epoch 279): loss 1 = 0.06886, loss 2 = 0.62021
val eval at step 11500: map@0.50 = 0.68934 - map@0.75 = 0.38542
  > Step 11501 (epoch 286): loss 1 = 0.06947, loss 2 = 0.55702
  > Step 11751 (epoch 292): loss 1 = 0.18631, loss 2 = 0.69278
val eval at step 12000: map@0.50 = 0.67258 - map@0.75 = 0.44998
  > Step 12001 (epoch 298): loss 1 = 0.07039, loss 2 = 0.60351
  > Step 12251 (epoch 304): loss 1 = 0.05488, loss 2 = 0.56556
val eval at step 12500: map@0.50 = 0.68571 - map@0.75 = 0.40991
  > Step 12501 (epoch 310): loss 1 = 0.04726, loss 2 = 0.57518
  > Step 12751 (epoch 317): loss 1 = 0.03914, loss 2 = 0.54104
val eval at step 13000: map@0.50 = 0.67803 - map@0.75 = 0.44947
  > Step 13001 (epoch 323): loss 1 = 0.04970, loss 2 = 0.59054
  > Step 13251 (epoch 329): loss 1 = 0.06216, loss 2 = 0.52813
val eval at step 13500: map@0.50 = 0.62295 - map@0.75 = 0.40817
  > Step 13501 (epoch 335): loss 1 = 0.07568, loss 2 = 0.80853
  > Step 13751 (epoch 341): loss 1 = 0.04812, loss 2 = 0.60090
val eval at step 14000: map@0.50 = 0.69618 - map@0.75 = 0.44762
  > Step 14001 (epoch 348): loss 1 = 0.05150, loss 2 = 0.51974
  > Step 14251 (epoch 354): loss 1 = 0.09018, loss 2 = 0.64034
val eval at step 14500: map@0.50 = 0.66452 - map@0.75 = 0.41646
  > Step 14501 (epoch 360): loss 1 = 0.04190, loss 2 = 0.49405
  > Step 14751 (epoch 366): loss 1 = 0.08623, loss 2 = 0.95940
val eval at step 15000: map@0.50 = 0.68054 - map@0.75 = 0.38561
  > Step 15001 (epoch 372): loss 1 = 0.06993, loss 2 = 0.70578
  > Step 15251 (epoch 379): loss 1 = 0.05221, loss 2 = 0.53939
val eval at step 15500: map@0.50 = 0.67565 - map@0.75 = 0.42803
  > Step 15501 (epoch 385): loss 1 = 0.04853, loss 2 = 0.59811
  > Step 15751 (epoch 391): loss 1 = 0.06726, loss 2 = 0.64038
val eval at step 16000: map@0.50 = 0.65861 - map@0.75 = 0.39190
  > Step 16001 (epoch 397): loss 1 = 0.05212, loss 2 = 0.57307
  > Step 16251 (epoch 403): loss 1 = 0.05442, loss 2 = 0.68912
val eval at step 16500: map@0.50 = 0.65315 - map@0.75 = 0.41423
  > Step 16501 (epoch 410): loss 1 = 0.06362, loss 2 = 0.62388
  > Step 16751 (epoch 416): loss 1 = 0.05867, loss 2 = 0.76076
val eval at step 17000: map@0.50 = 0.67169 - map@0.75 = 0.42109
  > Step 17001 (epoch 422): loss 1 = 0.13390, loss 2 = 0.60241
  > Step 17251 (epoch 428): loss 1 = 0.09125, loss 2 = 0.70914
val eval at step 17500: map@0.50 = 0.68670 - map@0.75 = 0.45026
  > Step 17501 (epoch 434): loss 1 = 0.04707, loss 2 = 0.66459
  > Step 17751 (epoch 441): loss 1 = 0.04475, loss 2 = 0.71478
val eval at step 18000: map@0.50 = 0.63641 - map@0.75 = 0.40027
  > Step 18001 (epoch 447): loss 1 = 0.11259, loss 2 = 0.82349
  > Step 18251 (epoch 453): loss 1 = 0.03910, loss 2 = 0.69323
val eval at step 18500: map@0.50 = 0.63238 - map@0.75 = 0.40966
  > Step 18501 (epoch 459): loss 1 = 0.08222, loss 2 = 0.69333
  > Step 18751 (epoch 465): loss 1 = 0.03860, loss 2 = 0.55845
val eval at step 19000: map@0.50 = 0.61994 - map@0.75 = 0.39417
  > Step 19001 (epoch 472): loss 1 = 0.05217, loss 2 = 0.66509
  > Step 19251 (epoch 478): loss 1 = 0.04065, loss 2 = 0.60364
val eval at step 19500: map@0.50 = 0.68563 - map@0.75 = 0.44990
  > Step 19501 (epoch 484): loss 1 = 0.05110, loss 2 = 0.58593
  > Step 19751 (epoch 490): loss 1 = 0.03531, loss 2 = 0.59147
val eval at step 20000: map@0.50 = 0.60791 - map@0.75 = 0.36125
  > Step 20001 (epoch 496): loss 1 = 0.04138, loss 2 = 0.70786
  > Step 20251 (epoch 503): loss 1 = 0.16443, loss 2 = 0.90638
val eval at step 20500: map@0.50 = 0.67388 - map@0.75 = 0.42176
  > Step 20501 (epoch 509): loss 1 = 0.06537, loss 2 = 0.74159
  > Step 20751 (epoch 515): loss 1 = 0.10459, loss 2 = 0.84436
val eval at step 21000: map@0.50 = 0.64107 - map@0.75 = 0.45428
  > Step 21001 (epoch 521): loss 1 = 0.04648, loss 2 = 0.61244
  > Step 21251 (epoch 527): loss 1 = 0.03621, loss 2 = 0.54429
val eval at step 21500: map@0.50 = 0.65870 - map@0.75 = 0.40150
  > Step 21501 (epoch 534): loss 1 = 0.08126, loss 2 = 0.60585
  > Step 21751 (epoch 540): loss 1 = 0.05323, loss 2 = 0.65174
val eval at step 22000: map@0.50 = 0.66381 - map@0.75 = 0.42975
  > Step 22001 (epoch 546): loss 1 = 0.10031, loss 2 = 0.69143
  > Step 22251 (epoch 552): loss 1 = 0.06665, loss 2 = 0.55349
val eval at step 22500: map@0.50 = 0.64387 - map@0.75 = 0.40873
  > Step 22501 (epoch 558): loss 1 = 0.04197, loss 2 = 0.62393
  > Step 22751 (epoch 565): loss 1 = 0.11444, loss 2 = 0.77427
val eval at step 23000: map@0.50 = 0.65714 - map@0.75 = 0.40964
  > Step 23001 (epoch 571): loss 1 = 0.03078, loss 2 = 0.63167
  > Step 23251 (epoch 577): loss 1 = 0.08888, loss 2 = 0.79232
val eval at step 23500: map@0.50 = 0.62659 - map@0.75 = 0.40086
  > Step 23501 (epoch 583): loss 1 = 0.03411, loss 2 = 0.56062
  > Step 23751 (epoch 589): loss 1 = 0.03806, loss 2 = 0.75312
val eval at step 24000: map@0.50 = 0.63518 - map@0.75 = 0.36559
  > Step 24001 (epoch 596): loss 1 = 0.03248, loss 2 = 0.52965
test eval at step 24200: map@0.50 = 0.65423 - map@0.75 = 0.41665
