============================================================== FOLD 02
Tensorflow version 1.10.1
ODGI - vedai_fold02, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold02
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold02
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold02_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold02_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold02_val
   using grid size [8 8]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.97 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold02/tiny-yolov2_odgi_256_64/10-05_14-32

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold02/tiny-yolov2_odgi_256_64/10-05_14-32[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 7.04265, loss 2 = 8.19163
  > Step 251 (epoch 7): loss 1 = 0.89544, loss 2 = 0.67086
val eval at step 500: map@0.50 = 0.04370 - map@0.75 = 0.01240
  > Step 501 (epoch 13): loss 1 = 0.52630, loss 2 = 0.39630
  > Step 751 (epoch 19): loss 1 = 0.30953, loss 2 = 0.39259
val eval at step 1000: map@0.50 = 0.05489 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.32440, loss 2 = 0.41485
  > Step 1251 (epoch 32): loss 1 = 0.26707, loss 2 = 0.29309
val eval at step 1500: map@0.50 = 0.15732 - map@0.75 = 0.01286
  > Step 1501 (epoch 38): loss 1 = 0.24915, loss 2 = 0.30678
  > Step 1751 (epoch 44): loss 1 = 0.25077, loss 2 = 0.41317
val eval at step 2000: map@0.50 = 0.10403 - map@0.75 = 0.01113
  > Step 2001 (epoch 50): loss 1 = 0.29601, loss 2 = 0.35029
  > Step 2251 (epoch 56): loss 1 = 0.25786, loss 2 = 0.29568
val eval at step 2500: map@0.50 = 0.26722 - map@0.75 = 0.04781
  > Step 2501 (epoch 63): loss 1 = 0.27453, loss 2 = 0.32231
  > Step 2751 (epoch 69): loss 1 = 0.19499, loss 2 = 0.32133
val eval at step 3000: map@0.50 = 0.28935 - map@0.75 = 0.04839
  > Step 3001 (epoch 75): loss 1 = 0.18780, loss 2 = 0.27781
  > Step 3251 (epoch 81): loss 1 = 0.18818, loss 2 = 0.31241
val eval at step 3500: map@0.50 = 0.28341 - map@0.75 = 0.06983
  > Step 3501 (epoch 87): loss 1 = 0.21601, loss 2 = 0.29493
  > Step 3751 (epoch 94): loss 1 = 0.32062, loss 2 = 0.33283
val eval at step 4000: map@0.50 = 0.30876 - map@0.75 = 0.07902
  > Step 4001 (epoch 100): loss 1 = 0.19658, loss 2 = 0.26304
  > Step 4251 (epoch 106): loss 1 = 0.13443, loss 2 = 0.23380
val eval at step 4500: map@0.50 = 0.29031 - map@0.75 = 0.08705
  > Step 4501 (epoch 112): loss 1 = 0.16472, loss 2 = 0.27896
  > Step 4751 (epoch 118): loss 1 = 0.18376, loss 2 = 0.25276
val eval at step 5000: map@0.50 = 0.36973 - map@0.75 = 0.09573
  > Step 5001 (epoch 124): loss 1 = 0.18923, loss 2 = 0.20021
  > Step 5251 (epoch 131): loss 1 = 0.18005, loss 2 = 0.21878
val eval at step 5500: map@0.50 = 0.35230 - map@0.75 = 0.08083
  > Step 5501 (epoch 137): loss 1 = 0.19327, loss 2 = 0.21479
  > Step 5751 (epoch 143): loss 1 = 0.20291, loss 2 = 0.23841
val eval at step 6000: map@0.50 = 0.22651 - map@0.75 = 0.05620
  > Step 6001 (epoch 149): loss 1 = 0.35516, loss 2 = 0.25626
  > Step 6251 (epoch 155): loss 1 = 0.18651, loss 2 = 0.21494
val eval at step 6500: map@0.50 = 0.34491 - map@0.75 = 0.07071
  > Step 6501 (epoch 162): loss 1 = 0.18775, loss 2 = 0.25596
  > Step 6751 (epoch 168): loss 1 = 0.16780, loss 2 = 0.19569
val eval at step 7000: map@0.50 = 0.38648 - map@0.75 = 0.12207
  > Step 7001 (epoch 174): loss 1 = 0.13769, loss 2 = 0.17111
  > Step 7251 (epoch 180): loss 1 = 0.15766, loss 2 = 0.15372
val eval at step 7500: map@0.50 = 0.37802 - map@0.75 = 0.10875
  > Step 7501 (epoch 186): loss 1 = 0.14350, loss 2 = 0.22941
  > Step 7751 (epoch 193): loss 1 = 0.14619, loss 2 = 0.19462
val eval at step 8000: map@0.50 = 0.38053 - map@0.75 = 0.12839
  > Step 8001 (epoch 199): loss 1 = 0.16814, loss 2 = 0.16954
  > Step 8251 (epoch 205): loss 1 = 0.13464, loss 2 = 0.18339
val eval at step 8500: map@0.50 = 0.41365 - map@0.75 = 0.11790
  > Step 8501 (epoch 211): loss 1 = 0.13446, loss 2 = 0.16669
  > Step 8751 (epoch 217): loss 1 = 0.12529, loss 2 = 0.17415
val eval at step 9000: map@0.50 = 0.41259 - map@0.75 = 0.13598
  > Step 9001 (epoch 224): loss 1 = 0.16570, loss 2 = 0.14667
  > Step 9251 (epoch 230): loss 1 = 0.47441, loss 2 = 0.24301
val eval at step 9500: map@0.50 = 0.41441 - map@0.75 = 0.11617
  > Step 9501 (epoch 236): loss 1 = 0.17658, loss 2 = 0.20478
  > Step 9751 (epoch 242): loss 1 = 0.12770, loss 2 = 0.19258
val eval at step 10000: map@0.50 = 0.42128 - map@0.75 = 0.10637
  > Step 10001 (epoch 248): loss 1 = 0.12468, loss 2 = 0.19684
  > Step 10251 (epoch 255): loss 1 = 0.13178, loss 2 = 0.12623
val eval at step 10500: map@0.50 = 0.39228 - map@0.75 = 0.11253
  > Step 10501 (epoch 261): loss 1 = 0.10295, loss 2 = 0.12155
  > Step 10751 (epoch 267): loss 1 = 0.13924, loss 2 = 0.13454
val eval at step 11000: map@0.50 = 0.42784 - map@0.75 = 0.11154
  > Step 11001 (epoch 273): loss 1 = 0.09213, loss 2 = 0.13128
  > Step 11251 (epoch 279): loss 1 = 0.11062, loss 2 = 0.15716
val eval at step 11500: map@0.50 = 0.45279 - map@0.75 = 0.09782
  > Step 11501 (epoch 286): loss 1 = 0.13436, loss 2 = 0.13910
  > Step 11751 (epoch 292): loss 1 = 0.11448, loss 2 = 0.14409
val eval at step 12000: map@0.50 = 0.43008 - map@0.75 = 0.13344
  > Step 12001 (epoch 298): loss 1 = 0.12328, loss 2 = 0.15490
  > Step 12251 (epoch 304): loss 1 = 0.10060, loss 2 = 0.11090
val eval at step 12500: map@0.50 = 0.40868 - map@0.75 = 0.08310
  > Step 12501 (epoch 310): loss 1 = 0.16932, loss 2 = 0.14404
  > Step 12751 (epoch 317): loss 1 = 0.12038, loss 2 = 0.15975
val eval at step 13000: map@0.50 = 0.44983 - map@0.75 = 0.12579
  > Step 13001 (epoch 323): loss 1 = 0.09238, loss 2 = 0.12512
  > Step 13251 (epoch 329): loss 1 = 0.10607, loss 2 = 0.10669
val eval at step 13500: map@0.50 = 0.47860 - map@0.75 = 0.14654
  > Step 13501 (epoch 335): loss 1 = 0.11850, loss 2 = 0.10635
  > Step 13751 (epoch 341): loss 1 = 0.12010, loss 2 = 0.15197
val eval at step 14000: map@0.50 = 0.44949 - map@0.75 = 0.14933
  > Step 14001 (epoch 348): loss 1 = 0.17227, loss 2 = 0.19544
  > Step 14251 (epoch 354): loss 1 = 0.15734, loss 2 = 0.11187
val eval at step 14500: map@0.50 = 0.48319 - map@0.75 = 0.12462
  > Step 14501 (epoch 360): loss 1 = 0.08647, loss 2 = 0.12992
  > Step 14751 (epoch 366): loss 1 = 0.07970, loss 2 = 0.11138
val eval at step 15000: map@0.50 = 0.43862 - map@0.75 = 0.14836
  > Step 15001 (epoch 372): loss 1 = 0.08701, loss 2 = 0.17057
  > Step 15251 (epoch 379): loss 1 = 0.10823, loss 2 = 0.08733
val eval at step 15500: map@0.50 = 0.43321 - map@0.75 = 0.16759
  > Step 15501 (epoch 385): loss 1 = 0.08290, loss 2 = 0.12581
  > Step 15751 (epoch 391): loss 1 = 0.05874, loss 2 = 0.08841
val eval at step 16000: map@0.50 = 0.45126 - map@0.75 = 0.14914
  > Step 16001 (epoch 397): loss 1 = 0.10352, loss 2 = 0.09555
  > Step 16251 (epoch 403): loss 1 = 0.06897, loss 2 = 0.11054
val eval at step 16500: map@0.50 = 0.42454 - map@0.75 = 0.13206
  > Step 16501 (epoch 410): loss 1 = 0.10034, loss 2 = 0.09375
  > Step 16751 (epoch 416): loss 1 = 0.07625, loss 2 = 0.10239
val eval at step 17000: map@0.50 = 0.40867 - map@0.75 = 0.14239
  > Step 17001 (epoch 422): loss 1 = 0.11108, loss 2 = 0.16829
  > Step 17251 (epoch 428): loss 1 = 0.08732, loss 2 = 0.09071
val eval at step 17500: map@0.50 = 0.45149 - map@0.75 = 0.16221
  > Step 17501 (epoch 434): loss 1 = 0.10319, loss 2 = 0.11416
  > Step 17751 (epoch 441): loss 1 = 0.11611, loss 2 = 0.13081
val eval at step 18000: map@0.50 = 0.45063 - map@0.75 = 0.13670
  > Step 18001 (epoch 447): loss 1 = 0.05681, loss 2 = 0.10232
  > Step 18251 (epoch 453): loss 1 = 0.08610, loss 2 = 0.12760
val eval at step 18500: map@0.50 = 0.45587 - map@0.75 = 0.16343
  > Step 18501 (epoch 459): loss 1 = 0.08958, loss 2 = 0.14583
  > Step 18751 (epoch 465): loss 1 = 0.12164, loss 2 = 0.13824
val eval at step 19000: map@0.50 = 0.49523 - map@0.75 = 0.15986
  > Step 19001 (epoch 472): loss 1 = 0.12899, loss 2 = 0.15191
  > Step 19251 (epoch 478): loss 1 = 0.08615, loss 2 = 0.12339
val eval at step 19500: map@0.50 = 0.47231 - map@0.75 = 0.17203
  > Step 19501 (epoch 484): loss 1 = 0.10307, loss 2 = 0.10895
  > Step 19751 (epoch 490): loss 1 = 0.06028, loss 2 = 0.09898
val eval at step 20000: map@0.50 = 0.46448 - map@0.75 = 0.12541
  > Step 20001 (epoch 496): loss 1 = 0.07745, loss 2 = 0.08479
  > Step 20251 (epoch 503): loss 1 = 0.08179, loss 2 = 0.08828
val eval at step 20500: map@0.50 = 0.49179 - map@0.75 = 0.18776
  > Step 20501 (epoch 509): loss 1 = 0.08759, loss 2 = 0.12366
  > Step 20751 (epoch 515): loss 1 = 0.07710, loss 2 = 0.10389
val eval at step 21000: map@0.50 = 0.43581 - map@0.75 = 0.15417
  > Step 21001 (epoch 521): loss 1 = 0.07276, loss 2 = 0.06860
  > Step 21251 (epoch 527): loss 1 = 0.09030, loss 2 = 0.12823
val eval at step 21500: map@0.50 = 0.47335 - map@0.75 = 0.16587
  > Step 21501 (epoch 534): loss 1 = 0.06251, loss 2 = 0.06283
  > Step 21751 (epoch 540): loss 1 = 0.07346, loss 2 = 0.11580
val eval at step 22000: map@0.50 = 0.46658 - map@0.75 = 0.19397
  > Step 22001 (epoch 546): loss 1 = 0.08127, loss 2 = 0.08829
  > Step 22251 (epoch 552): loss 1 = 0.07590, loss 2 = 0.07812
val eval at step 22500: map@0.50 = 0.47101 - map@0.75 = 0.14480
  > Step 22501 (epoch 558): loss 1 = 0.07071, loss 2 = 0.09139
  > Step 22751 (epoch 565): loss 1 = 0.06890, loss 2 = 0.05971
val eval at step 23000: map@0.50 = 0.43343 - map@0.75 = 0.11002
  > Step 23001 (epoch 571): loss 1 = 0.08192, loss 2 = 0.09882
  > Step 23251 (epoch 577): loss 1 = 0.09225, loss 2 = 0.07810
val eval at step 23500: map@0.50 = 0.46216 - map@0.75 = 0.16711
  > Step 23501 (epoch 583): loss 1 = 0.08506, loss 2 = 0.08673
  > Step 23751 (epoch 589): loss 1 = 0.07218, loss 2 = 0.07513
val eval at step 24000: map@0.50 = 0.45129 - map@0.75 = 0.14690
  > Step 24001 (epoch 596): loss 1 = 0.04292, loss 2 = 0.10025
test eval at step 24200: map@0.50 = 0.37763 - map@0.75 = 0.12773
