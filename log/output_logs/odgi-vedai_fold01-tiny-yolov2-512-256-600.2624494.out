============================================================== FOLD 01
Tensorflow version 1.10.1
ODGI - vedai_fold01, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold01
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.0008
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold01
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold01_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold01_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold01_val
   using grid size [16 16]
   using grid size [8 8]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 8, 8, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 8.00e-04
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold01/tiny-yolov2_odgi_512_256/09-28_10-15

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold01/tiny-yolov2_odgi_512_256/09-28_10-15[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 5.59748, loss 2 = 6.65129
  > Step 251 (epoch 7): loss 1 = 0.65657, loss 2 = 1.13169
val eval at step 500: map@0.50 = 0.21975 - map@0.75 = 0.01382
  > Step 501 (epoch 13): loss 1 = 0.49158, loss 2 = 0.86032
  > Step 751 (epoch 19): loss 1 = 0.44467, loss 2 = 0.71512
val eval at step 1000: map@0.50 = 0.30878 - map@0.75 = 0.07188
  > Step 1001 (epoch 25): loss 1 = 0.31537, loss 2 = 0.81304
  > Step 1251 (epoch 32): loss 1 = 0.24071, loss 2 = 0.95222
val eval at step 1500: map@0.50 = 0.43791 - map@0.75 = 0.13910
  > Step 1501 (epoch 38): loss 1 = 0.26834, loss 2 = 0.89139
  > Step 1751 (epoch 44): loss 1 = 0.19446, loss 2 = 0.81709
val eval at step 2000: map@0.50 = 0.46284 - map@0.75 = 0.11277
  > Step 2001 (epoch 50): loss 1 = 0.19573, loss 2 = 0.79645
  > Step 2251 (epoch 56): loss 1 = 0.43646, loss 2 = 0.67298
val eval at step 2500: map@0.50 = 0.35732 - map@0.75 = 0.08330
  > Step 2501 (epoch 63): loss 1 = 0.25077, loss 2 = 0.67678
  > Step 2751 (epoch 69): loss 1 = 0.20943, loss 2 = 1.33199
val eval at step 3000: map@0.50 = 0.52054 - map@0.75 = 0.20369
  > Step 3001 (epoch 75): loss 1 = 0.14593, loss 2 = 0.67190
  > Step 3251 (epoch 81): loss 1 = 0.12589, loss 2 = 0.65250
val eval at step 3500: map@0.50 = 0.55047 - map@0.75 = 0.25246
  > Step 3501 (epoch 87): loss 1 = 0.12712, loss 2 = 0.66872
  > Step 3751 (epoch 94): loss 1 = 0.13155, loss 2 = 0.74823
val eval at step 4000: map@0.50 = 0.53193 - map@0.75 = 0.23569
  > Step 4001 (epoch 100): loss 1 = 0.15895, loss 2 = 0.92013
  > Step 4251 (epoch 106): loss 1 = 0.25264, loss 2 = 0.82465
val eval at step 4500: map@0.50 = 0.56101 - map@0.75 = 0.20332
  > Step 4501 (epoch 112): loss 1 = 0.19134, loss 2 = 0.76621
  > Step 4751 (epoch 118): loss 1 = 0.14997, loss 2 = 0.71133
val eval at step 5000: map@0.50 = 0.61120 - map@0.75 = 0.30505
  > Step 5001 (epoch 124): loss 1 = 0.11420, loss 2 = 0.73128
  > Step 5251 (epoch 131): loss 1 = 0.11614, loss 2 = 0.88672
val eval at step 5500: map@0.50 = 0.64703 - map@0.75 = 0.35593
  > Step 5501 (epoch 137): loss 1 = 0.09199, loss 2 = 0.61893
  > Step 5751 (epoch 143): loss 1 = 0.10844, loss 2 = 0.68388
val eval at step 6000: map@0.50 = 0.63333 - map@0.75 = 0.36094
  > Step 6001 (epoch 149): loss 1 = 0.08408, loss 2 = 0.71985
  > Step 6251 (epoch 155): loss 1 = 0.09806, loss 2 = 0.66041
val eval at step 6500: map@0.50 = 0.58123 - map@0.75 = 0.20727
  > Step 6501 (epoch 162): loss 1 = 0.08429, loss 2 = 0.63580
  > Step 6751 (epoch 168): loss 1 = 0.09296, loss 2 = 0.74684
val eval at step 7000: map@0.50 = 0.60027 - map@0.75 = 0.35288
  > Step 7001 (epoch 174): loss 1 = 0.10219, loss 2 = 0.64733
  > Step 7251 (epoch 180): loss 1 = 0.10778, loss 2 = 0.76729
val eval at step 7500: map@0.50 = 0.58412 - map@0.75 = 0.26783
  > Step 7501 (epoch 186): loss 1 = 0.09375, loss 2 = 0.78110
  > Step 7751 (epoch 193): loss 1 = 0.08225, loss 2 = 0.73430
val eval at step 8000: map@0.50 = 0.60094 - map@0.75 = 0.26093
  > Step 8001 (epoch 199): loss 1 = 0.19687, loss 2 = 0.70597
  > Step 8251 (epoch 205): loss 1 = 0.11011, loss 2 = 0.89904
val eval at step 8500: map@0.50 = 0.65042 - map@0.75 = 0.35071
  > Step 8501 (epoch 211): loss 1 = 0.08492, loss 2 = 0.68050
  > Step 8751 (epoch 217): loss 1 = 0.07778, loss 2 = 0.66088
val eval at step 9000: map@0.50 = 0.61677 - map@0.75 = 0.30495
  > Step 9001 (epoch 224): loss 1 = 0.13463, loss 2 = 0.69446
  > Step 9251 (epoch 230): loss 1 = 0.07860, loss 2 = 0.70925
val eval at step 9500: map@0.50 = 0.62017 - map@0.75 = 0.37701
  > Step 9501 (epoch 236): loss 1 = 0.09202, loss 2 = 0.67523
  > Step 9751 (epoch 242): loss 1 = 0.07989, loss 2 = 0.58729
val eval at step 10000: map@0.50 = 0.58690 - map@0.75 = 0.30384
  > Step 10001 (epoch 248): loss 1 = 0.05753, loss 2 = 0.60315
  > Step 10251 (epoch 255): loss 1 = 0.06994, loss 2 = 0.59314
val eval at step 10500: map@0.50 = 0.63684 - map@0.75 = 0.30697
  > Step 10501 (epoch 261): loss 1 = 0.06280, loss 2 = 0.59485
  > Step 10751 (epoch 267): loss 1 = 0.16178, loss 2 = 0.69417
val eval at step 11000: map@0.50 = 0.59351 - map@0.75 = 0.33109
  > Step 11001 (epoch 273): loss 1 = 0.07158, loss 2 = 0.63966
  > Step 11251 (epoch 279): loss 1 = 0.08185, loss 2 = 0.69601
val eval at step 11500: map@0.50 = 0.60729 - map@0.75 = 0.33750
  > Step 11501 (epoch 286): loss 1 = 0.07038, loss 2 = 0.75007
  > Step 11751 (epoch 292): loss 1 = 0.15302, loss 2 = 0.83910
val eval at step 12000: map@0.50 = 0.66449 - map@0.75 = 0.41834
  > Step 12001 (epoch 298): loss 1 = 0.09404, loss 2 = 0.63466
  > Step 12251 (epoch 304): loss 1 = 0.05265, loss 2 = 0.61534
val eval at step 12500: map@0.50 = 0.61528 - map@0.75 = 0.36161
  > Step 12501 (epoch 310): loss 1 = 0.05545, loss 2 = 0.64531
  > Step 12751 (epoch 317): loss 1 = 0.09726, loss 2 = 0.74380
val eval at step 13000: map@0.50 = 0.60575 - map@0.75 = 0.37574
  > Step 13001 (epoch 323): loss 1 = 0.04588, loss 2 = 0.60884
  > Step 13251 (epoch 329): loss 1 = 0.05433, loss 2 = 0.59917
val eval at step 13500: map@0.50 = 0.62638 - map@0.75 = 0.39036
  > Step 13501 (epoch 335): loss 1 = 0.27051, loss 2 = 1.01514
  > Step 13751 (epoch 341): loss 1 = 0.06085, loss 2 = 0.56701
val eval at step 14000: map@0.50 = 0.63050 - map@0.75 = 0.42022
  > Step 14001 (epoch 348): loss 1 = 0.05856, loss 2 = 0.66583
  > Step 14251 (epoch 354): loss 1 = 0.07187, loss 2 = 0.65761
val eval at step 14500: map@0.50 = 0.66516 - map@0.75 = 0.45061
  > Step 14501 (epoch 360): loss 1 = 0.05556, loss 2 = 0.62518
  > Step 14751 (epoch 366): loss 1 = 0.07140, loss 2 = 0.60934
val eval at step 15000: map@0.50 = 0.67038 - map@0.75 = 0.38999
  > Step 15001 (epoch 372): loss 1 = 0.11354, loss 2 = 0.74520
  > Step 15251 (epoch 379): loss 1 = 0.06018, loss 2 = 0.61866
val eval at step 15500: map@0.50 = 0.65930 - map@0.75 = 0.43853
  > Step 15501 (epoch 385): loss 1 = 0.04480, loss 2 = 0.59858
  > Step 15751 (epoch 391): loss 1 = 0.04756, loss 2 = 0.66668
val eval at step 16000: map@0.50 = 0.64885 - map@0.75 = 0.43384
  > Step 16001 (epoch 397): loss 1 = 0.06711, loss 2 = 0.82447
  > Step 16251 (epoch 403): loss 1 = 0.17905, loss 2 = 0.56649
val eval at step 16500: map@0.50 = 0.67693 - map@0.75 = 0.44399
  > Step 16501 (epoch 410): loss 1 = 0.08020, loss 2 = 0.62740
  > Step 16751 (epoch 416): loss 1 = 0.05021, loss 2 = 0.54708
val eval at step 17000: map@0.50 = 0.64083 - map@0.75 = 0.41077
  > Step 17001 (epoch 422): loss 1 = 0.07160, loss 2 = 0.63421
  > Step 17251 (epoch 428): loss 1 = 0.04304, loss 2 = 0.72440
val eval at step 17500: map@0.50 = 0.63866 - map@0.75 = 0.42003
  > Step 17501 (epoch 434): loss 1 = 0.04564, loss 2 = 0.62311
  > Step 17751 (epoch 441): loss 1 = 0.04747, loss 2 = 0.60544
val eval at step 18000: map@0.50 = 0.61423 - map@0.75 = 0.36803
  > Step 18001 (epoch 447): loss 1 = 0.03924, loss 2 = 0.51322
  > Step 18251 (epoch 453): loss 1 = 0.03892, loss 2 = 0.74127
val eval at step 18500: map@0.50 = 0.64060 - map@0.75 = 0.44665
  > Step 18501 (epoch 459): loss 1 = 0.05732, loss 2 = 0.75408
  > Step 18751 (epoch 465): loss 1 = 0.07432, loss 2 = 0.79072
val eval at step 19000: map@0.50 = 0.63079 - map@0.75 = 0.38468
  > Step 19001 (epoch 472): loss 1 = 0.03140, loss 2 = 0.60341
  > Step 19251 (epoch 478): loss 1 = 0.05276, loss 2 = 0.67274
val eval at step 19500: map@0.50 = 0.58945 - map@0.75 = 0.34476
  > Step 19501 (epoch 484): loss 1 = 0.07033, loss 2 = 0.84072
  > Step 19751 (epoch 490): loss 1 = 0.06013, loss 2 = 0.52155
val eval at step 20000: map@0.50 = 0.64035 - map@0.75 = 0.35936
  > Step 20001 (epoch 496): loss 1 = 0.05429, loss 2 = 0.67654
  > Step 20251 (epoch 503): loss 1 = 0.03478, loss 2 = 0.51133
val eval at step 20500: map@0.50 = 0.67352 - map@0.75 = 0.46034
  > Step 20501 (epoch 509): loss 1 = 0.04636, loss 2 = 0.57228
  > Step 20751 (epoch 515): loss 1 = 0.04456, loss 2 = 0.54163
val eval at step 21000: map@0.50 = 0.65760 - map@0.75 = 0.41623
  > Step 21001 (epoch 521): loss 1 = 0.24607, loss 2 = 0.79300
  > Step 21251 (epoch 527): loss 1 = 0.17415, loss 2 = 0.78146
val eval at step 21500: map@0.50 = 0.64606 - map@0.75 = 0.38117
  > Step 21501 (epoch 534): loss 1 = 0.27297, loss 2 = 1.05591
  > Step 21751 (epoch 540): loss 1 = 0.04752, loss 2 = 0.54594
val eval at step 22000: map@0.50 = 0.65192 - map@0.75 = 0.41582
  > Step 22001 (epoch 546): loss 1 = 0.03945, loss 2 = 0.61295
  > Step 22251 (epoch 552): loss 1 = 0.06438, loss 2 = 0.61030
val eval at step 22500: map@0.50 = 0.61795 - map@0.75 = 0.36603
  > Step 22501 (epoch 558): loss 1 = 0.03936, loss 2 = 0.62145
  > Step 22751 (epoch 565): loss 1 = 0.04440, loss 2 = 0.58373
val eval at step 23000: map@0.50 = 0.62277 - map@0.75 = 0.36578
  > Step 23001 (epoch 571): loss 1 = 0.04487, loss 2 = 0.73547
  > Step 23251 (epoch 577): loss 1 = 0.05438, loss 2 = 0.77088
val eval at step 23500: map@0.50 = 0.63438 - map@0.75 = 0.38279
  > Step 23501 (epoch 583): loss 1 = 0.04753, loss 2 = 0.67298
  > Step 23751 (epoch 589): loss 1 = 0.10723, loss 2 = 0.84085
val eval at step 24000: map@0.50 = 0.60663 - map@0.75 = 0.36516
  > Step 24001 (epoch 596): loss 1 = 0.04576, loss 2 = 0.59227
test eval at step 24200: map@0.50 = 0.64797 - map@0.75 = 0.43420
