============================================================== FOLD 06
Tensorflow version 1.10.1
ODGI - vedai_fold06, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold06
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold06
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold06_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold06_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold06_val
   using grid size [16 16]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold06/tiny-yolov2_odgi_512_64/09-27_16-05

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold06/tiny-yolov2_odgi_512_64/09-27_16-05[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 7.62443, loss 2 = 5.08386
  > Step 251 (epoch 7): loss 1 = 0.78680, loss 2 = 0.66685
val eval at step 500: map@0.50 = 0.15749 - map@0.75 = 0.00907
  > Step 501 (epoch 13): loss 1 = 0.63692, loss 2 = 0.39952
  > Step 751 (epoch 19): loss 1 = 0.40553, loss 2 = 0.33524
val eval at step 1000: map@0.50 = 0.28644 - map@0.75 = 0.03154
  > Step 1001 (epoch 25): loss 1 = 0.33889, loss 2 = 0.27418
  > Step 1251 (epoch 32): loss 1 = 0.20300, loss 2 = 0.28417
val eval at step 1500: map@0.50 = 0.29643 - map@0.75 = 0.06657
  > Step 1501 (epoch 38): loss 1 = 0.19868, loss 2 = 0.35498
  > Step 1751 (epoch 44): loss 1 = 0.17885, loss 2 = 0.24667
val eval at step 2000: map@0.50 = 0.34476 - map@0.75 = 0.06879
  > Step 2001 (epoch 50): loss 1 = 0.32457, loss 2 = 0.31732
  > Step 2251 (epoch 56): loss 1 = 0.25246, loss 2 = 0.26900
val eval at step 2500: map@0.50 = 0.31426 - map@0.75 = 0.05609
  > Step 2501 (epoch 63): loss 1 = 0.17877, loss 2 = 0.23593
  > Step 2751 (epoch 69): loss 1 = 0.14514, loss 2 = 0.26655
val eval at step 3000: map@0.50 = 0.43721 - map@0.75 = 0.17330
  > Step 3001 (epoch 75): loss 1 = 0.20942, loss 2 = 0.33840
  > Step 3251 (epoch 81): loss 1 = 0.12219, loss 2 = 0.24013
val eval at step 3500: map@0.50 = 0.45886 - map@0.75 = 0.17079
  > Step 3501 (epoch 87): loss 1 = 0.16061, loss 2 = 0.19609
  > Step 3751 (epoch 94): loss 1 = 0.18457, loss 2 = 0.25408
val eval at step 4000: map@0.50 = 0.36417 - map@0.75 = 0.05736
  > Step 4001 (epoch 100): loss 1 = 0.30397, loss 2 = 0.28093
  > Step 4251 (epoch 106): loss 1 = 0.14156, loss 2 = 0.17970
val eval at step 4500: map@0.50 = 0.41737 - map@0.75 = 0.04988
  > Step 4501 (epoch 112): loss 1 = 0.12745, loss 2 = 0.17753
  > Step 4751 (epoch 118): loss 1 = 0.09428, loss 2 = 0.18653
val eval at step 5000: map@0.50 = 0.46661 - map@0.75 = 0.14272
  > Step 5001 (epoch 124): loss 1 = 0.09957, loss 2 = 0.20934
  > Step 5251 (epoch 131): loss 1 = 0.11851, loss 2 = 0.19124
val eval at step 5500: map@0.50 = 0.47676 - map@0.75 = 0.17634
  > Step 5501 (epoch 137): loss 1 = 0.11353, loss 2 = 0.17402
  > Step 5751 (epoch 143): loss 1 = 0.08875, loss 2 = 0.19222
val eval at step 6000: map@0.50 = 0.51742 - map@0.75 = 0.16653
  > Step 6001 (epoch 149): loss 1 = 0.11602, loss 2 = 0.16441
  > Step 6251 (epoch 155): loss 1 = 0.32424, loss 2 = 0.19035
val eval at step 6500: map@0.50 = 0.53955 - map@0.75 = 0.21832
  > Step 6501 (epoch 162): loss 1 = 0.12718, loss 2 = 0.17238
  > Step 6751 (epoch 168): loss 1 = 0.09946, loss 2 = 0.19337
val eval at step 7000: map@0.50 = 0.52929 - map@0.75 = 0.19970
  > Step 7001 (epoch 174): loss 1 = 0.09760, loss 2 = 0.13948
  > Step 7251 (epoch 180): loss 1 = 0.07916, loss 2 = 0.16682
val eval at step 7500: map@0.50 = 0.50649 - map@0.75 = 0.16423
  > Step 7501 (epoch 186): loss 1 = 0.07945, loss 2 = 0.14578
  > Step 7751 (epoch 193): loss 1 = 0.08492, loss 2 = 0.12543
val eval at step 8000: map@0.50 = 0.53281 - map@0.75 = 0.19595
  > Step 8001 (epoch 199): loss 1 = 0.18611, loss 2 = 0.12356
  > Step 8251 (epoch 205): loss 1 = 0.08951, loss 2 = 0.14258
val eval at step 8500: map@0.50 = 0.53319 - map@0.75 = 0.17855
  > Step 8501 (epoch 211): loss 1 = 0.07185, loss 2 = 0.16853
  > Step 8751 (epoch 217): loss 1 = 0.07579, loss 2 = 0.08890
val eval at step 9000: map@0.50 = 0.53197 - map@0.75 = 0.18654
  > Step 9001 (epoch 224): loss 1 = 0.06662, loss 2 = 0.15392
  > Step 9251 (epoch 230): loss 1 = 0.06257, loss 2 = 0.10735
val eval at step 9500: map@0.50 = 0.39955 - map@0.75 = 0.16959
  > Step 9501 (epoch 236): loss 1 = 0.34401, loss 2 = 0.22235
  > Step 9751 (epoch 242): loss 1 = 0.09596, loss 2 = 0.10754
val eval at step 10000: map@0.50 = 0.57446 - map@0.75 = 0.23001
  > Step 10001 (epoch 248): loss 1 = 0.07598, loss 2 = 0.11516
  > Step 10251 (epoch 255): loss 1 = 0.07894, loss 2 = 0.14881
val eval at step 10500: map@0.50 = 0.52415 - map@0.75 = 0.20277
  > Step 10501 (epoch 261): loss 1 = 0.06616, loss 2 = 0.14198
  > Step 10751 (epoch 267): loss 1 = 0.09293, loss 2 = 0.13650
val eval at step 11000: map@0.50 = 0.48929 - map@0.75 = 0.19889
  > Step 11001 (epoch 273): loss 1 = 0.06319, loss 2 = 0.16260
  > Step 11251 (epoch 279): loss 1 = 0.05165, loss 2 = 0.10402
val eval at step 11500: map@0.50 = 0.48571 - map@0.75 = 0.16093
  > Step 11501 (epoch 286): loss 1 = 0.14014, loss 2 = 0.10453
  > Step 11751 (epoch 292): loss 1 = 0.16733, loss 2 = 0.10496
val eval at step 12000: map@0.50 = 0.50527 - map@0.75 = 0.20652
  > Step 12001 (epoch 298): loss 1 = 0.08252, loss 2 = 0.17311
  > Step 12251 (epoch 304): loss 1 = 0.04718, loss 2 = 0.10054
val eval at step 12500: map@0.50 = 0.55439 - map@0.75 = 0.19398
  > Step 12501 (epoch 310): loss 1 = 0.07303, loss 2 = 0.09340
  > Step 12751 (epoch 317): loss 1 = 0.06745, loss 2 = 0.12635
val eval at step 13000: map@0.50 = 0.52113 - map@0.75 = 0.18894
  > Step 13001 (epoch 323): loss 1 = 0.06381, loss 2 = 0.08326
  > Step 13251 (epoch 329): loss 1 = 0.13307, loss 2 = 0.16869
val eval at step 13500: map@0.50 = 0.53362 - map@0.75 = 0.22427
  > Step 13501 (epoch 335): loss 1 = 0.07196, loss 2 = 0.10591
  > Step 13751 (epoch 341): loss 1 = 0.06346, loss 2 = 0.10348
val eval at step 14000: map@0.50 = 0.50977 - map@0.75 = 0.19464
  > Step 14001 (epoch 348): loss 1 = 0.05291, loss 2 = 0.10300
  > Step 14251 (epoch 354): loss 1 = 0.06566, loss 2 = 0.14914
val eval at step 14500: map@0.50 = 0.46334 - map@0.75 = 0.13944
  > Step 14501 (epoch 360): loss 1 = 0.04393, loss 2 = 0.10390
  > Step 14751 (epoch 366): loss 1 = 0.04590, loss 2 = 0.07921
val eval at step 15000: map@0.50 = 0.48490 - map@0.75 = 0.17499
  > Step 15001 (epoch 372): loss 1 = 0.04289, loss 2 = 0.09245
  > Step 15251 (epoch 379): loss 1 = 0.04399, loss 2 = 0.08032
val eval at step 15500: map@0.50 = 0.51600 - map@0.75 = 0.20585
  > Step 15501 (epoch 385): loss 1 = 0.05350, loss 2 = 0.09725
  > Step 15751 (epoch 391): loss 1 = 0.07502, loss 2 = 0.15216
val eval at step 16000: map@0.50 = 0.51739 - map@0.75 = 0.24763
  > Step 16001 (epoch 397): loss 1 = 0.04594, loss 2 = 0.09730
  > Step 16251 (epoch 403): loss 1 = 0.04632, loss 2 = 0.08103
val eval at step 16500: map@0.50 = 0.54250 - map@0.75 = 0.18359
  > Step 16501 (epoch 410): loss 1 = 0.05854, loss 2 = 0.10645
  > Step 16751 (epoch 416): loss 1 = 0.07991, loss 2 = 0.06746
val eval at step 17000: map@0.50 = 0.55548 - map@0.75 = 0.25160
  > Step 17001 (epoch 422): loss 1 = 0.04663, loss 2 = 0.08636
  > Step 17251 (epoch 428): loss 1 = 0.05447, loss 2 = 0.11831
val eval at step 17500: map@0.50 = 0.53194 - map@0.75 = 0.23141
  > Step 17501 (epoch 434): loss 1 = 0.22043, loss 2 = 0.21332
  > Step 17751 (epoch 441): loss 1 = 0.06639, loss 2 = 0.09978
val eval at step 18000: map@0.50 = 0.53492 - map@0.75 = 0.20302
  > Step 18001 (epoch 447): loss 1 = 0.04211, loss 2 = 0.08887
  > Step 18251 (epoch 453): loss 1 = 0.03916, loss 2 = 0.06603
val eval at step 18500: map@0.50 = 0.48109 - map@0.75 = 0.19004
  > Step 18501 (epoch 459): loss 1 = 0.05150, loss 2 = 0.06514
  > Step 18751 (epoch 465): loss 1 = 0.03591, loss 2 = 0.07139
val eval at step 19000: map@0.50 = 0.50261 - map@0.75 = 0.19608
  > Step 19001 (epoch 472): loss 1 = 0.04152, loss 2 = 0.05435
  > Step 19251 (epoch 478): loss 1 = 0.03758, loss 2 = 0.07585
val eval at step 19500: map@0.50 = 0.52866 - map@0.75 = 0.18857
  > Step 19501 (epoch 484): loss 1 = 0.07295, loss 2 = 0.08256
  > Step 19751 (epoch 490): loss 1 = 0.03091, loss 2 = 0.09958
val eval at step 20000: map@0.50 = 0.50580 - map@0.75 = 0.22991
  > Step 20001 (epoch 496): loss 1 = 0.05078, loss 2 = 0.07000
  > Step 20251 (epoch 503): loss 1 = 0.03693, loss 2 = 0.08595
val eval at step 20500: map@0.50 = 0.50152 - map@0.75 = 0.18269
  > Step 20501 (epoch 509): loss 1 = 0.03897, loss 2 = 0.09313
  > Step 20751 (epoch 515): loss 1 = 0.04923, loss 2 = 0.06355
val eval at step 21000: map@0.50 = 0.49559 - map@0.75 = 0.21339
  > Step 21001 (epoch 521): loss 1 = 0.03515, loss 2 = 0.07562
  > Step 21251 (epoch 527): loss 1 = 0.06073, loss 2 = 0.06702
val eval at step 21500: map@0.50 = 0.50970 - map@0.75 = 0.15550
  > Step 21501 (epoch 534): loss 1 = 0.34136, loss 2 = 0.13421
  > Step 21751 (epoch 540): loss 1 = 0.05647, loss 2 = 0.05971
val eval at step 22000: map@0.50 = 0.52259 - map@0.75 = 0.19665
  > Step 22001 (epoch 546): loss 1 = 0.04143, loss 2 = 0.06823
  > Step 22251 (epoch 552): loss 1 = 0.02959, loss 2 = 0.06119
val eval at step 22500: map@0.50 = 0.48955 - map@0.75 = 0.16220
  > Step 22501 (epoch 558): loss 1 = 0.03469, loss 2 = 0.03348
  > Step 22751 (epoch 565): loss 1 = 0.03599, loss 2 = 0.10360
val eval at step 23000: map@0.50 = 0.50828 - map@0.75 = 0.17966
  > Step 23001 (epoch 571): loss 1 = 0.02688, loss 2 = 0.07183
  > Step 23251 (epoch 577): loss 1 = 0.04559, loss 2 = 0.06113
val eval at step 23500: map@0.50 = 0.47730 - map@0.75 = 0.17937
  > Step 23501 (epoch 583): loss 1 = 0.02463, loss 2 = 0.08170
  > Step 23751 (epoch 589): loss 1 = 0.03633, loss 2 = 0.06681
val eval at step 24000: map@0.50 = 0.50615 - map@0.75 = 0.21183
  > Step 24001 (epoch 596): loss 1 = 0.05132, loss 2 = 0.05309
test eval at step 24200: map@0.50 = 0.44617 - map@0.75 = 0.15045
