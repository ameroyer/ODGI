============================================================== FOLD 03
Tensorflow version 1.10.1
ODGI - vedai_fold03, Input size 128

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold03
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold03
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold03_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold03_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold03_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold03/tiny-yolov2_odgi_128_64/09-28_10-21

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold03/tiny-yolov2_odgi_128_64/09-28_10-21[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 8.33887, loss 2 = 12.45185
  > Step 251 (epoch 7): loss 1 = 0.94668, loss 2 = 0.60515
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.58467, loss 2 = 0.37745
  > Step 751 (epoch 19): loss 1 = 0.35339, loss 2 = 0.47324
val eval at step 1000: map@0.50 = 0.00482 - map@0.75 = 0.00275
  > Step 1001 (epoch 25): loss 1 = 0.24892, loss 2 = 0.36963
  > Step 1251 (epoch 32): loss 1 = 0.22479, loss 2 = 0.36795
val eval at step 1500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 1501 (epoch 38): loss 1 = 0.20382, loss 2 = 0.34862
  > Step 1751 (epoch 44): loss 1 = 0.24094, loss 2 = 0.44382
val eval at step 2000: map@0.50 = 0.01033 - map@0.75 = 0.00000
  > Step 2001 (epoch 50): loss 1 = 0.27403, loss 2 = 0.35011
  > Step 2251 (epoch 56): loss 1 = 0.22587, loss 2 = 0.35994
val eval at step 2500: map@0.50 = 0.02996 - map@0.75 = 0.00413
  > Step 2501 (epoch 63): loss 1 = 0.25698, loss 2 = 0.36126
  > Step 2751 (epoch 69): loss 1 = 0.29261, loss 2 = 0.36611
val eval at step 3000: map@0.50 = 0.04056 - map@0.75 = 0.01033
  > Step 3001 (epoch 75): loss 1 = 0.18034, loss 2 = 0.35444
  > Step 3251 (epoch 81): loss 1 = 0.19065, loss 2 = 0.31696
val eval at step 3500: map@0.50 = 0.04063 - map@0.75 = 0.00083
  > Step 3501 (epoch 87): loss 1 = 0.41372, loss 2 = 0.29734
  > Step 3751 (epoch 94): loss 1 = 0.25493, loss 2 = 0.32613
val eval at step 4000: map@0.50 = 0.04009 - map@0.75 = 0.00482
  > Step 4001 (epoch 100): loss 1 = 0.25517, loss 2 = 0.31014
  > Step 4251 (epoch 106): loss 1 = 0.22988, loss 2 = 0.34588
val eval at step 4500: map@0.50 = 0.05394 - map@0.75 = 0.00138
  > Step 4501 (epoch 112): loss 1 = 0.25172, loss 2 = 0.35441
  > Step 4751 (epoch 118): loss 1 = 0.19426, loss 2 = 0.28362
val eval at step 5000: map@0.50 = 0.05141 - map@0.75 = 0.00826
  > Step 5001 (epoch 124): loss 1 = 0.21849, loss 2 = 0.37397
  > Step 5251 (epoch 131): loss 1 = 0.42715, loss 2 = 0.34173
val eval at step 5500: map@0.50 = 0.00207 - map@0.75 = 0.00000
  > Step 5501 (epoch 137): loss 1 = 0.17613, loss 2 = 0.26642
  > Step 5751 (epoch 143): loss 1 = 0.15056, loss 2 = 0.28488
val eval at step 6000: map@0.50 = 0.06541 - map@0.75 = 0.01692
  > Step 6001 (epoch 149): loss 1 = 0.28179, loss 2 = 0.25016
  > Step 6251 (epoch 155): loss 1 = 0.19828, loss 2 = 0.30614
val eval at step 6500: map@0.50 = 0.08568 - map@0.75 = 0.01446
  > Step 6501 (epoch 162): loss 1 = 0.21265, loss 2 = 0.23415
  > Step 6751 (epoch 168): loss 1 = 0.20390, loss 2 = 0.23482
val eval at step 7000: map@0.50 = 0.06185 - map@0.75 = 0.00000
  > Step 7001 (epoch 174): loss 1 = 0.21788, loss 2 = 0.31261
  > Step 7251 (epoch 180): loss 1 = 0.23146, loss 2 = 0.25372
val eval at step 7500: map@0.50 = 0.01377 - map@0.75 = 0.00000
  > Step 7501 (epoch 186): loss 1 = 0.26886, loss 2 = 0.32520
  > Step 7751 (epoch 193): loss 1 = 0.25563, loss 2 = 0.29621
val eval at step 8000: map@0.50 = 0.09194 - map@0.75 = 0.00186
  > Step 8001 (epoch 199): loss 1 = 0.15425, loss 2 = 0.26308
  > Step 8251 (epoch 205): loss 1 = 0.27485, loss 2 = 0.27802
val eval at step 8500: map@0.50 = 0.09570 - map@0.75 = 0.00000
  > Step 8501 (epoch 211): loss 1 = 0.20900, loss 2 = 0.28022
  > Step 8751 (epoch 217): loss 1 = 0.17924, loss 2 = 0.22980
val eval at step 9000: map@0.50 = 0.05317 - map@0.75 = 0.00826
  > Step 9001 (epoch 224): loss 1 = 0.18569, loss 2 = 0.24147
  > Step 9251 (epoch 230): loss 1 = 0.20176, loss 2 = 0.21304
val eval at step 9500: map@0.50 = 0.08750 - map@0.75 = 0.00431
  > Step 9501 (epoch 236): loss 1 = 0.15459, loss 2 = 0.24319
  > Step 9751 (epoch 242): loss 1 = 0.19344, loss 2 = 0.19829
val eval at step 10000: map@0.50 = 0.10720 - map@0.75 = 0.01818
  > Step 10001 (epoch 248): loss 1 = 0.19388, loss 2 = 0.22267
  > Step 10251 (epoch 255): loss 1 = 0.42735, loss 2 = 0.24917
val eval at step 10500: map@0.50 = 0.10284 - map@0.75 = 0.00138
  > Step 10501 (epoch 261): loss 1 = 0.25121, loss 2 = 0.24784
  > Step 10751 (epoch 267): loss 1 = 0.17739, loss 2 = 0.20349
val eval at step 11000: map@0.50 = 0.10758 - map@0.75 = 0.00628
  > Step 11001 (epoch 273): loss 1 = 0.16973, loss 2 = 0.19318
  > Step 11251 (epoch 279): loss 1 = 0.29702, loss 2 = 0.19399
val eval at step 11500: map@0.50 = 0.10895 - map@0.75 = 0.00165
  > Step 11501 (epoch 286): loss 1 = 0.17360, loss 2 = 0.20535
  > Step 11751 (epoch 292): loss 1 = 0.19043, loss 2 = 0.16723
val eval at step 12000: map@0.50 = 0.11584 - map@0.75 = 0.01336
  > Step 12001 (epoch 298): loss 1 = 0.15510, loss 2 = 0.19972
  > Step 12251 (epoch 304): loss 1 = 0.16634, loss 2 = 0.21846
val eval at step 12500: map@0.50 = 0.12318 - map@0.75 = 0.01570
  > Step 12501 (epoch 310): loss 1 = 0.22470, loss 2 = 0.17556
  > Step 12751 (epoch 317): loss 1 = 0.17743, loss 2 = 0.17097
val eval at step 13000: map@0.50 = 0.11951 - map@0.75 = 0.00523
  > Step 13001 (epoch 323): loss 1 = 0.20301, loss 2 = 0.22749
  > Step 13251 (epoch 329): loss 1 = 0.19682, loss 2 = 0.15949
val eval at step 13500: map@0.50 = 0.10530 - map@0.75 = 0.01736
  > Step 13501 (epoch 335): loss 1 = 0.19512, loss 2 = 0.19207
  > Step 13751 (epoch 341): loss 1 = 0.27997, loss 2 = 0.19252
val eval at step 14000: map@0.50 = 0.12131 - map@0.75 = 0.02025
  > Step 14001 (epoch 348): loss 1 = 0.22167, loss 2 = 0.21085
  > Step 14251 (epoch 354): loss 1 = 0.15746, loss 2 = 0.11160
val eval at step 14500: map@0.50 = 0.09906 - map@0.75 = 0.01198
  > Step 14501 (epoch 360): loss 1 = 0.16576, loss 2 = 0.16558
  > Step 14751 (epoch 366): loss 1 = 0.20863, loss 2 = 0.20380
val eval at step 15000: map@0.50 = 0.08730 - map@0.75 = 0.01405
  > Step 15001 (epoch 372): loss 1 = 0.19424, loss 2 = 0.17584
  > Step 15251 (epoch 379): loss 1 = 0.20049, loss 2 = 0.20858
val eval at step 15500: map@0.50 = 0.10879 - map@0.75 = 0.01488
  > Step 15501 (epoch 385): loss 1 = 0.17601, loss 2 = 0.17122
  > Step 15751 (epoch 391): loss 1 = 0.16669, loss 2 = 0.16415
val eval at step 16000: map@0.50 = 0.12835 - map@0.75 = 0.02410
  > Step 16001 (epoch 397): loss 1 = 0.17242, loss 2 = 0.19624
  > Step 16251 (epoch 403): loss 1 = 0.15184, loss 2 = 0.16698
val eval at step 16500: map@0.50 = 0.12087 - map@0.75 = 0.01198
  > Step 16501 (epoch 410): loss 1 = 0.24876, loss 2 = 0.17264
  > Step 16751 (epoch 416): loss 1 = 0.14658, loss 2 = 0.12408
val eval at step 17000: map@0.50 = 0.11642 - map@0.75 = 0.01523
  > Step 17001 (epoch 422): loss 1 = 0.11809, loss 2 = 0.15836
  > Step 17251 (epoch 428): loss 1 = 0.20341, loss 2 = 0.16258
val eval at step 17500: map@0.50 = 0.13575 - map@0.75 = 0.02273
  > Step 17501 (epoch 434): loss 1 = 0.17691, loss 2 = 0.17943
  > Step 17751 (epoch 441): loss 1 = 0.15036, loss 2 = 0.17604
val eval at step 18000: map@0.50 = 0.13835 - map@0.75 = 0.02046
  > Step 18001 (epoch 447): loss 1 = 0.14105, loss 2 = 0.19092
  > Step 18251 (epoch 453): loss 1 = 0.11134, loss 2 = 0.16478
val eval at step 18500: map@0.50 = 0.10297 - map@0.75 = 0.01515
  > Step 18501 (epoch 459): loss 1 = 0.13282, loss 2 = 0.23629
  > Step 18751 (epoch 465): loss 1 = 0.25787, loss 2 = 0.19571
val eval at step 19000: map@0.50 = 0.14346 - map@0.75 = 0.01977
  > Step 19001 (epoch 472): loss 1 = 0.18178, loss 2 = 0.18571
  > Step 19251 (epoch 478): loss 1 = 0.14893, loss 2 = 0.14988
val eval at step 19500: map@0.50 = 0.14943 - map@0.75 = 0.01204
  > Step 19501 (epoch 484): loss 1 = 0.25359, loss 2 = 0.16049
  > Step 19751 (epoch 490): loss 1 = 0.15243, loss 2 = 0.13316
val eval at step 20000: map@0.50 = 0.13167 - map@0.75 = 0.02831
  > Step 20001 (epoch 496): loss 1 = 0.18488, loss 2 = 0.17282
  > Step 20251 (epoch 503): loss 1 = 0.15306, loss 2 = 0.15727
val eval at step 20500: map@0.50 = 0.11503 - map@0.75 = 0.00826
  > Step 20501 (epoch 509): loss 1 = 0.12040, loss 2 = 0.12801
  > Step 20751 (epoch 515): loss 1 = 0.11240, loss 2 = 0.11546
val eval at step 21000: map@0.50 = 0.11000 - map@0.75 = 0.01667
  > Step 21001 (epoch 521): loss 1 = 0.20653, loss 2 = 0.12696
  > Step 21251 (epoch 527): loss 1 = 0.16002, loss 2 = 0.14224
val eval at step 21500: map@0.50 = 0.15383 - map@0.75 = 0.03030
  > Step 21501 (epoch 534): loss 1 = 0.14633, loss 2 = 0.18736
  > Step 21751 (epoch 540): loss 1 = 0.16252, loss 2 = 0.15623
val eval at step 22000: map@0.50 = 0.15975 - map@0.75 = 0.00999
  > Step 22001 (epoch 546): loss 1 = 0.15825, loss 2 = 0.12061
  > Step 22251 (epoch 552): loss 1 = 0.21748, loss 2 = 0.14423
val eval at step 22500: map@0.50 = 0.12111 - map@0.75 = 0.00950
  > Step 22501 (epoch 558): loss 1 = 0.19387, loss 2 = 0.15975
  > Step 22751 (epoch 565): loss 1 = 0.14767, loss 2 = 0.14880
val eval at step 23000: map@0.50 = 0.11509 - map@0.75 = 0.01371
  > Step 23001 (epoch 571): loss 1 = 0.13756, loss 2 = 0.15242
  > Step 23251 (epoch 577): loss 1 = 0.13514, loss 2 = 0.11943
val eval at step 23500: map@0.50 = 0.12198 - map@0.75 = 0.00528
  > Step 23501 (epoch 583): loss 1 = 0.11307, loss 2 = 0.17489
  > Step 23751 (epoch 589): loss 1 = 0.13638, loss 2 = 0.14680
val eval at step 24000: map@0.50 = 0.12479 - map@0.75 = 0.02713
  > Step 24001 (epoch 596): loss 1 = 0.15341, loss 2 = 0.13329
test eval at step 24200: map@0.50 = 0.14515 - map@0.75 = 0.01240
