============================================================== FOLD 04
Tensorflow version 1.10.1
ODGI - vedai_fold04, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold04
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold04
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold04_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold04_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold04_val
   using grid size [8 8]
   using grid size [4 4]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 4, 4, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold04/tiny-yolov2_odgi_256_128/09-28_16-43

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold04/tiny-yolov2_odgi_256_128/09-28_16-43[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 6.53407, loss 2 = 6.37409
  > Step 251 (epoch 7): loss 1 = 0.67610, loss 2 = 0.69746
val eval at step 500: map@0.50 = 0.02032 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.43674, loss 2 = 0.54997
  > Step 751 (epoch 19): loss 1 = 0.43885, loss 2 = 0.53798
val eval at step 1000: map@0.50 = 0.07955 - map@0.75 = 0.00990
  > Step 1001 (epoch 25): loss 1 = 0.25203, loss 2 = 0.48433
  > Step 1251 (epoch 32): loss 1 = 0.28434, loss 2 = 0.56911
val eval at step 1500: map@0.50 = 0.11421 - map@0.75 = 0.00898
  > Step 1501 (epoch 38): loss 1 = 0.21910, loss 2 = 0.55582
  > Step 1751 (epoch 44): loss 1 = 0.18023, loss 2 = 0.48379
val eval at step 2000: map@0.50 = 0.15115 - map@0.75 = 0.01653
  > Step 2001 (epoch 50): loss 1 = 0.31615, loss 2 = 0.32331
  > Step 2251 (epoch 56): loss 1 = 0.21082, loss 2 = 0.37502
val eval at step 2500: map@0.50 = 0.27344 - map@0.75 = 0.05727
  > Step 2501 (epoch 63): loss 1 = 0.19581, loss 2 = 0.29113
  > Step 2751 (epoch 69): loss 1 = 0.18330, loss 2 = 0.39557
val eval at step 3000: map@0.50 = 0.37026 - map@0.75 = 0.11090
  > Step 3001 (epoch 75): loss 1 = 0.21170, loss 2 = 0.39912
  > Step 3251 (epoch 81): loss 1 = 0.18829, loss 2 = 0.32676
val eval at step 3500: map@0.50 = 0.35408 - map@0.75 = 0.07527
  > Step 3501 (epoch 87): loss 1 = 0.19301, loss 2 = 0.32764
  > Step 3751 (epoch 94): loss 1 = 0.22434, loss 2 = 0.25252
val eval at step 4000: map@0.50 = 0.28631 - map@0.75 = 0.09476
  > Step 4001 (epoch 100): loss 1 = 0.33386, loss 2 = 0.34520
  > Step 4251 (epoch 106): loss 1 = 0.21673, loss 2 = 0.29456
val eval at step 4500: map@0.50 = 0.40454 - map@0.75 = 0.08954
  > Step 4501 (epoch 112): loss 1 = 0.13368, loss 2 = 0.31006
  > Step 4751 (epoch 118): loss 1 = 0.17449, loss 2 = 0.29937
val eval at step 5000: map@0.50 = 0.43465 - map@0.75 = 0.13568
  > Step 5001 (epoch 124): loss 1 = 0.14759, loss 2 = 0.26891
  > Step 5251 (epoch 131): loss 1 = 0.21931, loss 2 = 0.31057
val eval at step 5500: map@0.50 = 0.19418 - map@0.75 = 0.01744
  > Step 5501 (epoch 137): loss 1 = 0.66704, loss 2 = 0.36402
  > Step 5751 (epoch 143): loss 1 = 0.16912, loss 2 = 0.33506
val eval at step 6000: map@0.50 = 0.42428 - map@0.75 = 0.10321
  > Step 6001 (epoch 149): loss 1 = 0.15777, loss 2 = 0.25628
  > Step 6251 (epoch 155): loss 1 = 0.16912, loss 2 = 0.22222
val eval at step 6500: map@0.50 = 0.46684 - map@0.75 = 0.13917
  > Step 6501 (epoch 162): loss 1 = 0.11952, loss 2 = 0.31758
  > Step 6751 (epoch 168): loss 1 = 0.11711, loss 2 = 0.22804
val eval at step 7000: map@0.50 = 0.44949 - map@0.75 = 0.14925
  > Step 7001 (epoch 174): loss 1 = 0.13612, loss 2 = 0.22619
  > Step 7251 (epoch 180): loss 1 = 0.13595, loss 2 = 0.22776
val eval at step 7500: map@0.50 = 0.47142 - map@0.75 = 0.14631
  > Step 7501 (epoch 186): loss 1 = 0.14099, loss 2 = 0.25627
  > Step 7751 (epoch 193): loss 1 = 0.15546, loss 2 = 0.21704
val eval at step 8000: map@0.50 = 0.42741 - map@0.75 = 0.08337
  > Step 8001 (epoch 199): loss 1 = 0.13246, loss 2 = 0.19804
  > Step 8251 (epoch 205): loss 1 = 0.49394, loss 2 = 0.29313
val eval at step 8500: map@0.50 = 0.45993 - map@0.75 = 0.17885
  > Step 8501 (epoch 211): loss 1 = 0.15407, loss 2 = 0.24686
  > Step 8751 (epoch 217): loss 1 = 0.12765, loss 2 = 0.22526
val eval at step 9000: map@0.50 = 0.46661 - map@0.75 = 0.16220
  > Step 9001 (epoch 224): loss 1 = 0.15235, loss 2 = 0.22396
  > Step 9251 (epoch 230): loss 1 = 0.12925, loss 2 = 0.23956
val eval at step 9500: map@0.50 = 0.48665 - map@0.75 = 0.16931
  > Step 9501 (epoch 236): loss 1 = 0.13927, loss 2 = 0.24356
  > Step 9751 (epoch 242): loss 1 = 0.13023, loss 2 = 0.19830
val eval at step 10000: map@0.50 = 0.43745 - map@0.75 = 0.14602
  > Step 10001 (epoch 248): loss 1 = 0.15230, loss 2 = 0.19343
  > Step 10251 (epoch 255): loss 1 = 0.12912, loss 2 = 0.18837
val eval at step 10500: map@0.50 = 0.47422 - map@0.75 = 0.17387
  > Step 10501 (epoch 261): loss 1 = 0.09616, loss 2 = 0.21414
  > Step 10751 (epoch 267): loss 1 = 0.09995, loss 2 = 0.18985
val eval at step 11000: map@0.50 = 0.48376 - map@0.75 = 0.18087
  > Step 11001 (epoch 273): loss 1 = 0.15462, loss 2 = 0.24603
  > Step 11251 (epoch 279): loss 1 = 0.10798, loss 2 = 0.22193
val eval at step 11500: map@0.50 = 0.46746 - map@0.75 = 0.15441
  > Step 11501 (epoch 286): loss 1 = 0.11314, loss 2 = 0.15876
  > Step 11751 (epoch 292): loss 1 = 0.12624, loss 2 = 0.16860
val eval at step 12000: map@0.50 = 0.43360 - map@0.75 = 0.06510
  > Step 12001 (epoch 298): loss 1 = 0.19496, loss 2 = 0.24065
  > Step 12251 (epoch 304): loss 1 = 0.15099, loss 2 = 0.19835
val eval at step 12500: map@0.50 = 0.46865 - map@0.75 = 0.16368
  > Step 12501 (epoch 310): loss 1 = 0.10389, loss 2 = 0.24126
  > Step 12751 (epoch 317): loss 1 = 0.07753, loss 2 = 0.22197
val eval at step 13000: map@0.50 = 0.46432 - map@0.75 = 0.14032
  > Step 13001 (epoch 323): loss 1 = 0.08701, loss 2 = 0.18084
  > Step 13251 (epoch 329): loss 1 = 0.09710, loss 2 = 0.20143
val eval at step 13500: map@0.50 = 0.46486 - map@0.75 = 0.19739
  > Step 13501 (epoch 335): loss 1 = 0.10087, loss 2 = 0.14787
  > Step 13751 (epoch 341): loss 1 = 0.08987, loss 2 = 0.18592
val eval at step 14000: map@0.50 = 0.47544 - map@0.75 = 0.19096
  > Step 14001 (epoch 348): loss 1 = 0.08413, loss 2 = 0.20708
  > Step 14251 (epoch 354): loss 1 = 0.11667, loss 2 = 0.23033
val eval at step 14500: map@0.50 = 0.49846 - map@0.75 = 0.17125
  > Step 14501 (epoch 360): loss 1 = 0.11752, loss 2 = 0.16873
  > Step 14751 (epoch 366): loss 1 = 0.13417, loss 2 = 0.18010
val eval at step 15000: map@0.50 = 0.48048 - map@0.75 = 0.19095
  > Step 15001 (epoch 372): loss 1 = 0.09015, loss 2 = 0.19262
  > Step 15251 (epoch 379): loss 1 = 0.11182, loss 2 = 0.17254
val eval at step 15500: map@0.50 = 0.50912 - map@0.75 = 0.19563
  > Step 15501 (epoch 385): loss 1 = 0.08817, loss 2 = 0.20813
  > Step 15751 (epoch 391): loss 1 = 0.09221, loss 2 = 0.15451
val eval at step 16000: map@0.50 = 0.52848 - map@0.75 = 0.18609
  > Step 16001 (epoch 397): loss 1 = 0.11196, loss 2 = 0.15844
  > Step 16251 (epoch 403): loss 1 = 0.25291, loss 2 = 0.23118
val eval at step 16500: map@0.50 = 0.50115 - map@0.75 = 0.17367
  > Step 16501 (epoch 410): loss 1 = 0.12687, loss 2 = 0.20322
  > Step 16751 (epoch 416): loss 1 = 0.11982, loss 2 = 0.22090
val eval at step 17000: map@0.50 = 0.48735 - map@0.75 = 0.16294
  > Step 17001 (epoch 422): loss 1 = 0.04924, loss 2 = 0.17354
  > Step 17251 (epoch 428): loss 1 = 0.08255, loss 2 = 0.18385
val eval at step 17500: map@0.50 = 0.45868 - map@0.75 = 0.15776
  > Step 17501 (epoch 434): loss 1 = 0.12867, loss 2 = 0.16528
  > Step 17751 (epoch 441): loss 1 = 0.06217, loss 2 = 0.16452
val eval at step 18000: map@0.50 = 0.45196 - map@0.75 = 0.13412
  > Step 18001 (epoch 447): loss 1 = 0.10960, loss 2 = 0.23334
  > Step 18251 (epoch 453): loss 1 = 0.10793, loss 2 = 0.15005
val eval at step 18500: map@0.50 = 0.51690 - map@0.75 = 0.20350
  > Step 18501 (epoch 459): loss 1 = 0.07193, loss 2 = 0.19128
  > Step 18751 (epoch 465): loss 1 = 0.04714, loss 2 = 0.20531
val eval at step 19000: map@0.50 = 0.49184 - map@0.75 = 0.18627
  > Step 19001 (epoch 472): loss 1 = 0.08000, loss 2 = 0.17923
  > Step 19251 (epoch 478): loss 1 = 0.07307, loss 2 = 0.15226
val eval at step 19500: map@0.50 = 0.46438 - map@0.75 = 0.17528
  > Step 19501 (epoch 484): loss 1 = 0.08913, loss 2 = 0.14074
  > Step 19751 (epoch 490): loss 1 = 0.10638, loss 2 = 0.21258
val eval at step 20000: map@0.50 = 0.49892 - map@0.75 = 0.14996
  > Step 20001 (epoch 496): loss 1 = 0.06579, loss 2 = 0.14855
  > Step 20251 (epoch 503): loss 1 = 0.09071, loss 2 = 0.20850
val eval at step 20500: map@0.50 = 0.45448 - map@0.75 = 0.16340
  > Step 20501 (epoch 509): loss 1 = 0.07809, loss 2 = 0.13757
  > Step 20751 (epoch 515): loss 1 = 0.12679, loss 2 = 0.18192
val eval at step 21000: map@0.50 = 0.45682 - map@0.75 = 0.14223
  > Step 21001 (epoch 521): loss 1 = 0.12836, loss 2 = 0.18743
  > Step 21251 (epoch 527): loss 1 = 0.06066, loss 2 = 0.15634
val eval at step 21500: map@0.50 = 0.44788 - map@0.75 = 0.17819
  > Step 21501 (epoch 534): loss 1 = 0.08453, loss 2 = 0.15855
  > Step 21751 (epoch 540): loss 1 = 0.08860, loss 2 = 0.16831
val eval at step 22000: map@0.50 = 0.45663 - map@0.75 = 0.15020
  > Step 22001 (epoch 546): loss 1 = 0.07114, loss 2 = 0.10704
  > Step 22251 (epoch 552): loss 1 = 0.08292, loss 2 = 0.14081
val eval at step 22500: map@0.50 = 0.43914 - map@0.75 = 0.15489
  > Step 22501 (epoch 558): loss 1 = 0.06870, loss 2 = 0.21263
  > Step 22751 (epoch 565): loss 1 = 0.05601, loss 2 = 0.19992
val eval at step 23000: map@0.50 = 0.46078 - map@0.75 = 0.19990
  > Step 23001 (epoch 571): loss 1 = 0.07041, loss 2 = 0.15685
  > Step 23251 (epoch 577): loss 1 = 0.05521, loss 2 = 0.17770
val eval at step 23500: map@0.50 = 0.48239 - map@0.75 = 0.17988
  > Step 23501 (epoch 583): loss 1 = 0.07338, loss 2 = 0.16433
  > Step 23751 (epoch 589): loss 1 = 0.10443, loss 2 = 0.14947
val eval at step 24000: map@0.50 = 0.46356 - map@0.75 = 0.18361
  > Step 24001 (epoch 596): loss 1 = 0.05845, loss 2 = 0.16703
test eval at step 24200: map@0.50 = 0.51566 - map@0.75 = 0.19259
