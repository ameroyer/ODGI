============================================================== FOLD 07
Tensorflow version 1.10.1
ODGI - vedai_fold07, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold07
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold07
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold07_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold07_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold07_val
   using grid size [16 16]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold07/tiny-yolov2_odgi_512_64/09-27_16-00

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold07/tiny-yolov2_odgi_512_64/09-27_16-00[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 6.89948, loss 2 = 10.84631
  > Step 251 (epoch 7): loss 1 = 0.71010, loss 2 = 0.53402
val eval at step 500: map@0.50 = 0.13679 - map@0.75 = 0.00480
  > Step 501 (epoch 13): loss 1 = 0.61529, loss 2 = 0.42269
  > Step 751 (epoch 19): loss 1 = 0.43592, loss 2 = 0.33042
val eval at step 1000: map@0.50 = 0.20331 - map@0.75 = 0.01753
  > Step 1001 (epoch 25): loss 1 = 0.26060, loss 2 = 0.37106
  > Step 1251 (epoch 32): loss 1 = 0.20923, loss 2 = 0.25474
val eval at step 1500: map@0.50 = 0.24437 - map@0.75 = 0.04589
  > Step 1501 (epoch 38): loss 1 = 0.19988, loss 2 = 0.29577
  > Step 1751 (epoch 44): loss 1 = 0.19851, loss 2 = 0.30607
val eval at step 2000: map@0.50 = 0.31903 - map@0.75 = 0.03937
  > Step 2001 (epoch 50): loss 1 = 0.19166, loss 2 = 0.25486
  > Step 2251 (epoch 56): loss 1 = 0.24702, loss 2 = 0.31432
val eval at step 2500: map@0.50 = 0.34771 - map@0.75 = 0.04567
  > Step 2501 (epoch 63): loss 1 = 0.27245, loss 2 = 0.33087
  > Step 2751 (epoch 69): loss 1 = 0.14892, loss 2 = 0.22238
val eval at step 3000: map@0.50 = 0.42171 - map@0.75 = 0.08130
  > Step 3001 (epoch 75): loss 1 = 0.16412, loss 2 = 0.19269
  > Step 3251 (epoch 81): loss 1 = 0.13587, loss 2 = 0.31008
val eval at step 3500: map@0.50 = 0.47451 - map@0.75 = 0.12954
  > Step 3501 (epoch 87): loss 1 = 0.31518, loss 2 = 0.23753
  > Step 3751 (epoch 94): loss 1 = 0.14773, loss 2 = 0.24738
val eval at step 4000: map@0.50 = 0.44334 - map@0.75 = 0.13486
  > Step 4001 (epoch 100): loss 1 = 0.10843, loss 2 = 0.19230
  > Step 4251 (epoch 106): loss 1 = 0.18095, loss 2 = 0.21067
val eval at step 4500: map@0.50 = 0.40535 - map@0.75 = 0.13265
  > Step 4501 (epoch 112): loss 1 = 0.21029, loss 2 = 0.23318
  > Step 4751 (epoch 118): loss 1 = 0.39626, loss 2 = 0.22055
val eval at step 5000: map@0.50 = 0.49107 - map@0.75 = 0.20864
  > Step 5001 (epoch 124): loss 1 = 0.13829, loss 2 = 0.14112
  > Step 5251 (epoch 131): loss 1 = 0.14886, loss 2 = 0.19927
val eval at step 5500: map@0.50 = 0.46705 - map@0.75 = 0.14902
  > Step 5501 (epoch 137): loss 1 = 0.11806, loss 2 = 0.16075
  > Step 5751 (epoch 143): loss 1 = 0.08862, loss 2 = 0.17393
val eval at step 6000: map@0.50 = 0.49022 - map@0.75 = 0.15000
  > Step 6001 (epoch 149): loss 1 = 0.11172, loss 2 = 0.20252
  > Step 6251 (epoch 155): loss 1 = 0.08239, loss 2 = 0.14634
val eval at step 6500: map@0.50 = 0.52068 - map@0.75 = 0.21485
  > Step 6501 (epoch 162): loss 1 = 0.10383, loss 2 = 0.18942
  > Step 6751 (epoch 168): loss 1 = 0.09315, loss 2 = 0.19999
val eval at step 7000: map@0.50 = 0.51262 - map@0.75 = 0.21603
  > Step 7001 (epoch 174): loss 1 = 0.13418, loss 2 = 0.15242
  > Step 7251 (epoch 180): loss 1 = 0.08439, loss 2 = 0.13586
val eval at step 7500: map@0.50 = 0.44442 - map@0.75 = 0.15003
  > Step 7501 (epoch 186): loss 1 = 0.38636, loss 2 = 0.20422
  > Step 7751 (epoch 193): loss 1 = 0.34257, loss 2 = 0.13975
val eval at step 8000: map@0.50 = 0.51140 - map@0.75 = 0.15494
  > Step 8001 (epoch 199): loss 1 = 0.07665, loss 2 = 0.14089
  > Step 8251 (epoch 205): loss 1 = 0.09108, loss 2 = 0.11853
val eval at step 8500: map@0.50 = 0.51087 - map@0.75 = 0.14729
  > Step 8501 (epoch 211): loss 1 = 0.06734, loss 2 = 0.11583
  > Step 8751 (epoch 217): loss 1 = 0.05927, loss 2 = 0.10226
val eval at step 9000: map@0.50 = 0.50521 - map@0.75 = 0.15675
  > Step 9001 (epoch 224): loss 1 = 0.05764, loss 2 = 0.15214
  > Step 9251 (epoch 230): loss 1 = 0.05457, loss 2 = 0.09644
val eval at step 9500: map@0.50 = 0.43670 - map@0.75 = 0.14329
  > Step 9501 (epoch 236): loss 1 = 0.09389, loss 2 = 0.16079
  > Step 9751 (epoch 242): loss 1 = 0.07015, loss 2 = 0.09831
val eval at step 10000: map@0.50 = 0.48715 - map@0.75 = 0.18171
  > Step 10001 (epoch 248): loss 1 = 0.06799, loss 2 = 0.12775
  > Step 10251 (epoch 255): loss 1 = 0.07396, loss 2 = 0.10571
val eval at step 10500: map@0.50 = 0.47405 - map@0.75 = 0.18247
  > Step 10501 (epoch 261): loss 1 = 0.07679, loss 2 = 0.12474
  > Step 10751 (epoch 267): loss 1 = 0.06215, loss 2 = 0.08471
val eval at step 11000: map@0.50 = 0.49460 - map@0.75 = 0.11891
  > Step 11001 (epoch 273): loss 1 = 0.07356, loss 2 = 0.14233
  > Step 11251 (epoch 279): loss 1 = 0.19171, loss 2 = 0.13840
val eval at step 11500: map@0.50 = 0.49242 - map@0.75 = 0.18224
  > Step 11501 (epoch 286): loss 1 = 0.07143, loss 2 = 0.11831
  > Step 11751 (epoch 292): loss 1 = 0.06180, loss 2 = 0.08322
val eval at step 12000: map@0.50 = 0.49183 - map@0.75 = 0.14025
  > Step 12001 (epoch 298): loss 1 = 0.06569, loss 2 = 0.09596
  > Step 12251 (epoch 304): loss 1 = 0.06018, loss 2 = 0.12237
val eval at step 12500: map@0.50 = 0.48566 - map@0.75 = 0.20964
  > Step 12501 (epoch 310): loss 1 = 0.06526, loss 2 = 0.11189
  > Step 12751 (epoch 317): loss 1 = 0.04790, loss 2 = 0.09981
val eval at step 13000: map@0.50 = 0.46433 - map@0.75 = 0.14763
  > Step 13001 (epoch 323): loss 1 = 0.06608, loss 2 = 0.10300
  > Step 13251 (epoch 329): loss 1 = 0.04781, loss 2 = 0.10893
val eval at step 13500: map@0.50 = 0.48679 - map@0.75 = 0.19649
  > Step 13501 (epoch 335): loss 1 = 0.04755, loss 2 = 0.09123
  > Step 13751 (epoch 341): loss 1 = 0.04443, loss 2 = 0.07563
val eval at step 14000: map@0.50 = 0.47642 - map@0.75 = 0.17561
  > Step 14001 (epoch 348): loss 1 = 0.05528, loss 2 = 0.09527
  > Step 14251 (epoch 354): loss 1 = 0.06621, loss 2 = 0.12493
val eval at step 14500: map@0.50 = 0.49534 - map@0.75 = 0.14870
  > Step 14501 (epoch 360): loss 1 = 0.06377, loss 2 = 0.08741
  > Step 14751 (epoch 366): loss 1 = 0.05378, loss 2 = 0.10044
val eval at step 15000: map@0.50 = 0.51984 - map@0.75 = 0.15641
  > Step 15001 (epoch 372): loss 1 = 0.04838, loss 2 = 0.10995
  > Step 15251 (epoch 379): loss 1 = 0.06186, loss 2 = 0.09778
val eval at step 15500: map@0.50 = 0.50058 - map@0.75 = 0.18768
  > Step 15501 (epoch 385): loss 1 = 0.03939, loss 2 = 0.05883
  > Step 15751 (epoch 391): loss 1 = 0.04755, loss 2 = 0.08183
val eval at step 16000: map@0.50 = 0.50606 - map@0.75 = 0.21991
  > Step 16001 (epoch 397): loss 1 = 0.04987, loss 2 = 0.05355
  > Step 16251 (epoch 403): loss 1 = 0.06184, loss 2 = 0.12080
val eval at step 16500: map@0.50 = 0.55254 - map@0.75 = 0.26773
  > Step 16501 (epoch 410): loss 1 = 0.17667, loss 2 = 0.11145
  > Step 16751 (epoch 416): loss 1 = 0.12742, loss 2 = 0.05481
val eval at step 17000: map@0.50 = 0.47907 - map@0.75 = 0.17149
  > Step 17001 (epoch 422): loss 1 = 0.04891, loss 2 = 0.07138
  > Step 17251 (epoch 428): loss 1 = 0.03810, loss 2 = 0.06936
val eval at step 17500: map@0.50 = 0.47630 - map@0.75 = 0.18380
  > Step 17501 (epoch 434): loss 1 = 0.03848, loss 2 = 0.04794
  > Step 17751 (epoch 441): loss 1 = 0.04202, loss 2 = 0.07234
val eval at step 18000: map@0.50 = 0.49803 - map@0.75 = 0.18911
  > Step 18001 (epoch 447): loss 1 = 0.25838, loss 2 = 0.11036
  > Step 18251 (epoch 453): loss 1 = 0.03180, loss 2 = 0.05289
val eval at step 18500: map@0.50 = 0.47472 - map@0.75 = 0.16728
  > Step 18501 (epoch 459): loss 1 = 0.03507, loss 2 = 0.06817
  > Step 18751 (epoch 465): loss 1 = 0.04752, loss 2 = 0.13036
val eval at step 19000: map@0.50 = 0.47215 - map@0.75 = 0.18698
  > Step 19001 (epoch 472): loss 1 = 0.04798, loss 2 = 0.09347
  > Step 19251 (epoch 478): loss 1 = 0.30413, loss 2 = 0.10398
val eval at step 19500: map@0.50 = 0.48175 - map@0.75 = 0.15607
  > Step 19501 (epoch 484): loss 1 = 0.07973, loss 2 = 0.06853
  > Step 19751 (epoch 490): loss 1 = 0.03874, loss 2 = 0.09213
val eval at step 20000: map@0.50 = 0.50265 - map@0.75 = 0.14721
  > Step 20001 (epoch 496): loss 1 = 0.06491, loss 2 = 0.07248
  > Step 20251 (epoch 503): loss 1 = 0.04207, loss 2 = 0.08149
val eval at step 20500: map@0.50 = 0.49003 - map@0.75 = 0.20912
  > Step 20501 (epoch 509): loss 1 = 0.03670, loss 2 = 0.07156
  > Step 20751 (epoch 515): loss 1 = 0.05483, loss 2 = 0.05720
val eval at step 21000: map@0.50 = 0.49651 - map@0.75 = 0.19474
  > Step 21001 (epoch 521): loss 1 = 0.04537, loss 2 = 0.05594
  > Step 21251 (epoch 527): loss 1 = 0.04749, loss 2 = 0.07530
val eval at step 21500: map@0.50 = 0.45109 - map@0.75 = 0.19006
  > Step 21501 (epoch 534): loss 1 = 0.02945, loss 2 = 0.08061
  > Step 21751 (epoch 540): loss 1 = 0.05283, loss 2 = 0.04671
val eval at step 22000: map@0.50 = 0.50685 - map@0.75 = 0.22136
  > Step 22001 (epoch 546): loss 1 = 0.04220, loss 2 = 0.04663
  > Step 22251 (epoch 552): loss 1 = 0.02537, loss 2 = 0.05842
val eval at step 22500: map@0.50 = 0.53385 - map@0.75 = 0.16241
  > Step 22501 (epoch 558): loss 1 = 0.21791, loss 2 = 0.18173
  > Step 22751 (epoch 565): loss 1 = 0.12597, loss 2 = 0.06366
val eval at step 23000: map@0.50 = 0.48218 - map@0.75 = 0.15973
  > Step 23001 (epoch 571): loss 1 = 0.04252, loss 2 = 0.07053
  > Step 23251 (epoch 577): loss 1 = 0.06985, loss 2 = 0.11597
val eval at step 23500: map@0.50 = 0.44867 - map@0.75 = 0.14950
  > Step 23501 (epoch 583): loss 1 = 0.04074, loss 2 = 0.09215
  > Step 23751 (epoch 589): loss 1 = 0.03451, loss 2 = 0.06551
val eval at step 24000: map@0.50 = 0.46524 - map@0.75 = 0.14868
  > Step 24001 (epoch 596): loss 1 = 0.04374, loss 2 = 0.03791
test eval at step 24200: map@0.50 = 0.52177 - map@0.75 = 0.16752
