============================================================== FOLD 06
Tensorflow version 1.10.1
ODGI - vedai_fold06, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold06
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold06
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold06_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold06_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold06_val
   using grid size [8 8]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.97 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold06/tiny-yolov2_odgi_256_64/10-05_14-32

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold06/tiny-yolov2_odgi_256_64/10-05_14-32[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 8.06276, loss 2 = 12.37920
  > Step 251 (epoch 7): loss 1 = 0.79247, loss 2 = 0.56259
val eval at step 500: map@0.50 = 0.00479 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.48034, loss 2 = 0.40038
  > Step 751 (epoch 19): loss 1 = 0.30477, loss 2 = 0.48046
val eval at step 1000: map@0.50 = 0.02391 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.30769, loss 2 = 0.43381
  > Step 1251 (epoch 32): loss 1 = 0.26316, loss 2 = 0.37735
val eval at step 1500: map@0.50 = 0.11043 - map@0.75 = 0.00654
  > Step 1501 (epoch 38): loss 1 = 0.22332, loss 2 = 0.36757
  > Step 1751 (epoch 44): loss 1 = 0.31912, loss 2 = 0.31886
val eval at step 2000: map@0.50 = 0.10274 - map@0.75 = 0.00826
  > Step 2001 (epoch 50): loss 1 = 0.28666, loss 2 = 0.38437
  > Step 2251 (epoch 56): loss 1 = 0.27093, loss 2 = 0.38943
val eval at step 2500: map@0.50 = 0.17668 - map@0.75 = 0.01680
  > Step 2501 (epoch 63): loss 1 = 0.29763, loss 2 = 0.30704
  > Step 2751 (epoch 69): loss 1 = 0.19655, loss 2 = 0.26914
val eval at step 3000: map@0.50 = 0.18626 - map@0.75 = 0.00996
  > Step 3001 (epoch 75): loss 1 = 0.21896, loss 2 = 0.26891
  > Step 3251 (epoch 81): loss 1 = 0.18493, loss 2 = 0.27347
val eval at step 3500: map@0.50 = 0.16622 - map@0.75 = 0.00945
  > Step 3501 (epoch 87): loss 1 = 0.24529, loss 2 = 0.26072
  > Step 3751 (epoch 94): loss 1 = 0.30100, loss 2 = 0.29226
val eval at step 4000: map@0.50 = 0.26857 - map@0.75 = 0.05795
  > Step 4001 (epoch 100): loss 1 = 0.21309, loss 2 = 0.27585
  > Step 4251 (epoch 106): loss 1 = 0.15785, loss 2 = 0.28384
val eval at step 4500: map@0.50 = 0.27257 - map@0.75 = 0.02904
  > Step 4501 (epoch 112): loss 1 = 0.24394, loss 2 = 0.20271
  > Step 4751 (epoch 118): loss 1 = 0.16905, loss 2 = 0.25396
val eval at step 5000: map@0.50 = 0.30373 - map@0.75 = 0.06051
  > Step 5001 (epoch 124): loss 1 = 0.15380, loss 2 = 0.21578
  > Step 5251 (epoch 131): loss 1 = 0.18607, loss 2 = 0.24662
val eval at step 5500: map@0.50 = 0.31320 - map@0.75 = 0.04856
  > Step 5501 (epoch 137): loss 1 = 0.20326, loss 2 = 0.22703
  > Step 5751 (epoch 143): loss 1 = 0.43126, loss 2 = 0.26685
val eval at step 6000: map@0.50 = 0.33097 - map@0.75 = 0.08662
  > Step 6001 (epoch 149): loss 1 = 0.19344, loss 2 = 0.26156
  > Step 6251 (epoch 155): loss 1 = 0.18942, loss 2 = 0.20069
val eval at step 6500: map@0.50 = 0.39615 - map@0.75 = 0.09377
  > Step 6501 (epoch 162): loss 1 = 0.14586, loss 2 = 0.22222
  > Step 6751 (epoch 168): loss 1 = 0.19989, loss 2 = 0.12627
val eval at step 7000: map@0.50 = 0.37622 - map@0.75 = 0.08014
  > Step 7001 (epoch 174): loss 1 = 0.14812, loss 2 = 0.19384
  > Step 7251 (epoch 180): loss 1 = 0.14155, loss 2 = 0.15408
val eval at step 7500: map@0.50 = 0.37766 - map@0.75 = 0.09483
  > Step 7501 (epoch 186): loss 1 = 0.18814, loss 2 = 0.20581
  > Step 7751 (epoch 193): loss 1 = 0.18068, loss 2 = 0.15285
val eval at step 8000: map@0.50 = 0.35541 - map@0.75 = 0.07101
  > Step 8001 (epoch 199): loss 1 = 0.19684, loss 2 = 0.15964
  > Step 8251 (epoch 205): loss 1 = 0.27432, loss 2 = 0.28990
val eval at step 8500: map@0.50 = 0.39474 - map@0.75 = 0.13835
  > Step 8501 (epoch 211): loss 1 = 0.15189, loss 2 = 0.18822
  > Step 8751 (epoch 217): loss 1 = 0.17463, loss 2 = 0.14562
val eval at step 9000: map@0.50 = 0.46231 - map@0.75 = 0.09418
  > Step 9001 (epoch 224): loss 1 = 0.08313, loss 2 = 0.15411
  > Step 9251 (epoch 230): loss 1 = 0.12327, loss 2 = 0.14585
val eval at step 9500: map@0.50 = 0.44601 - map@0.75 = 0.11536
  > Step 9501 (epoch 236): loss 1 = 0.16728, loss 2 = 0.14951
  > Step 9751 (epoch 242): loss 1 = 0.12401, loss 2 = 0.14980
val eval at step 10000: map@0.50 = 0.42846 - map@0.75 = 0.07793
  > Step 10001 (epoch 248): loss 1 = 0.13286, loss 2 = 0.11556
  > Step 10251 (epoch 255): loss 1 = 0.14394, loss 2 = 0.13885
val eval at step 10500: map@0.50 = 0.47822 - map@0.75 = 0.12240
  > Step 10501 (epoch 261): loss 1 = 0.09750, loss 2 = 0.20985
  > Step 10751 (epoch 267): loss 1 = 0.15422, loss 2 = 0.15642
val eval at step 11000: map@0.50 = 0.47090 - map@0.75 = 0.13599
  > Step 11001 (epoch 273): loss 1 = 0.12716, loss 2 = 0.12752
  > Step 11251 (epoch 279): loss 1 = 0.12935, loss 2 = 0.15238
val eval at step 11500: map@0.50 = 0.41663 - map@0.75 = 0.13060
  > Step 11501 (epoch 286): loss 1 = 0.11835, loss 2 = 0.13392
  > Step 11751 (epoch 292): loss 1 = 0.10312, loss 2 = 0.13652
val eval at step 12000: map@0.50 = 0.38487 - map@0.75 = 0.10728
  > Step 12001 (epoch 298): loss 1 = 0.18069, loss 2 = 0.20076
  > Step 12251 (epoch 304): loss 1 = 0.09504, loss 2 = 0.14715
val eval at step 12500: map@0.50 = 0.43675 - map@0.75 = 0.16326
  > Step 12501 (epoch 310): loss 1 = 0.15026, loss 2 = 0.13039
  > Step 12751 (epoch 317): loss 1 = 0.09078, loss 2 = 0.09164
val eval at step 13000: map@0.50 = 0.42545 - map@0.75 = 0.12477
  > Step 13001 (epoch 323): loss 1 = 0.08821, loss 2 = 0.09485
  > Step 13251 (epoch 329): loss 1 = 0.09369, loss 2 = 0.12023
val eval at step 13500: map@0.50 = 0.41965 - map@0.75 = 0.10916
  > Step 13501 (epoch 335): loss 1 = 0.10099, loss 2 = 0.09374
  > Step 13751 (epoch 341): loss 1 = 0.10544, loss 2 = 0.11208
val eval at step 14000: map@0.50 = 0.40398 - map@0.75 = 0.11868
  > Step 14001 (epoch 348): loss 1 = 0.11371, loss 2 = 0.13080
  > Step 14251 (epoch 354): loss 1 = 0.09493, loss 2 = 0.11080
val eval at step 14500: map@0.50 = 0.45007 - map@0.75 = 0.13339
  > Step 14501 (epoch 360): loss 1 = 0.12333, loss 2 = 0.10078
  > Step 14751 (epoch 366): loss 1 = 0.12644, loss 2 = 0.13342
val eval at step 15000: map@0.50 = 0.42053 - map@0.75 = 0.14736
  > Step 15001 (epoch 372): loss 1 = 0.11739, loss 2 = 0.13915
  > Step 15251 (epoch 379): loss 1 = 0.17799, loss 2 = 0.08957
val eval at step 15500: map@0.50 = 0.41947 - map@0.75 = 0.13221
  > Step 15501 (epoch 385): loss 1 = 0.11157, loss 2 = 0.08333
  > Step 15751 (epoch 391): loss 1 = 0.07498, loss 2 = 0.13193
val eval at step 16000: map@0.50 = 0.44838 - map@0.75 = 0.14499
  > Step 16001 (epoch 397): loss 1 = 0.11371, loss 2 = 0.11674
  > Step 16251 (epoch 403): loss 1 = 0.24770, loss 2 = 0.16679
val eval at step 16500: map@0.50 = 0.43654 - map@0.75 = 0.11468
  > Step 16501 (epoch 410): loss 1 = 0.16460, loss 2 = 0.12775
  > Step 16751 (epoch 416): loss 1 = 0.12315, loss 2 = 0.11537
val eval at step 17000: map@0.50 = 0.41844 - map@0.75 = 0.14783
  > Step 17001 (epoch 422): loss 1 = 0.08050, loss 2 = 0.11067
  > Step 17251 (epoch 428): loss 1 = 0.10644, loss 2 = 0.11091
val eval at step 17500: map@0.50 = 0.41688 - map@0.75 = 0.12085
  > Step 17501 (epoch 434): loss 1 = 0.10168, loss 2 = 0.10871
  > Step 17751 (epoch 441): loss 1 = 0.07143, loss 2 = 0.15289
val eval at step 18000: map@0.50 = 0.41935 - map@0.75 = 0.10171
  > Step 18001 (epoch 447): loss 1 = 0.07636, loss 2 = 0.08729
  > Step 18251 (epoch 453): loss 1 = 0.09503, loss 2 = 0.07648
val eval at step 18500: map@0.50 = 0.43082 - map@0.75 = 0.13673
  > Step 18501 (epoch 459): loss 1 = 0.07333, loss 2 = 0.06532
  > Step 18751 (epoch 465): loss 1 = 0.08107, loss 2 = 0.10103
val eval at step 19000: map@0.50 = 0.42983 - map@0.75 = 0.14010
  > Step 19001 (epoch 472): loss 1 = 0.08237, loss 2 = 0.07361
  > Step 19251 (epoch 478): loss 1 = 0.08738, loss 2 = 0.08649
val eval at step 19500: map@0.50 = 0.38746 - map@0.75 = 0.13061
  > Step 19501 (epoch 484): loss 1 = 0.08066, loss 2 = 0.08398
  > Step 19751 (epoch 490): loss 1 = 0.07477, loss 2 = 0.12972
val eval at step 20000: map@0.50 = 0.44824 - map@0.75 = 0.11916
  > Step 20001 (epoch 496): loss 1 = 0.07959, loss 2 = 0.13078
  > Step 20251 (epoch 503): loss 1 = 0.06643, loss 2 = 0.12695
val eval at step 20500: map@0.50 = 0.44165 - map@0.75 = 0.11581
  > Step 20501 (epoch 509): loss 1 = 0.21076, loss 2 = 0.13182
  > Step 20751 (epoch 515): loss 1 = 0.09803, loss 2 = 0.10564
val eval at step 21000: map@0.50 = 0.44450 - map@0.75 = 0.14628
  > Step 21001 (epoch 521): loss 1 = 0.10545, loss 2 = 0.09578
  > Step 21251 (epoch 527): loss 1 = 0.08393, loss 2 = 0.10941
val eval at step 21500: map@0.50 = 0.44056 - map@0.75 = 0.12265
  > Step 21501 (epoch 534): loss 1 = 0.07482, loss 2 = 0.10078
  > Step 21751 (epoch 540): loss 1 = 0.06395, loss 2 = 0.12702
val eval at step 22000: map@0.50 = 0.42151 - map@0.75 = 0.10717
  > Step 22001 (epoch 546): loss 1 = 0.06168, loss 2 = 0.08243
  > Step 22251 (epoch 552): loss 1 = 0.09550, loss 2 = 0.11367
val eval at step 22500: map@0.50 = 0.46939 - map@0.75 = 0.16268
  > Step 22501 (epoch 558): loss 1 = 0.05976, loss 2 = 0.09276
  > Step 22751 (epoch 565): loss 1 = 0.07107, loss 2 = 0.08255
val eval at step 23000: map@0.50 = 0.43807 - map@0.75 = 0.13906
  > Step 23001 (epoch 571): loss 1 = 0.08393, loss 2 = 0.07835
  > Step 23251 (epoch 577): loss 1 = 0.09620, loss 2 = 0.07361
val eval at step 23500: map@0.50 = 0.46616 - map@0.75 = 0.15199
  > Step 23501 (epoch 583): loss 1 = 0.07326, loss 2 = 0.08315
  > Step 23751 (epoch 589): loss 1 = 0.08781, loss 2 = 0.10123
val eval at step 24000: map@0.50 = 0.44796 - map@0.75 = 0.13395
  > Step 24001 (epoch 596): loss 1 = 0.06712, loss 2 = 0.08397
test eval at step 24200: map@0.50 = 0.39522 - map@0.75 = 0.11861
