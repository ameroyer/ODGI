============================================================== FOLD 08
Tensorflow version 1.10.1
ODGI - vedai_fold08, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold08
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold08
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold08_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold08_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold08_val
   using grid size [8 8]
   using grid size [4 4]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 4, 4, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold08/tiny-yolov2_odgi_256_128/09-28_16-43

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold08/tiny-yolov2_odgi_256_128/09-28_16-43[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 8.18141, loss 2 = 10.63481
  > Step 251 (epoch 7): loss 1 = 0.60692, loss 2 = 0.78866
val eval at step 500: map@0.50 = 0.01980 - map@0.75 = 0.00207
  > Step 501 (epoch 13): loss 1 = 0.58667, loss 2 = 0.55338
  > Step 751 (epoch 19): loss 1 = 0.33663, loss 2 = 0.50273
val eval at step 1000: map@0.50 = 0.14326 - map@0.75 = 0.01013
  > Step 1001 (epoch 25): loss 1 = 0.33991, loss 2 = 0.48990
  > Step 1251 (epoch 32): loss 1 = 0.21478, loss 2 = 0.40920
val eval at step 1500: map@0.50 = 0.15347 - map@0.75 = 0.02039
  > Step 1501 (epoch 38): loss 1 = 0.23437, loss 2 = 0.45617
  > Step 1751 (epoch 44): loss 1 = 0.23996, loss 2 = 0.37248
val eval at step 2000: map@0.50 = 0.14523 - map@0.75 = 0.01193
  > Step 2001 (epoch 50): loss 1 = 0.29525, loss 2 = 0.37039
  > Step 2251 (epoch 56): loss 1 = 0.24856, loss 2 = 0.38207
val eval at step 2500: map@0.50 = 0.26707 - map@0.75 = 0.03902
  > Step 2501 (epoch 63): loss 1 = 0.20800, loss 2 = 0.36301
  > Step 2751 (epoch 69): loss 1 = 0.19794, loss 2 = 0.29918
val eval at step 3000: map@0.50 = 0.30323 - map@0.75 = 0.04952
  > Step 3001 (epoch 75): loss 1 = 0.17065, loss 2 = 0.31574
  > Step 3251 (epoch 81): loss 1 = 0.21575, loss 2 = 0.34684
val eval at step 3500: map@0.50 = 0.11301 - map@0.75 = 0.01877
  > Step 3501 (epoch 87): loss 1 = 0.36479, loss 2 = 0.49830
  > Step 3751 (epoch 94): loss 1 = 0.23730, loss 2 = 0.36507
val eval at step 4000: map@0.50 = 0.32129 - map@0.75 = 0.05727
  > Step 4001 (epoch 100): loss 1 = 0.19776, loss 2 = 0.33271
  > Step 4251 (epoch 106): loss 1 = 0.15780, loss 2 = 0.34035
val eval at step 4500: map@0.50 = 0.34363 - map@0.75 = 0.08948
  > Step 4501 (epoch 112): loss 1 = 0.16556, loss 2 = 0.27494
  > Step 4751 (epoch 118): loss 1 = 0.18927, loss 2 = 0.36381
val eval at step 5000: map@0.50 = 0.40996 - map@0.75 = 0.09240
  > Step 5001 (epoch 124): loss 1 = 0.16598, loss 2 = 0.33826
  > Step 5251 (epoch 131): loss 1 = 0.14317, loss 2 = 0.24305
val eval at step 5500: map@0.50 = 0.38453 - map@0.75 = 0.08565
  > Step 5501 (epoch 137): loss 1 = 0.16578, loss 2 = 0.26860
  > Step 5751 (epoch 143): loss 1 = 0.17958, loss 2 = 0.25693
val eval at step 6000: map@0.50 = 0.35853 - map@0.75 = 0.08634
  > Step 6001 (epoch 149): loss 1 = 0.27937, loss 2 = 0.27711
  > Step 6251 (epoch 155): loss 1 = 0.19381, loss 2 = 0.39724
val eval at step 6500: map@0.50 = 0.40160 - map@0.75 = 0.09173
  > Step 6501 (epoch 162): loss 1 = 0.17437, loss 2 = 0.28235
  > Step 6751 (epoch 168): loss 1 = 0.17844, loss 2 = 0.26141
val eval at step 7000: map@0.50 = 0.46773 - map@0.75 = 0.15435
  > Step 7001 (epoch 174): loss 1 = 0.13274, loss 2 = 0.29407
  > Step 7251 (epoch 180): loss 1 = 0.12278, loss 2 = 0.24123
val eval at step 7500: map@0.50 = 0.45398 - map@0.75 = 0.08583
  > Step 7501 (epoch 186): loss 1 = 0.12305, loss 2 = 0.26134
  > Step 7751 (epoch 193): loss 1 = 0.12396, loss 2 = 0.23346
val eval at step 8000: map@0.50 = 0.44437 - map@0.75 = 0.12747
  > Step 8001 (epoch 199): loss 1 = 0.13127, loss 2 = 0.27512
  > Step 8251 (epoch 205): loss 1 = 0.16320, loss 2 = 0.23028
val eval at step 8500: map@0.50 = 0.45923 - map@0.75 = 0.16632
  > Step 8501 (epoch 211): loss 1 = 0.11830, loss 2 = 0.19531
  > Step 8751 (epoch 217): loss 1 = 0.12812, loss 2 = 0.22385
val eval at step 9000: map@0.50 = 0.43753 - map@0.75 = 0.11249
  > Step 9001 (epoch 224): loss 1 = 0.23948, loss 2 = 0.25632
  > Step 9251 (epoch 230): loss 1 = 0.11790, loss 2 = 0.24141
val eval at step 9500: map@0.50 = 0.48657 - map@0.75 = 0.14048
  > Step 9501 (epoch 236): loss 1 = 0.14640, loss 2 = 0.24593
  > Step 9751 (epoch 242): loss 1 = 0.11426, loss 2 = 0.21051
val eval at step 10000: map@0.50 = 0.42678 - map@0.75 = 0.12914
  > Step 10001 (epoch 248): loss 1 = 0.11875, loss 2 = 0.17061
  > Step 10251 (epoch 255): loss 1 = 0.11448, loss 2 = 0.21807
val eval at step 10500: map@0.50 = 0.43747 - map@0.75 = 0.15208
  > Step 10501 (epoch 261): loss 1 = 0.12813, loss 2 = 0.17936
  > Step 10751 (epoch 267): loss 1 = 0.12225, loss 2 = 0.25171
val eval at step 11000: map@0.50 = 0.44306 - map@0.75 = 0.15293
  > Step 11001 (epoch 273): loss 1 = 0.09732, loss 2 = 0.17827
  > Step 11251 (epoch 279): loss 1 = 0.11957, loss 2 = 0.22005
val eval at step 11500: map@0.50 = 0.40717 - map@0.75 = 0.11065
  > Step 11501 (epoch 286): loss 1 = 0.13536, loss 2 = 0.16778
  > Step 11751 (epoch 292): loss 1 = 0.13851, loss 2 = 0.21017
val eval at step 12000: map@0.50 = 0.48650 - map@0.75 = 0.15646
  > Step 12001 (epoch 298): loss 1 = 0.08840, loss 2 = 0.23170
  > Step 12251 (epoch 304): loss 1 = 0.12427, loss 2 = 0.18966
val eval at step 12500: map@0.50 = 0.43089 - map@0.75 = 0.15239
  > Step 12501 (epoch 310): loss 1 = 0.11658, loss 2 = 0.15441
  > Step 12751 (epoch 317): loss 1 = 0.55804, loss 2 = 0.21940
val eval at step 13000: map@0.50 = 0.47230 - map@0.75 = 0.15421
  > Step 13001 (epoch 323): loss 1 = 0.12153, loss 2 = 0.18979
  > Step 13251 (epoch 329): loss 1 = 0.12527, loss 2 = 0.19013
val eval at step 13500: map@0.50 = 0.49488 - map@0.75 = 0.18245
  > Step 13501 (epoch 335): loss 1 = 0.10505, loss 2 = 0.17392
  > Step 13751 (epoch 341): loss 1 = 0.09930, loss 2 = 0.22312
val eval at step 14000: map@0.50 = 0.48511 - map@0.75 = 0.14897
  > Step 14001 (epoch 348): loss 1 = 0.09862, loss 2 = 0.21947
  > Step 14251 (epoch 354): loss 1 = 0.09033, loss 2 = 0.18586
val eval at step 14500: map@0.50 = 0.47875 - map@0.75 = 0.16801
  > Step 14501 (epoch 360): loss 1 = 0.08131, loss 2 = 0.19432
  > Step 14751 (epoch 366): loss 1 = 0.07601, loss 2 = 0.19352
val eval at step 15000: map@0.50 = 0.49741 - map@0.75 = 0.14066
  > Step 15001 (epoch 372): loss 1 = 0.08651, loss 2 = 0.17676
  > Step 15251 (epoch 379): loss 1 = 0.10293, loss 2 = 0.17943
val eval at step 15500: map@0.50 = 0.44382 - map@0.75 = 0.13085
  > Step 15501 (epoch 385): loss 1 = 0.08424, loss 2 = 0.17337
  > Step 15751 (epoch 391): loss 1 = 0.08365, loss 2 = 0.17858
val eval at step 16000: map@0.50 = 0.47867 - map@0.75 = 0.18201
  > Step 16001 (epoch 397): loss 1 = 0.09332, loss 2 = 0.17794
  > Step 16251 (epoch 403): loss 1 = 0.08170, loss 2 = 0.20072
val eval at step 16500: map@0.50 = 0.47647 - map@0.75 = 0.15589
  > Step 16501 (epoch 410): loss 1 = 0.08869, loss 2 = 0.19948
  > Step 16751 (epoch 416): loss 1 = 0.10791, loss 2 = 0.18286
val eval at step 17000: map@0.50 = 0.50940 - map@0.75 = 0.21525
  > Step 17001 (epoch 422): loss 1 = 0.11421, loss 2 = 0.15880
  > Step 17251 (epoch 428): loss 1 = 0.24606, loss 2 = 0.22790
val eval at step 17500: map@0.50 = 0.45554 - map@0.75 = 0.16238
  > Step 17501 (epoch 434): loss 1 = 0.12163, loss 2 = 0.16851
  > Step 17751 (epoch 441): loss 1 = 0.07095, loss 2 = 0.14455
val eval at step 18000: map@0.50 = 0.48044 - map@0.75 = 0.14684
  > Step 18001 (epoch 447): loss 1 = 0.10742, loss 2 = 0.21228
  > Step 18251 (epoch 453): loss 1 = 0.06266, loss 2 = 0.15975
val eval at step 18500: map@0.50 = 0.50440 - map@0.75 = 0.16711
  > Step 18501 (epoch 459): loss 1 = 0.09977, loss 2 = 0.15545
  > Step 18751 (epoch 465): loss 1 = 0.07217, loss 2 = 0.16356
val eval at step 19000: map@0.50 = 0.48572 - map@0.75 = 0.17271
  > Step 19001 (epoch 472): loss 1 = 0.08294, loss 2 = 0.15794
  > Step 19251 (epoch 478): loss 1 = 0.08451, loss 2 = 0.15781
val eval at step 19500: map@0.50 = 0.49408 - map@0.75 = 0.17044
  > Step 19501 (epoch 484): loss 1 = 0.10431, loss 2 = 0.23986
  > Step 19751 (epoch 490): loss 1 = 0.07048, loss 2 = 0.11940
val eval at step 20000: map@0.50 = 0.49334 - map@0.75 = 0.14547
  > Step 20001 (epoch 496): loss 1 = 0.06660, loss 2 = 0.14501
  > Step 20251 (epoch 503): loss 1 = 0.07720, loss 2 = 0.17873
val eval at step 20500: map@0.50 = 0.49801 - map@0.75 = 0.16122
  > Step 20501 (epoch 509): loss 1 = 0.07341, loss 2 = 0.16055
  > Step 20751 (epoch 515): loss 1 = 0.08820, loss 2 = 0.17102
val eval at step 21000: map@0.50 = 0.46519 - map@0.75 = 0.17246
  > Step 21001 (epoch 521): loss 1 = 0.06806, loss 2 = 0.20536
  > Step 21251 (epoch 527): loss 1 = 0.10638, loss 2 = 0.20500
val eval at step 21500: map@0.50 = 0.51856 - map@0.75 = 0.20952
  > Step 21501 (epoch 534): loss 1 = 0.06932, loss 2 = 0.17769
  > Step 21751 (epoch 540): loss 1 = 0.07300, loss 2 = 0.16079
val eval at step 22000: map@0.50 = 0.48736 - map@0.75 = 0.14919
  > Step 22001 (epoch 546): loss 1 = 0.06238, loss 2 = 0.20892
  > Step 22251 (epoch 552): loss 1 = 0.05615, loss 2 = 0.20306
val eval at step 22500: map@0.50 = 0.50890 - map@0.75 = 0.18996
  > Step 22501 (epoch 558): loss 1 = 0.05640, loss 2 = 0.16122
  > Step 22751 (epoch 565): loss 1 = 0.07413, loss 2 = 0.17332
val eval at step 23000: map@0.50 = 0.39291 - map@0.75 = 0.09456
  > Step 23001 (epoch 571): loss 1 = 0.25844, loss 2 = 0.32034
  > Step 23251 (epoch 577): loss 1 = 0.11767, loss 2 = 0.16561
val eval at step 23500: map@0.50 = 0.48514 - map@0.75 = 0.14906
  > Step 23501 (epoch 583): loss 1 = 0.06658, loss 2 = 0.16235
  > Step 23751 (epoch 589): loss 1 = 0.05273, loss 2 = 0.16304
val eval at step 24000: map@0.50 = 0.47108 - map@0.75 = 0.15140
  > Step 24001 (epoch 596): loss 1 = 0.05756, loss 2 = 0.16166
test eval at step 24200: map@0.50 = 0.50153 - map@0.75 = 0.16813
