============================================================== FOLD 09
Tensorflow version 1.10.1
ODGI - vedai_fold09, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold09
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold09
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold09_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold09_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold09_val
   using grid size [16 16]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold09/tiny-yolov2_odgi_512_64/09-27_16-05

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold09/tiny-yolov2_odgi_512_64/09-27_16-05[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 9.47763, loss 2 = 10.36155
  > Step 251 (epoch 7): loss 1 = 0.65817, loss 2 = 0.49628
val eval at step 500: map@0.50 = 0.09613 - map@0.75 = 0.00312
  > Step 501 (epoch 13): loss 1 = 0.59202, loss 2 = 0.53108
  > Step 751 (epoch 19): loss 1 = 0.37815, loss 2 = 0.33857
val eval at step 1000: map@0.50 = 0.23461 - map@0.75 = 0.00882
  > Step 1001 (epoch 25): loss 1 = 0.26062, loss 2 = 0.36105
  > Step 1251 (epoch 32): loss 1 = 0.33690, loss 2 = 0.36142
val eval at step 1500: map@0.50 = 0.30325 - map@0.75 = 0.03746
  > Step 1501 (epoch 38): loss 1 = 0.35220, loss 2 = 0.35343
  > Step 1751 (epoch 44): loss 1 = 0.19585, loss 2 = 0.27910
val eval at step 2000: map@0.50 = 0.30756 - map@0.75 = 0.06468
  > Step 2001 (epoch 50): loss 1 = 0.23205, loss 2 = 0.20975
  > Step 2251 (epoch 56): loss 1 = 0.16194, loss 2 = 0.27380
val eval at step 2500: map@0.50 = 0.29733 - map@0.75 = 0.06328
  > Step 2501 (epoch 63): loss 1 = 0.26405, loss 2 = 0.35397
  > Step 2751 (epoch 69): loss 1 = 0.21687, loss 2 = 0.35519
val eval at step 3000: map@0.50 = 0.37749 - map@0.75 = 0.09139
  > Step 3001 (epoch 75): loss 1 = 0.14263, loss 2 = 0.23066
  > Step 3251 (epoch 81): loss 1 = 0.14428, loss 2 = 0.24148
val eval at step 3500: map@0.50 = 0.41476 - map@0.75 = 0.08689
  > Step 3501 (epoch 87): loss 1 = 0.15427, loss 2 = 0.20750
  > Step 3751 (epoch 94): loss 1 = 0.13112, loss 2 = 0.27792
val eval at step 4000: map@0.50 = 0.41477 - map@0.75 = 0.15294
  > Step 4001 (epoch 100): loss 1 = 0.15158, loss 2 = 0.20882
  > Step 4251 (epoch 106): loss 1 = 0.14025, loss 2 = 0.23053
val eval at step 4500: map@0.50 = 0.42567 - map@0.75 = 0.10962
  > Step 4501 (epoch 112): loss 1 = 0.11374, loss 2 = 0.18954
  > Step 4751 (epoch 118): loss 1 = 0.14229, loss 2 = 0.29693
val eval at step 5000: map@0.50 = 0.45764 - map@0.75 = 0.13252
  > Step 5001 (epoch 124): loss 1 = 0.13840, loss 2 = 0.18521
  > Step 5251 (epoch 131): loss 1 = 0.16884, loss 2 = 0.17271
val eval at step 5500: map@0.50 = 0.46069 - map@0.75 = 0.13695
  > Step 5501 (epoch 137): loss 1 = 0.16820, loss 2 = 0.17552
  > Step 5751 (epoch 143): loss 1 = 0.10701, loss 2 = 0.17464
val eval at step 6000: map@0.50 = 0.48490 - map@0.75 = 0.16496
  > Step 6001 (epoch 149): loss 1 = 0.08753, loss 2 = 0.18220
  > Step 6251 (epoch 155): loss 1 = 0.07525, loss 2 = 0.19362
val eval at step 6500: map@0.50 = 0.47088 - map@0.75 = 0.12618
  > Step 6501 (epoch 162): loss 1 = 0.09631, loss 2 = 0.18947
  > Step 6751 (epoch 168): loss 1 = 0.09850, loss 2 = 0.19693
val eval at step 7000: map@0.50 = 0.48205 - map@0.75 = 0.16364
  > Step 7001 (epoch 174): loss 1 = 0.09387, loss 2 = 0.14110
  > Step 7251 (epoch 180): loss 1 = 0.11087, loss 2 = 0.12953
val eval at step 7500: map@0.50 = 0.41704 - map@0.75 = 0.12822
  > Step 7501 (epoch 186): loss 1 = 0.51921, loss 2 = 0.23386
  > Step 7751 (epoch 193): loss 1 = 0.15836, loss 2 = 0.14868
val eval at step 8000: map@0.50 = 0.46533 - map@0.75 = 0.16743
  > Step 8001 (epoch 199): loss 1 = 0.08742, loss 2 = 0.21766
  > Step 8251 (epoch 205): loss 1 = 0.07551, loss 2 = 0.17606
val eval at step 8500: map@0.50 = 0.48743 - map@0.75 = 0.15750
  > Step 8501 (epoch 211): loss 1 = 0.06684, loss 2 = 0.12151
  > Step 8751 (epoch 217): loss 1 = 0.09263, loss 2 = 0.14328
val eval at step 9000: map@0.50 = 0.49050 - map@0.75 = 0.18423
  > Step 9001 (epoch 224): loss 1 = 0.10508, loss 2 = 0.14453
  > Step 9251 (epoch 230): loss 1 = 0.06496, loss 2 = 0.13385
val eval at step 9500: map@0.50 = 0.48042 - map@0.75 = 0.17584
  > Step 9501 (epoch 236): loss 1 = 0.24987, loss 2 = 0.19905
  > Step 9751 (epoch 242): loss 1 = 0.08971, loss 2 = 0.17129
val eval at step 10000: map@0.50 = 0.49799 - map@0.75 = 0.15491
  > Step 10001 (epoch 248): loss 1 = 0.05400, loss 2 = 0.11103
  > Step 10251 (epoch 255): loss 1 = 0.08139, loss 2 = 0.10584
val eval at step 10500: map@0.50 = 0.48788 - map@0.75 = 0.14801
  > Step 10501 (epoch 261): loss 1 = 0.12860, loss 2 = 0.13202
  > Step 10751 (epoch 267): loss 1 = 0.07742, loss 2 = 0.11344
val eval at step 11000: map@0.50 = 0.48979 - map@0.75 = 0.19543
  > Step 11001 (epoch 273): loss 1 = 0.07612, loss 2 = 0.14386
  > Step 11251 (epoch 279): loss 1 = 0.16720, loss 2 = 0.11443
val eval at step 11500: map@0.50 = 0.48468 - map@0.75 = 0.17490
  > Step 11501 (epoch 286): loss 1 = 0.28808, loss 2 = 0.19427
  > Step 11751 (epoch 292): loss 1 = 0.15660, loss 2 = 0.11351
val eval at step 12000: map@0.50 = 0.50838 - map@0.75 = 0.16617
  > Step 12001 (epoch 298): loss 1 = 0.08873, loss 2 = 0.09732
  > Step 12251 (epoch 304): loss 1 = 0.05981, loss 2 = 0.09355
val eval at step 12500: map@0.50 = 0.50884 - map@0.75 = 0.16348
  > Step 12501 (epoch 310): loss 1 = 0.05083, loss 2 = 0.11630
  > Step 12751 (epoch 317): loss 1 = 0.25976, loss 2 = 0.07895
val eval at step 13000: map@0.50 = 0.48376 - map@0.75 = 0.20949
  > Step 13001 (epoch 323): loss 1 = 0.05026, loss 2 = 0.08075
  > Step 13251 (epoch 329): loss 1 = 0.05265, loss 2 = 0.12587
val eval at step 13500: map@0.50 = 0.47933 - map@0.75 = 0.14675
  > Step 13501 (epoch 335): loss 1 = 0.05383, loss 2 = 0.10597
  > Step 13751 (epoch 341): loss 1 = 0.06634, loss 2 = 0.11270
val eval at step 14000: map@0.50 = 0.48716 - map@0.75 = 0.15115
  > Step 14001 (epoch 348): loss 1 = 0.05300, loss 2 = 0.11246
  > Step 14251 (epoch 354): loss 1 = 0.08508, loss 2 = 0.15728
val eval at step 14500: map@0.50 = 0.45422 - map@0.75 = 0.10538
  > Step 14501 (epoch 360): loss 1 = 0.10315, loss 2 = 0.07541
  > Step 14751 (epoch 366): loss 1 = 0.10474, loss 2 = 0.11272
val eval at step 15000: map@0.50 = 0.51866 - map@0.75 = 0.13338
  > Step 15001 (epoch 372): loss 1 = 0.06059, loss 2 = 0.09737
  > Step 15251 (epoch 379): loss 1 = 0.05394, loss 2 = 0.11877
val eval at step 15500: map@0.50 = 0.48325 - map@0.75 = 0.16613
  > Step 15501 (epoch 385): loss 1 = 0.07661, loss 2 = 0.10819
  > Step 15751 (epoch 391): loss 1 = 0.05682, loss 2 = 0.10629
val eval at step 16000: map@0.50 = 0.52115 - map@0.75 = 0.21517
  > Step 16001 (epoch 397): loss 1 = 0.11185, loss 2 = 0.11416
  > Step 16251 (epoch 403): loss 1 = 0.05072, loss 2 = 0.09964
val eval at step 16500: map@0.50 = 0.50985 - map@0.75 = 0.19968
  > Step 16501 (epoch 410): loss 1 = 0.04594, loss 2 = 0.07857
  > Step 16751 (epoch 416): loss 1 = 0.07779, loss 2 = 0.11069
val eval at step 17000: map@0.50 = 0.49382 - map@0.75 = 0.20568
  > Step 17001 (epoch 422): loss 1 = 0.04037, loss 2 = 0.08274
  > Step 17251 (epoch 428): loss 1 = 0.04026, loss 2 = 0.06189
val eval at step 17500: map@0.50 = 0.48926 - map@0.75 = 0.19071
  > Step 17501 (epoch 434): loss 1 = 0.04006, loss 2 = 0.08373
  > Step 17751 (epoch 441): loss 1 = 0.04978, loss 2 = 0.09126
val eval at step 18000: map@0.50 = 0.47387 - map@0.75 = 0.21246
  > Step 18001 (epoch 447): loss 1 = 0.03923, loss 2 = 0.07459
  > Step 18251 (epoch 453): loss 1 = 0.04505, loss 2 = 0.08698
val eval at step 18500: map@0.50 = 0.46624 - map@0.75 = 0.18009
  > Step 18501 (epoch 459): loss 1 = 0.22122, loss 2 = 0.05774
  > Step 18751 (epoch 465): loss 1 = 0.04302, loss 2 = 0.06948
val eval at step 19000: map@0.50 = 0.49493 - map@0.75 = 0.20115
  > Step 19001 (epoch 472): loss 1 = 0.07276, loss 2 = 0.08703
  > Step 19251 (epoch 478): loss 1 = 0.06598, loss 2 = 0.10074
val eval at step 19500: map@0.50 = 0.49311 - map@0.75 = 0.18507
  > Step 19501 (epoch 484): loss 1 = 0.10026, loss 2 = 0.10748
  > Step 19751 (epoch 490): loss 1 = 0.05633, loss 2 = 0.07584
val eval at step 20000: map@0.50 = 0.52968 - map@0.75 = 0.19797
  > Step 20001 (epoch 496): loss 1 = 0.05663, loss 2 = 0.07018
  > Step 20251 (epoch 503): loss 1 = 0.03554, loss 2 = 0.08896
val eval at step 20500: map@0.50 = 0.50572 - map@0.75 = 0.20864
  > Step 20501 (epoch 509): loss 1 = 0.04489, loss 2 = 0.07978
  > Step 20751 (epoch 515): loss 1 = 0.06468, loss 2 = 0.07142
val eval at step 21000: map@0.50 = 0.51267 - map@0.75 = 0.22374
  > Step 21001 (epoch 521): loss 1 = 0.04595, loss 2 = 0.06979
  > Step 21251 (epoch 527): loss 1 = 0.06757, loss 2 = 0.07437
val eval at step 21500: map@0.50 = 0.52198 - map@0.75 = 0.22783
  > Step 21501 (epoch 534): loss 1 = 0.05547, loss 2 = 0.08582
  > Step 21751 (epoch 540): loss 1 = 0.11568, loss 2 = 0.16086
val eval at step 22000: map@0.50 = 0.53853 - map@0.75 = 0.24699
  > Step 22001 (epoch 546): loss 1 = 0.05896, loss 2 = 0.09293
  > Step 22251 (epoch 552): loss 1 = 0.03812, loss 2 = 0.05990
val eval at step 22500: map@0.50 = 0.50627 - map@0.75 = 0.20347
  > Step 22501 (epoch 558): loss 1 = 0.22916, loss 2 = 0.10566
  > Step 22751 (epoch 565): loss 1 = 0.05338, loss 2 = 0.05653
val eval at step 23000: map@0.50 = 0.48345 - map@0.75 = 0.21130
  > Step 23001 (epoch 571): loss 1 = 0.03839, loss 2 = 0.07847
  > Step 23251 (epoch 577): loss 1 = 0.05836, loss 2 = 0.10328
val eval at step 23500: map@0.50 = 0.50546 - map@0.75 = 0.16647
  > Step 23501 (epoch 583): loss 1 = 0.05935, loss 2 = 0.10738
  > Step 23751 (epoch 589): loss 1 = 0.05053, loss 2 = 0.07286
val eval at step 24000: map@0.50 = 0.47860 - map@0.75 = 0.15066
  > Step 24001 (epoch 596): loss 1 = 0.02990, loss 2 = 0.05138
test eval at step 24200: map@0.50 = 0.53428 - map@0.75 = 0.19867
