============================================================== FOLD 05
Tensorflow version 1.10.1
ODGI - vedai_fold05, Input size 128

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold05
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold05
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold05_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold05_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold05_val
   using grid size [4 4]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 4, 4, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold05/tiny-yolov2_odgi_128_64/09-27_10-44

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold05/tiny-yolov2_odgi_128_64/09-27_10-44[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 5.13256, loss 2 = 8.18736
  > Step 251 (epoch 7): loss 1 = 0.99289, loss 2 = 5.12737
val eval at step 500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 501 (epoch 13): loss 1 = 0.64088, loss 2 = 0.43812
  > Step 751 (epoch 19): loss 1 = 0.44044, loss 2 = 0.37508
val eval at step 1000: map@0.50 = 0.00413 - map@0.75 = 0.00000
  > Step 1001 (epoch 25): loss 1 = 0.34007, loss 2 = 0.41415
  > Step 1251 (epoch 32): loss 1 = 0.25721, loss 2 = 0.37027
val eval at step 1500: map@0.50 = 0.00000 - map@0.75 = 0.00000
  > Step 1501 (epoch 38): loss 1 = 0.22996, loss 2 = 0.47485
  > Step 1751 (epoch 44): loss 1 = 0.38433, loss 2 = 0.35027
val eval at step 2000: map@0.50 = 0.00092 - map@0.75 = 0.00000
  > Step 2001 (epoch 50): loss 1 = 0.23000, loss 2 = 0.39757
  > Step 2251 (epoch 56): loss 1 = 0.29616, loss 2 = 0.31104
val eval at step 2500: map@0.50 = 0.00826 - map@0.75 = 0.00000
  > Step 2501 (epoch 63): loss 1 = 0.20887, loss 2 = 0.47541
  > Step 2751 (epoch 69): loss 1 = 0.25812, loss 2 = 0.34497
val eval at step 3000: map@0.50 = 0.04398 - map@0.75 = 0.00143
  > Step 3001 (epoch 75): loss 1 = 0.23316, loss 2 = 0.30709
  > Step 3251 (epoch 81): loss 1 = 0.25266, loss 2 = 0.35911
val eval at step 3500: map@0.50 = 0.01653 - map@0.75 = 0.00000
  > Step 3501 (epoch 87): loss 1 = 0.47173, loss 2 = 0.32068
  > Step 3751 (epoch 94): loss 1 = 0.24191, loss 2 = 0.31610
val eval at step 4000: map@0.50 = 0.04078 - map@0.75 = 0.00826
  > Step 4001 (epoch 100): loss 1 = 0.21888, loss 2 = 0.30416
  > Step 4251 (epoch 106): loss 1 = 0.22812, loss 2 = 0.31812
val eval at step 4500: map@0.50 = 0.07300 - map@0.75 = 0.02066
  > Step 4501 (epoch 112): loss 1 = 0.14427, loss 2 = 0.29777
  > Step 4751 (epoch 118): loss 1 = 0.18379, loss 2 = 0.28109
val eval at step 5000: map@0.50 = 0.02587 - map@0.75 = 0.00413
  > Step 5001 (epoch 124): loss 1 = 0.23486, loss 2 = 0.29777
  > Step 5251 (epoch 131): loss 1 = 0.36475, loss 2 = 0.33859
val eval at step 5500: map@0.50 = 0.04920 - map@0.75 = 0.00000
  > Step 5501 (epoch 137): loss 1 = 0.20637, loss 2 = 0.30543
  > Step 5751 (epoch 143): loss 1 = 0.17665, loss 2 = 0.28212
val eval at step 6000: map@0.50 = 0.10557 - map@0.75 = 0.00305
  > Step 6001 (epoch 149): loss 1 = 0.21066, loss 2 = 0.31087
  > Step 6251 (epoch 155): loss 1 = 0.25880, loss 2 = 0.26510
val eval at step 6500: map@0.50 = 0.11199 - map@0.75 = 0.00026
  > Step 6501 (epoch 162): loss 1 = 0.18822, loss 2 = 0.32355
  > Step 6751 (epoch 168): loss 1 = 0.19726, loss 2 = 0.26931
val eval at step 7000: map@0.50 = 0.09539 - map@0.75 = 0.01240
  > Step 7001 (epoch 174): loss 1 = 0.18844, loss 2 = 0.29328
  > Step 7251 (epoch 180): loss 1 = 0.19949, loss 2 = 0.28377
val eval at step 7500: map@0.50 = 0.10936 - map@0.75 = 0.00878
  > Step 7501 (epoch 186): loss 1 = 0.18772, loss 2 = 0.26169
  > Step 7751 (epoch 193): loss 1 = 0.21260, loss 2 = 0.27067
val eval at step 8000: map@0.50 = 0.04123 - map@0.75 = 0.00030
  > Step 8001 (epoch 199): loss 1 = 0.57753, loss 2 = 0.27603
  > Step 8251 (epoch 205): loss 1 = 0.20196, loss 2 = 0.27711
val eval at step 8500: map@0.50 = 0.16270 - map@0.75 = 0.02774
  > Step 8501 (epoch 211): loss 1 = 0.19884, loss 2 = 0.25141
  > Step 8751 (epoch 217): loss 1 = 0.16376, loss 2 = 0.27760
val eval at step 9000: map@0.50 = 0.14498 - map@0.75 = 0.02686
  > Step 9001 (epoch 224): loss 1 = 0.22490, loss 2 = 0.22682
  > Step 9251 (epoch 230): loss 1 = 0.24899, loss 2 = 0.15640
val eval at step 9500: map@0.50 = 0.11300 - map@0.75 = 0.01818
  > Step 9501 (epoch 236): loss 1 = 0.15106, loss 2 = 0.18084
  > Step 9751 (epoch 242): loss 1 = 0.21483, loss 2 = 0.21927
val eval at step 10000: map@0.50 = 0.14574 - map@0.75 = 0.03529
  > Step 10001 (epoch 248): loss 1 = 0.21186, loss 2 = 0.20938
  > Step 10251 (epoch 255): loss 1 = 0.25703, loss 2 = 0.20489
val eval at step 10500: map@0.50 = 0.13306 - map@0.75 = 0.01240
  > Step 10501 (epoch 261): loss 1 = 0.20589, loss 2 = 0.18841
  > Step 10751 (epoch 267): loss 1 = 0.23243, loss 2 = 0.19174
val eval at step 11000: map@0.50 = 0.12179 - map@0.75 = 0.02080
  > Step 11001 (epoch 273): loss 1 = 0.19972, loss 2 = 0.22485
  > Step 11251 (epoch 279): loss 1 = 0.16235, loss 2 = 0.25726
val eval at step 11500: map@0.50 = 0.02639 - map@0.75 = 0.00000
  > Step 11501 (epoch 286): loss 1 = 0.26173, loss 2 = 0.21846
  > Step 11751 (epoch 292): loss 1 = 0.25266, loss 2 = 0.26736
val eval at step 12000: map@0.50 = 0.11549 - map@0.75 = 0.01928
  > Step 12001 (epoch 298): loss 1 = 0.24869, loss 2 = 0.20956
  > Step 12251 (epoch 304): loss 1 = 0.14902, loss 2 = 0.20923
val eval at step 12500: map@0.50 = 0.15049 - map@0.75 = 0.02634
  > Step 12501 (epoch 310): loss 1 = 0.22989, loss 2 = 0.20256
  > Step 12751 (epoch 317): loss 1 = 0.18339, loss 2 = 0.17925
val eval at step 13000: map@0.50 = 0.12855 - map@0.75 = 0.03719
  > Step 13001 (epoch 323): loss 1 = 0.17435, loss 2 = 0.17365
  > Step 13251 (epoch 329): loss 1 = 0.21425, loss 2 = 0.16528
val eval at step 13500: map@0.50 = 0.17324 - map@0.75 = 0.03262
  > Step 13501 (epoch 335): loss 1 = 0.17333, loss 2 = 0.21507
  > Step 13751 (epoch 341): loss 1 = 0.17135, loss 2 = 0.20655
val eval at step 14000: map@0.50 = 0.11611 - map@0.75 = 0.01646
  > Step 14001 (epoch 348): loss 1 = 0.27778, loss 2 = 0.20886
  > Step 14251 (epoch 354): loss 1 = 0.13571, loss 2 = 0.19415
val eval at step 14500: map@0.50 = 0.11103 - map@0.75 = 0.01490
  > Step 14501 (epoch 360): loss 1 = 0.18513, loss 2 = 0.22316
  > Step 14751 (epoch 366): loss 1 = 0.20956, loss 2 = 0.19026
val eval at step 15000: map@0.50 = 0.14664 - map@0.75 = 0.01653
  > Step 15001 (epoch 372): loss 1 = 0.23904, loss 2 = 0.17843
  > Step 15251 (epoch 379): loss 1 = 0.23362, loss 2 = 0.18470
val eval at step 15500: map@0.50 = 0.09241 - map@0.75 = 0.02072
  > Step 15501 (epoch 385): loss 1 = 0.17008, loss 2 = 0.19543
  > Step 15751 (epoch 391): loss 1 = 0.12450, loss 2 = 0.18207
val eval at step 16000: map@0.50 = 0.16140 - map@0.75 = 0.01584
  > Step 16001 (epoch 397): loss 1 = 0.14622, loss 2 = 0.13918
  > Step 16251 (epoch 403): loss 1 = 0.15735, loss 2 = 0.17802
val eval at step 16500: map@0.50 = 0.14483 - map@0.75 = 0.03737
  > Step 16501 (epoch 410): loss 1 = 0.23356, loss 2 = 0.15862
  > Step 16751 (epoch 416): loss 1 = 0.18319, loss 2 = 0.14643
val eval at step 17000: map@0.50 = 0.17933 - map@0.75 = 0.02410
  > Step 17001 (epoch 422): loss 1 = 0.12889, loss 2 = 0.17316
  > Step 17251 (epoch 428): loss 1 = 0.15530, loss 2 = 0.13631
val eval at step 17500: map@0.50 = 0.15290 - map@0.75 = 0.02273
  > Step 17501 (epoch 434): loss 1 = 0.18595, loss 2 = 0.17981
  > Step 17751 (epoch 441): loss 1 = 0.19932, loss 2 = 0.17663
val eval at step 18000: map@0.50 = 0.17608 - map@0.75 = 0.01014
  > Step 18001 (epoch 447): loss 1 = 0.20381, loss 2 = 0.15797
  > Step 18251 (epoch 453): loss 1 = 0.23962, loss 2 = 0.17275
val eval at step 18500: map@0.50 = 0.15615 - map@0.75 = 0.03168
  > Step 18501 (epoch 459): loss 1 = 0.23258, loss 2 = 0.15433
  > Step 18751 (epoch 465): loss 1 = 0.13565, loss 2 = 0.19368
val eval at step 19000: map@0.50 = 0.08984 - map@0.75 = 0.03276
  > Step 19001 (epoch 472): loss 1 = 0.14224, loss 2 = 0.15618
  > Step 19251 (epoch 478): loss 1 = 0.16459, loss 2 = 0.17401
val eval at step 19500: map@0.50 = 0.15197 - map@0.75 = 0.03093
  > Step 19501 (epoch 484): loss 1 = 0.12084, loss 2 = 0.14821
  > Step 19751 (epoch 490): loss 1 = 0.14361, loss 2 = 0.17706
val eval at step 20000: map@0.50 = 0.16119 - map@0.75 = 0.01677
  > Step 20001 (epoch 496): loss 1 = 0.16253, loss 2 = 0.16084
  > Step 20251 (epoch 503): loss 1 = 0.15307, loss 2 = 0.17595
val eval at step 20500: map@0.50 = 0.12295 - map@0.75 = 0.01570
  > Step 20501 (epoch 509): loss 1 = 0.21807, loss 2 = 0.15789
  > Step 20751 (epoch 515): loss 1 = 0.14178, loss 2 = 0.15784
val eval at step 21000: map@0.50 = 0.12907 - map@0.75 = 0.00876
  > Step 21001 (epoch 521): loss 1 = 0.16095, loss 2 = 0.16490
  > Step 21251 (epoch 527): loss 1 = 0.17597, loss 2 = 0.14306
val eval at step 21500: map@0.50 = 0.13431 - map@0.75 = 0.02342
  > Step 21501 (epoch 534): loss 1 = 0.22737, loss 2 = 0.10972
  > Step 21751 (epoch 540): loss 1 = 0.16853, loss 2 = 0.11910
val eval at step 22000: map@0.50 = 0.12586 - map@0.75 = 0.01309
  > Step 22001 (epoch 546): loss 1 = 0.13407, loss 2 = 0.16889
  > Step 22251 (epoch 552): loss 1 = 0.19113, loss 2 = 0.14941
val eval at step 22500: map@0.50 = 0.14696 - map@0.75 = 0.02983
  > Step 22501 (epoch 558): loss 1 = 0.18487, loss 2 = 0.13728
  > Step 22751 (epoch 565): loss 1 = 0.18423, loss 2 = 0.12566
val eval at step 23000: map@0.50 = 0.15132 - map@0.75 = 0.00789
  > Step 23001 (epoch 571): loss 1 = 0.15396, loss 2 = 0.13327
  > Step 23251 (epoch 577): loss 1 = 0.15740, loss 2 = 0.15848
val eval at step 23500: map@0.50 = 0.17130 - map@0.75 = 0.01271
  > Step 23501 (epoch 583): loss 1 = 0.27375, loss 2 = 0.18420
  > Step 23751 (epoch 589): loss 1 = 0.18278, loss 2 = 0.15297
val eval at step 24000: map@0.50 = 0.16379 - map@0.75 = 0.03650
  > Step 24001 (epoch 596): loss 1 = 0.17811, loss 2 = 0.09584
test eval at step 24200: map@0.50 = 0.12833 - map@0.75 = 0.02996
