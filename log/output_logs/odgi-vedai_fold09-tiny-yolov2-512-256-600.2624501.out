============================================================== FOLD 09
Tensorflow version 1.10.1
ODGI - vedai_fold09, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold09
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.0008
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold09
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold09_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold09_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold09_val
   using grid size [16 16]
   using grid size [8 8]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 8, 8, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 8.00e-04
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold09/tiny-yolov2_odgi_512_256/09-28_10-15

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold09/tiny-yolov2_odgi_512_256/09-28_10-15[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 10.38214, loss 2 = 9.26409
  > Step 251 (epoch 7): loss 1 = 0.82491, loss 2 = 1.19319
val eval at step 500: map@0.50 = 0.15374 - map@0.75 = 0.03929
  > Step 501 (epoch 13): loss 1 = 0.58464, loss 2 = 0.87269
  > Step 751 (epoch 19): loss 1 = 0.47211, loss 2 = 1.25084
val eval at step 1000: map@0.50 = 0.27295 - map@0.75 = 0.04695
  > Step 1001 (epoch 25): loss 1 = 0.26498, loss 2 = 0.79620
  > Step 1251 (epoch 32): loss 1 = 0.23182, loss 2 = 0.95633
val eval at step 1500: map@0.50 = 0.36655 - map@0.75 = 0.09468
  > Step 1501 (epoch 38): loss 1 = 0.22371, loss 2 = 0.81215
  > Step 1751 (epoch 44): loss 1 = 0.18965, loss 2 = 0.67355
val eval at step 2000: map@0.50 = 0.41240 - map@0.75 = 0.11627
  > Step 2001 (epoch 50): loss 1 = 0.18887, loss 2 = 0.68651
  > Step 2251 (epoch 56): loss 1 = 0.28358, loss 2 = 0.91789
val eval at step 2500: map@0.50 = 0.45308 - map@0.75 = 0.17551
  > Step 2501 (epoch 63): loss 1 = 0.21488, loss 2 = 0.85245
  > Step 2751 (epoch 69): loss 1 = 0.12519, loss 2 = 0.68892
val eval at step 3000: map@0.50 = 0.50980 - map@0.75 = 0.20386
  > Step 3001 (epoch 75): loss 1 = 0.38977, loss 2 = 1.02865
  > Step 3251 (epoch 81): loss 1 = 0.16296, loss 2 = 0.85704
val eval at step 3500: map@0.50 = 0.54325 - map@0.75 = 0.18206
  > Step 3501 (epoch 87): loss 1 = 0.16465, loss 2 = 0.63237
  > Step 3751 (epoch 94): loss 1 = 0.14840, loss 2 = 0.69056
val eval at step 4000: map@0.50 = 0.54791 - map@0.75 = 0.24060
  > Step 4001 (epoch 100): loss 1 = 0.16172, loss 2 = 0.63794
  > Step 4251 (epoch 106): loss 1 = 0.13565, loss 2 = 0.62171
val eval at step 4500: map@0.50 = 0.55038 - map@0.75 = 0.23788
  > Step 4501 (epoch 112): loss 1 = 0.21223, loss 2 = 0.79222
  > Step 4751 (epoch 118): loss 1 = 0.12273, loss 2 = 0.73411
val eval at step 5000: map@0.50 = 0.50231 - map@0.75 = 0.17340
  > Step 5001 (epoch 124): loss 1 = 0.10444, loss 2 = 0.65634
  > Step 5251 (epoch 131): loss 1 = 0.13356, loss 2 = 1.01147
val eval at step 5500: map@0.50 = 0.62482 - map@0.75 = 0.29157
  > Step 5501 (epoch 137): loss 1 = 0.14793, loss 2 = 0.56921
  > Step 5751 (epoch 143): loss 1 = 0.09602, loss 2 = 0.56991
val eval at step 6000: map@0.50 = 0.63545 - map@0.75 = 0.31684
  > Step 6001 (epoch 149): loss 1 = 0.09297, loss 2 = 0.61859
  > Step 6251 (epoch 155): loss 1 = 0.12731, loss 2 = 0.72502
val eval at step 6500: map@0.50 = 0.60690 - map@0.75 = 0.29414
  > Step 6501 (epoch 162): loss 1 = 0.09744, loss 2 = 0.74717
  > Step 6751 (epoch 168): loss 1 = 0.13265, loss 2 = 0.71974
val eval at step 7000: map@0.50 = 0.62778 - map@0.75 = 0.31861
  > Step 7001 (epoch 174): loss 1 = 0.09920, loss 2 = 0.64765
  > Step 7251 (epoch 180): loss 1 = 0.18130, loss 2 = 0.66977
val eval at step 7500: map@0.50 = 0.64088 - map@0.75 = 0.33642
  > Step 7501 (epoch 186): loss 1 = 0.17029, loss 2 = 0.92295
  > Step 7751 (epoch 193): loss 1 = 0.16475, loss 2 = 0.84537
val eval at step 8000: map@0.50 = 0.63180 - map@0.75 = 0.35239
  > Step 8001 (epoch 199): loss 1 = 0.11911, loss 2 = 0.79556
  > Step 8251 (epoch 205): loss 1 = 0.07986, loss 2 = 0.71461
val eval at step 8500: map@0.50 = 0.68161 - map@0.75 = 0.37123
  > Step 8501 (epoch 211): loss 1 = 0.07980, loss 2 = 0.73120
  > Step 8751 (epoch 217): loss 1 = 0.07040, loss 2 = 0.58255
val eval at step 9000: map@0.50 = 0.61800 - map@0.75 = 0.28896
  > Step 9001 (epoch 224): loss 1 = 0.11508, loss 2 = 0.92313
  > Step 9251 (epoch 230): loss 1 = 0.09168, loss 2 = 0.66537
val eval at step 9500: map@0.50 = 0.65831 - map@0.75 = 0.32776
  > Step 9501 (epoch 236): loss 1 = 0.14371, loss 2 = 0.74581
  > Step 9751 (epoch 242): loss 1 = 0.07191, loss 2 = 0.58952
val eval at step 10000: map@0.50 = 0.69734 - map@0.75 = 0.38586
  > Step 10001 (epoch 248): loss 1 = 0.09086, loss 2 = 0.57002
  > Step 10251 (epoch 255): loss 1 = 0.25893, loss 2 = 0.86488
val eval at step 10500: map@0.50 = 0.61303 - map@0.75 = 0.29748
  > Step 10501 (epoch 261): loss 1 = 0.06026, loss 2 = 0.59213
  > Step 10751 (epoch 267): loss 1 = 0.08739, loss 2 = 0.80563
val eval at step 11000: map@0.50 = 0.62675 - map@0.75 = 0.32076
  > Step 11001 (epoch 273): loss 1 = 0.15994, loss 2 = 0.75607
  > Step 11251 (epoch 279): loss 1 = 0.12628, loss 2 = 0.72936
val eval at step 11500: map@0.50 = 0.68777 - map@0.75 = 0.39392
  > Step 11501 (epoch 286): loss 1 = 0.07498, loss 2 = 0.67200
  > Step 11751 (epoch 292): loss 1 = 0.05809, loss 2 = 0.62840
val eval at step 12000: map@0.50 = 0.64377 - map@0.75 = 0.36728
  > Step 12001 (epoch 298): loss 1 = 0.07357, loss 2 = 0.68462
  > Step 12251 (epoch 304): loss 1 = 0.04764, loss 2 = 0.65169
val eval at step 12500: map@0.50 = 0.66398 - map@0.75 = 0.35260
  > Step 12501 (epoch 310): loss 1 = 0.05930, loss 2 = 0.65332
  > Step 12751 (epoch 317): loss 1 = 0.04988, loss 2 = 0.58599
val eval at step 13000: map@0.50 = 0.65420 - map@0.75 = 0.39185
  > Step 13001 (epoch 323): loss 1 = 0.07102, loss 2 = 0.65698
  > Step 13251 (epoch 329): loss 1 = 0.15181, loss 2 = 0.87280
val eval at step 13500: map@0.50 = 0.64211 - map@0.75 = 0.41160
  > Step 13501 (epoch 335): loss 1 = 0.05007, loss 2 = 0.61082
  > Step 13751 (epoch 341): loss 1 = 0.04460, loss 2 = 0.56014
val eval at step 14000: map@0.50 = 0.66096 - map@0.75 = 0.38368
  > Step 14001 (epoch 348): loss 1 = 0.04459, loss 2 = 0.54350
  > Step 14251 (epoch 354): loss 1 = 0.04854, loss 2 = 0.51439
val eval at step 14500: map@0.50 = 0.61031 - map@0.75 = 0.37148
  > Step 14501 (epoch 360): loss 1 = 0.06498, loss 2 = 0.66023
  > Step 14751 (epoch 366): loss 1 = 0.06234, loss 2 = 0.56564
val eval at step 15000: map@0.50 = 0.56613 - map@0.75 = 0.26927
  > Step 15001 (epoch 372): loss 1 = 0.29835, loss 2 = 0.93155
  > Step 15251 (epoch 379): loss 1 = 0.08914, loss 2 = 0.57190
val eval at step 15500: map@0.50 = 0.67487 - map@0.75 = 0.36972
  > Step 15501 (epoch 385): loss 1 = 0.05317, loss 2 = 0.63353
  > Step 15751 (epoch 391): loss 1 = 0.04119, loss 2 = 0.63954
val eval at step 16000: map@0.50 = 0.65442 - map@0.75 = 0.35952
  > Step 16001 (epoch 397): loss 1 = 0.05600, loss 2 = 0.66693
  > Step 16251 (epoch 403): loss 1 = 0.05447, loss 2 = 0.61735
val eval at step 16500: map@0.50 = 0.67425 - map@0.75 = 0.36818
  > Step 16501 (epoch 410): loss 1 = 0.04482, loss 2 = 0.66610
  > Step 16751 (epoch 416): loss 1 = 0.03512, loss 2 = 0.55039
val eval at step 17000: map@0.50 = 0.64431 - map@0.75 = 0.33641
  > Step 17001 (epoch 422): loss 1 = 0.04032, loss 2 = 0.57353
  > Step 17251 (epoch 428): loss 1 = 0.06367, loss 2 = 0.60427
val eval at step 17500: map@0.50 = 0.66782 - map@0.75 = 0.35793
  > Step 17501 (epoch 434): loss 1 = 0.05635, loss 2 = 0.63912
  > Step 17751 (epoch 441): loss 1 = 0.05654, loss 2 = 0.67831
val eval at step 18000: map@0.50 = 0.67819 - map@0.75 = 0.35285
  > Step 18001 (epoch 447): loss 1 = 0.06657, loss 2 = 0.73746
  > Step 18251 (epoch 453): loss 1 = 0.06643, loss 2 = 0.70477
val eval at step 18500: map@0.50 = 0.67771 - map@0.75 = 0.40417
  > Step 18501 (epoch 459): loss 1 = 0.06437, loss 2 = 0.67434
  > Step 18751 (epoch 465): loss 1 = 0.05581, loss 2 = 0.68824
val eval at step 19000: map@0.50 = 0.65391 - map@0.75 = 0.37115
  > Step 19001 (epoch 472): loss 1 = 0.05059, loss 2 = 0.65727
  > Step 19251 (epoch 478): loss 1 = 0.08747, loss 2 = 0.61217
val eval at step 19500: map@0.50 = 0.63952 - map@0.75 = 0.38130
  > Step 19501 (epoch 484): loss 1 = 0.10796, loss 2 = 0.73139
  > Step 19751 (epoch 490): loss 1 = 0.04669, loss 2 = 0.49728
val eval at step 20000: map@0.50 = 0.62888 - map@0.75 = 0.34647
  > Step 20001 (epoch 496): loss 1 = 0.04936, loss 2 = 0.56075
  > Step 20251 (epoch 503): loss 1 = 0.04186, loss 2 = 0.49621
val eval at step 20500: map@0.50 = 0.64735 - map@0.75 = 0.41475
  > Step 20501 (epoch 509): loss 1 = 0.04833, loss 2 = 0.61385
  > Step 20751 (epoch 515): loss 1 = 0.06453, loss 2 = 0.73269
val eval at step 21000: map@0.50 = 0.65802 - map@0.75 = 0.39817
  > Step 21001 (epoch 521): loss 1 = 0.03758, loss 2 = 0.55076
  > Step 21251 (epoch 527): loss 1 = 0.03539, loss 2 = 0.57480
val eval at step 21500: map@0.50 = 0.65855 - map@0.75 = 0.37755
  > Step 21501 (epoch 534): loss 1 = 0.11769, loss 2 = 0.88922
  > Step 21751 (epoch 540): loss 1 = 0.09628, loss 2 = 0.89878
val eval at step 22000: map@0.50 = 0.65304 - map@0.75 = 0.38991
  > Step 22001 (epoch 546): loss 1 = 0.03879, loss 2 = 0.59418
  > Step 22251 (epoch 552): loss 1 = 0.04659, loss 2 = 0.66784
val eval at step 22500: map@0.50 = 0.68737 - map@0.75 = 0.44468
  > Step 22501 (epoch 558): loss 1 = 0.26658, loss 2 = 0.94305
  > Step 22751 (epoch 565): loss 1 = 0.04857, loss 2 = 0.64174
val eval at step 23000: map@0.50 = 0.63566 - map@0.75 = 0.39620
  > Step 23001 (epoch 571): loss 1 = 0.06085, loss 2 = 0.60692
  > Step 23251 (epoch 577): loss 1 = 0.06086, loss 2 = 0.75401
val eval at step 23500: map@0.50 = 0.65145 - map@0.75 = 0.39705
  > Step 23501 (epoch 583): loss 1 = 0.04914, loss 2 = 0.62891
  > Step 23751 (epoch 589): loss 1 = 0.05430, loss 2 = 0.64117
val eval at step 24000: map@0.50 = 0.66841 - map@0.75 = 0.42559
  > Step 24001 (epoch 596): loss 1 = 0.03643, loss 2 = 0.63447
test eval at step 24200: map@0.50 = 0.65616 - map@0.75 = 0.37741
