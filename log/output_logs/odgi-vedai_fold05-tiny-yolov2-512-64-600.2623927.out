============================================================== FOLD 05
Tensorflow version 1.10.1
ODGI - vedai_fold05, Input size 512

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold05
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold05
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold05_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold05_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold05_val
   using grid size [16 16]
   using grid size [2 2]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 512, 512, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 16, 16, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 16, 16, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 16, 16, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 16, 16, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 16, 16, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 64, 64, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 2, 2, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 2, 2, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 2, 2, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 2, 2, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 2, 2, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold05/tiny-yolov2_odgi_512_64/09-27_16-00

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold05/tiny-yolov2_odgi_512_64/09-27_16-00[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 6.49576, loss 2 = 13.65917
  > Step 251 (epoch 7): loss 1 = 0.64012, loss 2 = 1.67838
val eval at step 500: map@0.50 = 0.04851 - map@0.75 = 0.00405
  > Step 501 (epoch 13): loss 1 = 0.55920, loss 2 = 1.29190
  > Step 751 (epoch 19): loss 1 = 0.42500, loss 2 = 1.30634
val eval at step 1000: map@0.50 = 0.06295 - map@0.75 = 0.00533
  > Step 1001 (epoch 25): loss 1 = 0.31208, loss 2 = 1.20701
  > Step 1251 (epoch 32): loss 1 = 0.23635, loss 2 = 0.54332
val eval at step 1500: map@0.50 = 0.31382 - map@0.75 = 0.05281
  > Step 1501 (epoch 38): loss 1 = 0.19011, loss 2 = 0.53277
  > Step 1751 (epoch 44): loss 1 = 0.17615, loss 2 = 0.25792
val eval at step 2000: map@0.50 = 0.36283 - map@0.75 = 0.09966
  > Step 2001 (epoch 50): loss 1 = 0.22480, loss 2 = 0.42211
  > Step 2251 (epoch 56): loss 1 = 0.20474, loss 2 = 0.25740
val eval at step 2500: map@0.50 = 0.44659 - map@0.75 = 0.12806
  > Step 2501 (epoch 63): loss 1 = 0.19241, loss 2 = 0.30111
  > Step 2751 (epoch 69): loss 1 = 0.16188, loss 2 = 0.30887
val eval at step 3000: map@0.50 = 0.41748 - map@0.75 = 0.14945
  > Step 3001 (epoch 75): loss 1 = 0.14999, loss 2 = 0.31059
  > Step 3251 (epoch 81): loss 1 = 0.16008, loss 2 = 0.24347
val eval at step 3500: map@0.50 = 0.47210 - map@0.75 = 0.11510
  > Step 3501 (epoch 87): loss 1 = 0.15067, loss 2 = 0.27170
  > Step 3751 (epoch 94): loss 1 = 0.45090, loss 2 = 0.27152
val eval at step 4000: map@0.50 = 0.46911 - map@0.75 = 0.15551
  > Step 4001 (epoch 100): loss 1 = 0.17297, loss 2 = 0.23701
  > Step 4251 (epoch 106): loss 1 = 0.12720, loss 2 = 0.22639
val eval at step 4500: map@0.50 = 0.50375 - map@0.75 = 0.14050
  > Step 4501 (epoch 112): loss 1 = 0.10909, loss 2 = 0.21852
  > Step 4751 (epoch 118): loss 1 = 0.19742, loss 2 = 0.19397
val eval at step 5000: map@0.50 = 0.50842 - map@0.75 = 0.16066
  > Step 5001 (epoch 124): loss 1 = 0.13167, loss 2 = 0.17620
  > Step 5251 (epoch 131): loss 1 = 0.10423, loss 2 = 0.18918
val eval at step 5500: map@0.50 = 0.45478 - map@0.75 = 0.07760
  > Step 5501 (epoch 137): loss 1 = 0.12232, loss 2 = 0.19502
  > Step 5751 (epoch 143): loss 1 = 0.09846, loss 2 = 0.18702
val eval at step 6000: map@0.50 = 0.49624 - map@0.75 = 0.19097
  > Step 6001 (epoch 149): loss 1 = 0.08935, loss 2 = 0.20468
  > Step 6251 (epoch 155): loss 1 = 0.13244, loss 2 = 0.20772
val eval at step 6500: map@0.50 = 0.53542 - map@0.75 = 0.24768
  > Step 6501 (epoch 162): loss 1 = 0.18051, loss 2 = 0.14585
  > Step 6751 (epoch 168): loss 1 = 0.10788, loss 2 = 0.16341
val eval at step 7000: map@0.50 = 0.56936 - map@0.75 = 0.23550
  > Step 7001 (epoch 174): loss 1 = 0.11078, loss 2 = 0.14597
  > Step 7251 (epoch 180): loss 1 = 0.10132, loss 2 = 0.13976
val eval at step 7500: map@0.50 = 0.46837 - map@0.75 = 0.12813
  > Step 7501 (epoch 186): loss 1 = 0.08806, loss 2 = 0.13287
  > Step 7751 (epoch 193): loss 1 = 0.07581, loss 2 = 0.15562
val eval at step 8000: map@0.50 = 0.52728 - map@0.75 = 0.18233
  > Step 8001 (epoch 199): loss 1 = 0.09025, loss 2 = 0.15712
  > Step 8251 (epoch 205): loss 1 = 0.11936, loss 2 = 0.11876
val eval at step 8500: map@0.50 = 0.53830 - map@0.75 = 0.23342
  > Step 8501 (epoch 211): loss 1 = 0.07887, loss 2 = 0.15765
  > Step 8751 (epoch 217): loss 1 = 0.07755, loss 2 = 0.13697
val eval at step 9000: map@0.50 = 0.54941 - map@0.75 = 0.25120
  > Step 9001 (epoch 224): loss 1 = 0.06632, loss 2 = 0.09777
  > Step 9251 (epoch 230): loss 1 = 0.30791, loss 2 = 0.19969
val eval at step 9500: map@0.50 = 0.56821 - map@0.75 = 0.24572
  > Step 9501 (epoch 236): loss 1 = 0.11398, loss 2 = 0.11304
  > Step 9751 (epoch 242): loss 1 = 0.07676, loss 2 = 0.13349
val eval at step 10000: map@0.50 = 0.52626 - map@0.75 = 0.20494
  > Step 10001 (epoch 248): loss 1 = 0.08715, loss 2 = 0.13763
  > Step 10251 (epoch 255): loss 1 = 0.05820, loss 2 = 0.13701
val eval at step 10500: map@0.50 = 0.50763 - map@0.75 = 0.19834
  > Step 10501 (epoch 261): loss 1 = 0.16622, loss 2 = 0.15328
  > Step 10751 (epoch 267): loss 1 = 0.07485, loss 2 = 0.14543
val eval at step 11000: map@0.50 = 0.49987 - map@0.75 = 0.15769
  > Step 11001 (epoch 273): loss 1 = 0.08240, loss 2 = 0.12517
  > Step 11251 (epoch 279): loss 1 = 0.05893, loss 2 = 0.11294
val eval at step 11500: map@0.50 = 0.51962 - map@0.75 = 0.23091
  > Step 11501 (epoch 286): loss 1 = 0.08618, loss 2 = 0.07323
  > Step 11751 (epoch 292): loss 1 = 0.07676, loss 2 = 0.11268
val eval at step 12000: map@0.50 = 0.50242 - map@0.75 = 0.20330
  > Step 12001 (epoch 298): loss 1 = 0.06762, loss 2 = 0.11175
  > Step 12251 (epoch 304): loss 1 = 0.05700, loss 2 = 0.08945
val eval at step 12500: map@0.50 = 0.52983 - map@0.75 = 0.22450
  > Step 12501 (epoch 310): loss 1 = 0.07981, loss 2 = 0.09074
  > Step 12751 (epoch 317): loss 1 = 0.05088, loss 2 = 0.09021
val eval at step 13000: map@0.50 = 0.50294 - map@0.75 = 0.21843
  > Step 13001 (epoch 323): loss 1 = 0.06131, loss 2 = 0.12797
  > Step 13251 (epoch 329): loss 1 = 0.09956, loss 2 = 0.09613
val eval at step 13500: map@0.50 = 0.53730 - map@0.75 = 0.21701
  > Step 13501 (epoch 335): loss 1 = 0.08906, loss 2 = 0.08363
  > Step 13751 (epoch 341): loss 1 = 0.07923, loss 2 = 0.09931
val eval at step 14000: map@0.50 = 0.58214 - map@0.75 = 0.25591
  > Step 14001 (epoch 348): loss 1 = 0.12119, loss 2 = 0.13441
  > Step 14251 (epoch 354): loss 1 = 0.14634, loss 2 = 0.11503
val eval at step 14500: map@0.50 = 0.52164 - map@0.75 = 0.27041
  > Step 14501 (epoch 360): loss 1 = 0.13020, loss 2 = 0.11364
  > Step 14751 (epoch 366): loss 1 = 0.04006, loss 2 = 0.09289
val eval at step 15000: map@0.50 = 0.50474 - map@0.75 = 0.18701
  > Step 15001 (epoch 372): loss 1 = 0.04451, loss 2 = 0.07894
  > Step 15251 (epoch 379): loss 1 = 0.05201, loss 2 = 0.08517
val eval at step 15500: map@0.50 = 0.52829 - map@0.75 = 0.26345
  > Step 15501 (epoch 385): loss 1 = 0.06968, loss 2 = 0.07522
  > Step 15751 (epoch 391): loss 1 = 0.07175, loss 2 = 0.10167
val eval at step 16000: map@0.50 = 0.52123 - map@0.75 = 0.21121
  > Step 16001 (epoch 397): loss 1 = 0.04170, loss 2 = 0.04769
  > Step 16251 (epoch 403): loss 1 = 0.03541, loss 2 = 0.07625
val eval at step 16500: map@0.50 = 0.50359 - map@0.75 = 0.19699
  > Step 16501 (epoch 410): loss 1 = 0.04311, loss 2 = 0.06683
  > Step 16751 (epoch 416): loss 1 = 0.03491, loss 2 = 0.10621
val eval at step 17000: map@0.50 = 0.53520 - map@0.75 = 0.20443
  > Step 17001 (epoch 422): loss 1 = 0.05831, loss 2 = 0.10716
  > Step 17251 (epoch 428): loss 1 = 0.06313, loss 2 = 0.12466
val eval at step 17500: map@0.50 = 0.54075 - map@0.75 = 0.20606
  > Step 17501 (epoch 434): loss 1 = 0.04251, loss 2 = 0.08705
  > Step 17751 (epoch 441): loss 1 = 0.12882, loss 2 = 0.07476
val eval at step 18000: map@0.50 = 0.52981 - map@0.75 = 0.23226
  > Step 18001 (epoch 447): loss 1 = 0.05683, loss 2 = 0.06820
  > Step 18251 (epoch 453): loss 1 = 0.04773, loss 2 = 0.06875
val eval at step 18500: map@0.50 = 0.56419 - map@0.75 = 0.27382
  > Step 18501 (epoch 459): loss 1 = 0.04595, loss 2 = 0.08161
  > Step 18751 (epoch 465): loss 1 = 0.10870, loss 2 = 0.10101
val eval at step 19000: map@0.50 = 0.53949 - map@0.75 = 0.23769
  > Step 19001 (epoch 472): loss 1 = 0.11028, loss 2 = 0.10937
  > Step 19251 (epoch 478): loss 1 = 0.12692, loss 2 = 0.10452
val eval at step 19500: map@0.50 = 0.52751 - map@0.75 = 0.22959
  > Step 19501 (epoch 484): loss 1 = 0.05948, loss 2 = 0.11114
  > Step 19751 (epoch 490): loss 1 = 0.04694, loss 2 = 0.06919
val eval at step 20000: map@0.50 = 0.52773 - map@0.75 = 0.26177
  > Step 20001 (epoch 496): loss 1 = 0.11237, loss 2 = 0.09424
  > Step 20251 (epoch 503): loss 1 = 0.08332, loss 2 = 0.08197
val eval at step 20500: map@0.50 = 0.55127 - map@0.75 = 0.25514
  > Step 20501 (epoch 509): loss 1 = 0.07048, loss 2 = 0.15702
  > Step 20751 (epoch 515): loss 1 = 0.03873, loss 2 = 0.05403
val eval at step 21000: map@0.50 = 0.50543 - map@0.75 = 0.23502
  > Step 21001 (epoch 521): loss 1 = 0.04210, loss 2 = 0.05284
  > Step 21251 (epoch 527): loss 1 = 0.10468, loss 2 = 0.07057
val eval at step 21500: map@0.50 = 0.52950 - map@0.75 = 0.21756
  > Step 21501 (epoch 534): loss 1 = 0.02736, loss 2 = 0.07588
  > Step 21751 (epoch 540): loss 1 = 0.02820, loss 2 = 0.07229
val eval at step 22000: map@0.50 = 0.51420 - map@0.75 = 0.22332
  > Step 22001 (epoch 546): loss 1 = 0.04040, loss 2 = 0.07276
  > Step 22251 (epoch 552): loss 1 = 0.04890, loss 2 = 0.08338
val eval at step 22500: map@0.50 = 0.54469 - map@0.75 = 0.22728
  > Step 22501 (epoch 558): loss 1 = 0.04177, loss 2 = 0.06430
  > Step 22751 (epoch 565): loss 1 = 0.07251, loss 2 = 0.07884
val eval at step 23000: map@0.50 = 0.53538 - map@0.75 = 0.23796
  > Step 23001 (epoch 571): loss 1 = 0.04428, loss 2 = 0.06901
  > Step 23251 (epoch 577): loss 1 = 0.05501, loss 2 = 0.07215
val eval at step 23500: map@0.50 = 0.51730 - map@0.75 = 0.21679
  > Step 23501 (epoch 583): loss 1 = 0.02678, loss 2 = 0.05905
  > Step 23751 (epoch 589): loss 1 = 0.04635, loss 2 = 0.05826
val eval at step 24000: map@0.50 = 0.50822 - map@0.75 = 0.21791
  > Step 24001 (epoch 596): loss 1 = 0.07645, loss 2 = 0.06847
test eval at step 24200: map@0.50 = 0.56840 - map@0.75 = 0.23093
