============================================================== FOLD 07
Tensorflow version 1.10.1
ODGI - vedai_fold07, Input size 256

968 train samples (41 iters)
121 test samples (11 iters)

Config:
   [96mbatch_size:[0m 12
   [96mdata_classes:[0m ['camping car', 'car', 'others', 'pick-up', 'plane', 'ship', 'tractor', 'truck', 'van']
   [96mexp_name:[0m vedai_fold07
   [96mfeature_keys:[0m ['im_id', 'num_boxes', 'bounding_boxes', 'classes']
   [96mgpu_mem_frac:[0m 1.0
   [96mimage_folder:[0m /nfs/scistore12/chlgrp/aroyer/Datasets/VEDAI/Vehicules1024/
   [96mimage_format:[0m vedai
   [96mlearning_rate:[0m 0.001
   [96mnetwork:[0m tiny-yolov2
   [96mnum_classes:[0m 9
   [96mnum_epochs:[0m 600
   [96mnum_gpus:[0m 2
   [96msave_evaluation_steps:[0m 500
   [96msave_summaries_steps:[0m None
   [96msetting:[0m vedai_fold07
   [96mtest_max_num_bbs:[0m 19
   [96mtest_num_iters_per_epoch:[0m 11
   [96mtest_num_samples:[0m 121
   [96mtest_num_samples_per_iter:[0m 12
   [96mtest_tfrecords:[0m Data/vedai_fold07_test
   [96mtrain_max_num_bbs:[0m 19
   [96mtrain_num_iters_per_epoch:[0m 41
   [96mtrain_num_samples:[0m 968
   [96mtrain_num_samples_per_iter:[0m 24
   [96mtrain_tfrecords:[0m Data/vedai_fold07_train
   [96mval_max_num_bbs:[0m 19
   [96mval_num_samples:[0m 121
   [96mval_tfrecords:[0m Data/vedai_fold07_val
   using grid size [8 8]
   using grid size [4 4]

Graph:
    with default `num_threads` = 8
    with default `prefetch_capacity` = 1
    with default `with_classification` = False
    with default `shuffle_buffer` = 2000
    with default `data_augmentation_threshold` = 0.5
 [31m> load_inputs[0m
    [32mim_id[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mimage[0m: shape=[None, 256, 256, 3], dtype=<dtype: 'float32'>
    [32mnum_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mbounding_boxes[0m: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    [32mobj_i_mask_bbs[0m: shape=[None, 8, 8, 1, 19], dtype=<dtype: 'float32'>
    [32mgroup_bounding_boxes_per_cell[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32mnum_group_boxes[0m: shape=[None], dtype=<dtype: 'int32'>
    [32mgroup_flags[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32mis_flipped[0m: shape=[None], dtype=<dtype: 'float32'>
 [31m> stage1[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    Output layer shape *(?, 8, 8, 1, 8)*
    with default `train_patch_confidence_threshold` = 0.0
    with default `train_patch_nms_threshold` = 1.0
    with default `train_num_crops` = 10
  > extracting 10 crops
    with default `target_conf_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    with default `group_classification_loss_weight` = 1.0
    with default `offsets_loss_weight` = 1.0
    with default `offsets_margin` = 0.025
    [32m*confidence_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*offsets*[0m: shape=[None, 8, 8, 1, 2], dtype=<dtype: 'float32'>
    [32m*group_classification_logits*[0m: shape=[None, 8, 8, 1, 1], dtype=<dtype: 'float32'>
    [32m*crop_boxes*[0m: shape=[None, 10, 4], dtype=<dtype: 'float32'>
    [32m*crop_boxes_confidences*[0m: shape=[None, 10], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes_rescaled*[0m: shape=[None, 8, 8, 1, 4], dtype=<dtype: 'float32'>
 > create stage 2 inputs:
    with default `patch_intersection_ratio_threshold` = 0.33
    with default `shuffle_buffer` = 2000
    with default `num_threads` = 8
    *im_id*: shape=[None], dtype=<dtype: 'int32'>
    *image*: shape=[None, 128, 128, 3], dtype=<dtype: 'float32'>
    *bounding_boxes*: shape=[None, 19, 4], dtype=<dtype: 'float32'>
    *num_boxes*: shape=[None], dtype=<dtype: 'int32'>
    *obj_i_mask_bbs*: shape=[None, 4, 4, 1, 19], dtype=<dtype: 'float32'>
 [31m> stage2[0m
    with default `weight_decay` = 0.0
    with default `normalizer_decay` = 0.9
    with default `with_classification` = False
    with default `with_group_flags` = False
    with default `with_offsets` = False
    Output layer shape *(?, 4, 4, 1, 5)*
    with default `target_conf_fn` = iou
    with default `assignment_reward_fn` = iou
    with default `centers_localization_loss_weight` = 1.0
    with default `scales_localization_loss_weight` = 1.0
    with default `confidence_loss_weight` = 5.0
    with default `noobj_confidence_loss_weight` = 1.0
    [32m*confidence_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*detection_scores*[0m: shape=[None, 4, 4, 1, 1], dtype=<dtype: 'float32'>
    [32m*shifted_centers*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*log_scales*[0m: shape=[None, 4, 4, 1, 2], dtype=<dtype: 'float32'>
    [32m*bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>
    [32m*target_bounding_boxes*[0m: shape=[None, 4, 4, 1, 4], dtype=<dtype: 'float32'>

Losses:
 [31m> Collecting losses[0m (scopes: stage1, stage2)

    Scope stage1
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage1/tinyyolov2_net/conv1/weights:0, stage1/tinyyolov2_net/conv1/BatchNorm/beta:0, stage1/tinyyolov2_net/conv2/weights:0, stage1/tinyyolov2_net/conv2/BatchNorm/beta:0, stage1/tinyyolov2_net/conv3/weights:0, stage1/tinyyolov2_net/conv3/BatchNorm/beta:0, stage1/tinyyolov2_net/conv4/weights:0, stage1/tinyyolov2_net/conv4/BatchNorm/beta:0, stage1/tinyyolov2_net/conv5/weights:0, stage1/tinyyolov2_net/conv5/BatchNorm/beta:0, stage1/tinyyolov2_net/conv6/weights:0, stage1/tinyyolov2_net/conv6/BatchNorm/beta:0, stage1/tinyyolov2_net/conv7/weights:0, stage1/tinyyolov2_net/conv7/BatchNorm/beta:0, stage1/tinyyolov2_net/conv_out_2/weights:0, stage1/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage1/yolov2_odgi_out/out_conv/kernel:0, stage1/yolov2_odgi_out/out_conv/bias:0

    Scope stage2
        *stage1_centers_localization_loss*: 2 tensors
        *stage1_scales_localization_loss*: 2 tensors
        *stage1_confidence_obj_loss*: 2 tensors
        *stage1_confidence_noobj_loss*: 2 tensors
        *stage1_group_classification_loss*: 2 tensors
        *stage1_classification_loss*: 2 tensors
        *stage1_offsets_loss*: 2 tensors
        *stage2_centers_localization_loss*: 2 tensors
        *stage2_scales_localization_loss*: 2 tensors
        *stage2_confidence_obj_loss*: 2 tensors
        *stage2_confidence_noobj_loss*: 2 tensors
        *stage2_classification_loss*: 2 tensors
        stage2/tinyyolov2_net/conv1/weights:0, stage2/tinyyolov2_net/conv1/BatchNorm/beta:0, stage2/tinyyolov2_net/conv2/weights:0, stage2/tinyyolov2_net/conv2/BatchNorm/beta:0, stage2/tinyyolov2_net/conv3/weights:0, stage2/tinyyolov2_net/conv3/BatchNorm/beta:0, stage2/tinyyolov2_net/conv4/weights:0, stage2/tinyyolov2_net/conv4/BatchNorm/beta:0, stage2/tinyyolov2_net/conv5/weights:0, stage2/tinyyolov2_net/conv5/BatchNorm/beta:0, stage2/tinyyolov2_net/conv6/weights:0, stage2/tinyyolov2_net/conv6/BatchNorm/beta:0, stage2/tinyyolov2_net/conv7/weights:0, stage2/tinyyolov2_net/conv7/BatchNorm/beta:0, stage2/tinyyolov2_net/conv_out_2/weights:0, stage2/tinyyolov2_net/conv_out_2/BatchNorm/beta:0, stage2/yolov2_odgi_out/out_conv/kernel:0, stage2/yolov2_odgi_out/out_conv/bias:0
 [31m> Build train operation[0m
    with default `optimizer` = ADAM
    Using optimizer ADAM with learning rate 1.00e-03
    with default `beta1` = 0.9
    64 update operations found

total graph size: 0.98 MB
    with default `base_log_dir` = ./log
    Log directory /nfs/scistore12/chlgrp/aroyer/Jupyter/ODGI/log/vedai_fold07/tiny-yolov2_odgi_256_128/09-28_16-43

Launch session:
    with default `max_to_keep` = 1
    with default `save_checkpoint_steps` = 2000
    [31mWarning:[0m No summaries found in collection "outputs"
    [31mWarning:[0m No summaries found in collection "config"
    saving checkpoint in [36m./log/vedai_fold07/tiny-yolov2_odgi_256_128/09-28_16-43[0m

Start training:
  > Step 1 (epoch 1): loss 1 = 5.93048, loss 2 = 13.00724
  > Step 251 (epoch 7): loss 1 = 0.75560, loss 2 = 0.76310
val eval at step 500: map@0.50 = 0.03254 - map@0.75 = 0.00207
  > Step 501 (epoch 13): loss 1 = 0.51596, loss 2 = 0.51954
  > Step 751 (epoch 19): loss 1 = 0.32386, loss 2 = 0.41641
val eval at step 1000: map@0.50 = 0.07568 - map@0.75 = 0.02016
  > Step 1001 (epoch 25): loss 1 = 0.33024, loss 2 = 0.44297
  > Step 1251 (epoch 32): loss 1 = 0.33686, loss 2 = 0.40114
val eval at step 1500: map@0.50 = 0.15809 - map@0.75 = 0.00797
  > Step 1501 (epoch 38): loss 1 = 0.20830, loss 2 = 0.38797
  > Step 1751 (epoch 44): loss 1 = 0.19821, loss 2 = 0.39470
val eval at step 2000: map@0.50 = 0.16041 - map@0.75 = 0.01900
  > Step 2001 (epoch 50): loss 1 = 0.39934, loss 2 = 0.36279
  > Step 2251 (epoch 56): loss 1 = 0.21754, loss 2 = 0.39096
val eval at step 2500: map@0.50 = 0.23271 - map@0.75 = 0.04270
  > Step 2501 (epoch 63): loss 1 = 0.19056, loss 2 = 0.34545
  > Step 2751 (epoch 69): loss 1 = 0.20360, loss 2 = 0.36707
val eval at step 3000: map@0.50 = 0.30035 - map@0.75 = 0.06785
  > Step 3001 (epoch 75): loss 1 = 0.23798, loss 2 = 0.31163
  > Step 3251 (epoch 81): loss 1 = 0.21931, loss 2 = 0.33080
val eval at step 3500: map@0.50 = 0.27108 - map@0.75 = 0.05291
  > Step 3501 (epoch 87): loss 1 = 0.20054, loss 2 = 0.38913
  > Step 3751 (epoch 94): loss 1 = 0.25600, loss 2 = 0.29164
val eval at step 4000: map@0.50 = 0.32195 - map@0.75 = 0.06880
  > Step 4001 (epoch 100): loss 1 = 0.27075, loss 2 = 0.27967
  > Step 4251 (epoch 106): loss 1 = 0.18218, loss 2 = 0.32447
val eval at step 4500: map@0.50 = 0.36650 - map@0.75 = 0.10266
  > Step 4501 (epoch 112): loss 1 = 0.16568, loss 2 = 0.26688
  > Step 4751 (epoch 118): loss 1 = 0.15485, loss 2 = 0.26700
val eval at step 5000: map@0.50 = 0.37169 - map@0.75 = 0.04937
  > Step 5001 (epoch 124): loss 1 = 0.21134, loss 2 = 0.30146
  > Step 5251 (epoch 131): loss 1 = 0.19283, loss 2 = 0.31545
val eval at step 5500: map@0.50 = 0.25394 - map@0.75 = 0.04250
  > Step 5501 (epoch 137): loss 1 = 0.23513, loss 2 = 0.31793
  > Step 5751 (epoch 143): loss 1 = 0.22610, loss 2 = 0.30140
val eval at step 6000: map@0.50 = 0.35576 - map@0.75 = 0.04897
  > Step 6001 (epoch 149): loss 1 = 0.15983, loss 2 = 0.29488
  > Step 6251 (epoch 155): loss 1 = 0.17099, loss 2 = 0.31192
val eval at step 6500: map@0.50 = 0.43577 - map@0.75 = 0.11805
  > Step 6501 (epoch 162): loss 1 = 0.13950, loss 2 = 0.22116
  > Step 6751 (epoch 168): loss 1 = 0.15177, loss 2 = 0.25860
val eval at step 7000: map@0.50 = 0.42631 - map@0.75 = 0.13034
  > Step 7001 (epoch 174): loss 1 = 0.14650, loss 2 = 0.26137
  > Step 7251 (epoch 180): loss 1 = 0.13561, loss 2 = 0.19648
val eval at step 7500: map@0.50 = 0.48309 - map@0.75 = 0.14696
  > Step 7501 (epoch 186): loss 1 = 0.14517, loss 2 = 0.25304
  > Step 7751 (epoch 193): loss 1 = 0.17722, loss 2 = 0.24153
val eval at step 8000: map@0.50 = 0.42836 - map@0.75 = 0.12382
  > Step 8001 (epoch 199): loss 1 = 0.17520, loss 2 = 0.21551
  > Step 8251 (epoch 205): loss 1 = 0.18001, loss 2 = 0.25934
val eval at step 8500: map@0.50 = 0.38924 - map@0.75 = 0.10001
  > Step 8501 (epoch 211): loss 1 = 0.20971, loss 2 = 0.25442
  > Step 8751 (epoch 217): loss 1 = 0.15080, loss 2 = 0.20454
val eval at step 9000: map@0.50 = 0.46755 - map@0.75 = 0.15135
  > Step 9001 (epoch 224): loss 1 = 0.17132, loss 2 = 0.18885
  > Step 9251 (epoch 230): loss 1 = 0.13171, loss 2 = 0.20762
val eval at step 9500: map@0.50 = 0.44129 - map@0.75 = 0.10096
  > Step 9501 (epoch 236): loss 1 = 0.11636, loss 2 = 0.18962
  > Step 9751 (epoch 242): loss 1 = 0.08631, loss 2 = 0.20238
val eval at step 10000: map@0.50 = 0.44040 - map@0.75 = 0.15032
  > Step 10001 (epoch 248): loss 1 = 0.12824, loss 2 = 0.16938
  > Step 10251 (epoch 255): loss 1 = 0.13120, loss 2 = 0.22492
val eval at step 10500: map@0.50 = 0.51818 - map@0.75 = 0.15329
  > Step 10501 (epoch 261): loss 1 = 0.09315, loss 2 = 0.19987
  > Step 10751 (epoch 267): loss 1 = 0.09288, loss 2 = 0.18365
val eval at step 11000: map@0.50 = 0.46670 - map@0.75 = 0.18896
  > Step 11001 (epoch 273): loss 1 = 0.10843, loss 2 = 0.18842
  > Step 11251 (epoch 279): loss 1 = 0.12933, loss 2 = 0.16749
val eval at step 11500: map@0.50 = 0.39746 - map@0.75 = 0.11914
  > Step 11501 (epoch 286): loss 1 = 0.18873, loss 2 = 0.19227
  > Step 11751 (epoch 292): loss 1 = 0.11971, loss 2 = 0.21453
val eval at step 12000: map@0.50 = 0.46246 - map@0.75 = 0.15870
  > Step 12001 (epoch 298): loss 1 = 0.10037, loss 2 = 0.18568
  > Step 12251 (epoch 304): loss 1 = 0.11021, loss 2 = 0.18540
val eval at step 12500: map@0.50 = 0.48303 - map@0.75 = 0.18106
  > Step 12501 (epoch 310): loss 1 = 0.08859, loss 2 = 0.19802
  > Step 12751 (epoch 317): loss 1 = 0.10303, loss 2 = 0.16017
val eval at step 13000: map@0.50 = 0.49803 - map@0.75 = 0.13859
  > Step 13001 (epoch 323): loss 1 = 0.07710, loss 2 = 0.16158
  > Step 13251 (epoch 329): loss 1 = 0.13400, loss 2 = 0.18234
val eval at step 13500: map@0.50 = 0.52737 - map@0.75 = 0.21011
  > Step 13501 (epoch 335): loss 1 = 0.09445, loss 2 = 0.17627
  > Step 13751 (epoch 341): loss 1 = 0.07001, loss 2 = 0.16670
val eval at step 14000: map@0.50 = 0.50955 - map@0.75 = 0.20214
  > Step 14001 (epoch 348): loss 1 = 0.12125, loss 2 = 0.17210
  > Step 14251 (epoch 354): loss 1 = 0.20428, loss 2 = 0.24598
val eval at step 14500: map@0.50 = 0.48156 - map@0.75 = 0.16762
  > Step 14501 (epoch 360): loss 1 = 0.10891, loss 2 = 0.17065
  > Step 14751 (epoch 366): loss 1 = 0.09225, loss 2 = 0.18606
val eval at step 15000: map@0.50 = 0.51350 - map@0.75 = 0.18728
  > Step 15001 (epoch 372): loss 1 = 0.09015, loss 2 = 0.13989
  > Step 15251 (epoch 379): loss 1 = 0.08219, loss 2 = 0.18574
val eval at step 15500: map@0.50 = 0.49893 - map@0.75 = 0.15449
  > Step 15501 (epoch 385): loss 1 = 0.07802, loss 2 = 0.19202
  > Step 15751 (epoch 391): loss 1 = 0.08723, loss 2 = 0.14967
val eval at step 16000: map@0.50 = 0.49309 - map@0.75 = 0.19298
  > Step 16001 (epoch 397): loss 1 = 0.12740, loss 2 = 0.16948
  > Step 16251 (epoch 403): loss 1 = 0.07799, loss 2 = 0.15887
val eval at step 16500: map@0.50 = 0.47498 - map@0.75 = 0.15160
  > Step 16501 (epoch 410): loss 1 = 0.08929, loss 2 = 0.16921
  > Step 16751 (epoch 416): loss 1 = 0.07508, loss 2 = 0.16976
val eval at step 17000: map@0.50 = 0.44698 - map@0.75 = 0.16082
  > Step 17001 (epoch 422): loss 1 = 0.08793, loss 2 = 0.21593
  > Step 17251 (epoch 428): loss 1 = 0.08984, loss 2 = 0.17918
val eval at step 17500: map@0.50 = 0.49498 - map@0.75 = 0.15714
  > Step 17501 (epoch 434): loss 1 = 0.06714, loss 2 = 0.17364
  > Step 17751 (epoch 441): loss 1 = 0.07551, loss 2 = 0.14838
val eval at step 18000: map@0.50 = 0.44683 - map@0.75 = 0.19867
  > Step 18001 (epoch 447): loss 1 = 0.09876, loss 2 = 0.16715
  > Step 18251 (epoch 453): loss 1 = 0.10058, loss 2 = 0.13643
val eval at step 18500: map@0.50 = 0.48420 - map@0.75 = 0.18613
  > Step 18501 (epoch 459): loss 1 = 0.10323, loss 2 = 0.15686
  > Step 18751 (epoch 465): loss 1 = 0.07236, loss 2 = 0.16542
val eval at step 19000: map@0.50 = 0.47866 - map@0.75 = 0.17157
  > Step 19001 (epoch 472): loss 1 = 0.06973, loss 2 = 0.18470
  > Step 19251 (epoch 478): loss 1 = 0.12042, loss 2 = 0.17635
val eval at step 19500: map@0.50 = 0.42898 - map@0.75 = 0.14550
  > Step 19501 (epoch 484): loss 1 = 0.22910, loss 2 = 0.16625
  > Step 19751 (epoch 490): loss 1 = 0.13086, loss 2 = 0.15040
val eval at step 20000: map@0.50 = 0.50914 - map@0.75 = 0.21244
  > Step 20001 (epoch 496): loss 1 = 0.08168, loss 2 = 0.15557
  > Step 20251 (epoch 503): loss 1 = 0.13983, loss 2 = 0.17254
val eval at step 20500: map@0.50 = 0.46590 - map@0.75 = 0.17565
  > Step 20501 (epoch 509): loss 1 = 0.05004, loss 2 = 0.15973
  > Step 20751 (epoch 515): loss 1 = 0.08454, loss 2 = 0.18059
val eval at step 21000: map@0.50 = 0.43776 - map@0.75 = 0.18940
  > Step 21001 (epoch 521): loss 1 = 0.05711, loss 2 = 0.16313
  > Step 21251 (epoch 527): loss 1 = 0.09438, loss 2 = 0.16736
val eval at step 21500: map@0.50 = 0.50141 - map@0.75 = 0.19241
  > Step 21501 (epoch 534): loss 1 = 0.07824, loss 2 = 0.18886
  > Step 21751 (epoch 540): loss 1 = 0.05689, loss 2 = 0.18330
val eval at step 22000: map@0.50 = 0.48412 - map@0.75 = 0.20330
  > Step 22001 (epoch 546): loss 1 = 0.06354, loss 2 = 0.21699
  > Step 22251 (epoch 552): loss 1 = 0.06654, loss 2 = 0.20613
val eval at step 22500: map@0.50 = 0.44630 - map@0.75 = 0.19965
  > Step 22501 (epoch 558): loss 1 = 0.06397, loss 2 = 0.23100
  > Step 22751 (epoch 565): loss 1 = 0.07087, loss 2 = 0.14724
val eval at step 23000: map@0.50 = 0.47962 - map@0.75 = 0.17956
  > Step 23001 (epoch 571): loss 1 = 0.12162, loss 2 = 0.14916
  > Step 23251 (epoch 577): loss 1 = 0.08303, loss 2 = 0.15127
val eval at step 23500: map@0.50 = 0.47958 - map@0.75 = 0.22707
  > Step 23501 (epoch 583): loss 1 = 0.06911, loss 2 = 0.16884
  > Step 23751 (epoch 589): loss 1 = 0.06901, loss 2 = 0.15966
val eval at step 24000: map@0.50 = 0.43202 - map@0.75 = 0.21698
  > Step 24001 (epoch 596): loss 1 = 0.05307, loss 2 = 0.19777
test eval at step 24200: map@0.50 = 0.48587 - map@0.75 = 0.21100
